### YamlMime:UniversalReference
ms.openlocfilehash: 20629fabdfd6f519f4262eda48dc707512731099
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52026961"
items:
- uid: azure-cognitiveservices-face.LargePersonGroupPerson
  name: LargePersonGroupPerson
  fullName: LargePersonGroupPerson
  children:
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.create
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.get
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.list
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.update
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream
  name: addFaceFromStream(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-101">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-101">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-102">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-102">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-103">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-103">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-104">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-104">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2f03-105">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="e2f03-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_2
  name: addFaceFromStream(string, string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-106">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-106">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-107">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-107">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStream_1
  name: addFaceFromStream(string, string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-108">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-108">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-109">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-109">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStream(largePersonGroupId: string, personId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-110">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-110">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-111">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-111">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largePersonGroupId: string, personId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-112">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-112">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-113">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-113">Id referencing a particular person.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="e2f03-114">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="e2f03-114">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl
  name: addFaceFromUrl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-115">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-115">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-116">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-116">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-117">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-117">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-118">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-118">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-119">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="e2f03-119">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-120">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-120">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-121">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-121">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-122">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-122">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-123">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-123">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largePersonGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-124">Agregue una representante de cara a una persona para la identificación.</span><span class="sxs-lookup"><span data-stu-id="e2f03-124">Add a representative face to a person for identification.</span></span> <span data-ttu-id="e2f03-125">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="e2f03-125">The input face is specified as an image with a targetFace rectangle.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largePersonGroupId: string, personId: string, url: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-126">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-126">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-127">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-127">Id referencing a particular person.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-128">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="e2f03-128">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-129">Crear a una nueva persona en un grupo de persona grandes especificada.</span><span class="sxs-lookup"><span data-stu-id="e2f03-129">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-130">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-130">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_2
  name: create(string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-131">Crear a una nueva persona en un grupo de persona grandes especificada.</span><span class="sxs-lookup"><span data-stu-id="e2f03-131">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.create_1
  name: create(string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-132">Crear a una nueva persona en un grupo de persona grandes especificada.</span><span class="sxs-lookup"><span data-stu-id="e2f03-132">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function create(largePersonGroupId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-133">Crear a una nueva persona en un grupo de persona grandes especificada.</span><span class="sxs-lookup"><span data-stu-id="e2f03-133">Create a new person in a specified large person group.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-134">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-134">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace
  name: deleteFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-135">Eliminar una cara de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-135">Delete a face from a person.</span></span> <span data-ttu-id="e2f03-136">También se eliminará la característica relativa de la cara persistente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-136">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-137">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-137">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-138">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-138">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-139">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-139">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_2
  name: deleteFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-140">Eliminar una cara de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-140">Delete a face from a person.</span></span> <span data-ttu-id="e2f03-141">También se eliminará la característica relativa de la cara persistente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-141">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFace_1
  name: deleteFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-142">Eliminar una cara de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-142">Delete a face from a person.</span></span> <span data-ttu-id="e2f03-143">También se eliminará la característica relativa de la cara persistente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-143">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-144">Eliminar una cara de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-144">Delete a face from a person.</span></span> <span data-ttu-id="e2f03-145">También se eliminará la característica relativa de la cara persistente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-145">Relative feature for the persisted face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-146">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-146">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-147">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-147">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-148">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-149">Eliminar a una persona existente de un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-149">Delete an existing person from a large person group.</span></span> <span data-ttu-id="e2f03-150">Todos almacenan datos de la persona, y se eliminarán las características de cara de la entrada de la persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-150">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-151">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-151">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-152">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-152">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-153">Eliminar a una persona existente de un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-153">Delete an existing person from a large person group.</span></span> <span data-ttu-id="e2f03-154">Todos almacenan datos de la persona, y se eliminarán las características de cara de la entrada de la persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-154">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-155">Eliminar a una persona existente de un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-155">Delete an existing person from a large person group.</span></span> <span data-ttu-id="e2f03-156">Todos almacenan datos de la persona, y se eliminarán las características de cara de la entrada de la persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-156">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-157">Eliminar a una persona existente de un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-157">Delete an existing person from a large person group.</span></span> <span data-ttu-id="e2f03-158">Todos almacenan datos de la persona, y se eliminarán las características de cara de la entrada de la persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-158">All stored person data, and face features in the person entry will be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-159">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-159">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-160">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-160">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get
  name: get(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-161">Recuperar información de una persona, incluidos userData, nombre y caras persistentes registradas.</span><span class="sxs-lookup"><span data-stu-id="e2f03-161">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-162">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-162">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-163">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-163">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_2
  name: get(string, string, Object, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-164">Recuperar información de una persona, incluidos userData, nombre y caras persistentes registradas.</span><span class="sxs-lookup"><span data-stu-id="e2f03-164">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.get_1
  name: get(string, string, ServiceCallback<Person>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-165">Recuperar información de una persona, incluidos userData, nombre y caras persistentes registradas.</span><span class="sxs-lookup"><span data-stu-id="e2f03-165">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function get(largePersonGroupId: string, personId: string, callback: ServiceCallback<Person>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace
  name: getFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-166">Recuperar información acerca de una cara persistente (especificada por persistedFaceId, personId y su largePersonGroupId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="e2f03-166">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-167">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-167">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-168">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-168">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-169">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-169">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_2
  name: getFace(string, string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-170">Recuperar información acerca de una cara persistente (especificada por persistedFaceId, personId y su largePersonGroupId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="e2f03-170">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFace_1
  name: getFace(string, string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-171">Recuperar información acerca de una cara persistente (especificada por persistedFaceId, personId y su largePersonGroupId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="e2f03-171">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-172">Recuperar información acerca de una cara persistente (especificada por persistedFaceId, personId y su largePersonGroupId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="e2f03-172">Retrieve information about a persisted face (specified by persistedFaceId, personId and its belonging largePersonGroupId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-173">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-173">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-174">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-174">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-175">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-175">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-176">Recuperar información de una persona, incluidos userData, nombre y caras persistentes registradas.</span><span class="sxs-lookup"><span data-stu-id="e2f03-176">Retrieve a person's information, including registered persisted faces, name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-177">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-177">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-178">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-178">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list
  name: list(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-179">Enumerar a todas las personas en un grupo grande de persona y recuperar información de la persona (incluido personId, nombre, userData y persistedFaceIds de caras registradas de la persona).</span><span class="sxs-lookup"><span data-stu-id="e2f03-179">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-180">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-180">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_2
  name: list(string, Object, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-181">Enumerar a todas las personas en un grupo grande de persona y recuperar información de la persona (incluido personId, nombre, userData y persistedFaceIds de caras registradas de la persona).</span><span class="sxs-lookup"><span data-stu-id="e2f03-181">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, options: Object, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.list_1
  name: list(string, ServiceCallback<Person[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-182">Enumerar a todas las personas en un grupo grande de persona y recuperar información de la persona (incluido personId, nombre, userData y persistedFaceIds de caras registradas de la persona).</span><span class="sxs-lookup"><span data-stu-id="e2f03-182">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function list(largePersonGroupId: string, callback: ServiceCallback<Person[]>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.Person[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.Person[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-183">Enumerar a todas las personas en un grupo grande de persona y recuperar información de la persona (incluido personId, nombre, userData y persistedFaceIds de caras registradas de la persona).</span><span class="sxs-lookup"><span data-stu-id="e2f03-183">List all persons in a large person group, and retrieve person information (including personId, name, userData and persistedFaceIds of registered faces of the person).</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(largePersonGroupId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-184">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-184">Id referencing a particular large person group.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update
  name: update(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-185">Nombre de la actualización o userData de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-185">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-186">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-186">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-187">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-187">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_2
  name: update(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-188">Nombre de la actualización o userData de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-188">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.update_1
  name: update(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-189">Nombre de la actualización o userData de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-189">Update name or userData of a person.</span></span>
  syntax:
    content: 'function update(largePersonGroupId: string, personId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace
  name: updateFace(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-190">Actualización de una persona conserva el campo de rostro userData.</span><span class="sxs-lookup"><span data-stu-id="e2f03-190">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-191">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-191">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-192">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-192">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-193">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-193">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_2
  name: updateFace(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-194">Actualización de una persona conserva el campo de rostro userData.</span><span class="sxs-lookup"><span data-stu-id="e2f03-194">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFace_1
  name: updateFace(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-195">Actualización de una persona conserva el campo de rostro userData.</span><span class="sxs-lookup"><span data-stu-id="e2f03-195">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largePersonGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: ''
    - id: personId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-196">Actualización de una persona conserva el campo de rostro userData.</span><span class="sxs-lookup"><span data-stu-id="e2f03-196">Update a person persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largePersonGroupId: string, personId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-197">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-197">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-198">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-198">Id referencing a particular person.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-199">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="e2f03-199">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargePersonGroupPerson.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="e2f03-200">Nombre de la actualización o userData de una persona.</span><span class="sxs-lookup"><span data-stu-id="e2f03-200">Update name or userData of a person.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largePersonGroupId: string, personId: string, options?: Object)'
    parameters:
    - id: largePersonGroupId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-201">Id. que hacen referencia a un grupo grande persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-201">Id referencing a particular large person group.</span></span>
    - id: personId
      type:
      - string
      description: >
        <span data-ttu-id="e2f03-202">Id. que hacen referencia a una persona en particular.</span><span class="sxs-lookup"><span data-stu-id="e2f03-202">Id referencing a particular person.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person>
  name: Person>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person>>
  name: Person>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.Person[]>
  name: Person[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.Person[]>>
  name: Person[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Person
    fullName: Person
    uid: azure-cognitiveservices-face.Person
  - name: '[]>>'
    fullName: '[]>>'
