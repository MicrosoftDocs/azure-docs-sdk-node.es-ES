### YamlMime:UniversalReference
ms.openlocfilehash: df0978f5755a00a7fae228f8baf46e67a73649a0
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/12/2018
ms.locfileid: "40076379"
items:
- uid: azure-cognitiveservices-face.PersonGroup
  name: PersonGroup
  fullName: PersonGroup
  children:
  - azure-cognitiveservices-face.PersonGroup.create
  - azure-cognitiveservices-face.PersonGroup.create_1
  - azure-cognitiveservices-face.PersonGroup.create_2
  - azure-cognitiveservices-face.PersonGroup.createWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.deleteMethod
  - azure-cognitiveservices-face.PersonGroup.deleteMethod_2
  - azure-cognitiveservices-face.PersonGroup.deleteMethod_1
  - azure-cognitiveservices-face.PersonGroup.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.get
  - azure-cognitiveservices-face.PersonGroup.get_2
  - azure-cognitiveservices-face.PersonGroup.get_1
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatus
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatus_1
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatus_2
  - azure-cognitiveservices-face.PersonGroup.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.getWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.list_1
  - azure-cognitiveservices-face.PersonGroup.list_2
  - azure-cognitiveservices-face.PersonGroup.list
  - azure-cognitiveservices-face.PersonGroup.listWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.train
  - azure-cognitiveservices-face.PersonGroup.train_1
  - azure-cognitiveservices-face.PersonGroup.train_2
  - azure-cognitiveservices-face.PersonGroup.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.PersonGroup.update
  - azure-cognitiveservices-face.PersonGroup.update_1
  - azure-cognitiveservices-face.PersonGroup.update_2
  - azure-cognitiveservices-face.PersonGroup.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-101">Crear un nuevo grupo de persona con personGroupId especificado, el nombre y userData proporcionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="18573-101">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-102">PersonGroupId proporcionado por el usuario como una cadena.</span><span class="sxs-lookup"><span data-stu-id="18573-102">User-provided personGroupId as a string.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-103">Crear un nuevo grupo de persona con personGroupId especificado, el nombre y userData proporcionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="18573-103">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-104">Crear un nuevo grupo de persona con personGroupId especificado, el nombre y userData proporcionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="18573-104">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function create(personGroupId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-105">Crear un nuevo grupo de persona con personGroupId especificado, el nombre y userData proporcionado por el usuario.</span><span class="sxs-lookup"><span data-stu-id="18573-105">Create a new person group with specified personGroupId, name and user-provided userData.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-106">PersonGroupId proporcionado por el usuario como una cadena.</span><span class="sxs-lookup"><span data-stu-id="18573-106">User-provided personGroupId as a string.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-107">Eliminar un grupo existente de la persona.</span><span class="sxs-lookup"><span data-stu-id="18573-107">Delete an existing person group.</span></span> <span data-ttu-id="18573-108">Conserva la cara también se eliminarán las imágenes de todas las personas en el grupo de persona.</span><span class="sxs-lookup"><span data-stu-id="18573-108">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-109">PersonGroupId de la persona de grupo va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="18573-109">The personGroupId of the person group to be deleted.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-110">Eliminar un grupo existente de la persona.</span><span class="sxs-lookup"><span data-stu-id="18573-110">Delete an existing person group.</span></span> <span data-ttu-id="18573-111">Conserva la cara también se eliminarán las imágenes de todas las personas en el grupo de persona.</span><span class="sxs-lookup"><span data-stu-id="18573-111">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-112">Eliminar un grupo existente de la persona.</span><span class="sxs-lookup"><span data-stu-id="18573-112">Delete an existing person group.</span></span> <span data-ttu-id="18573-113">Conserva la cara también se eliminarán las imágenes de todas las personas en el grupo de persona.</span><span class="sxs-lookup"><span data-stu-id="18573-113">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-114">Eliminar un grupo existente de la persona.</span><span class="sxs-lookup"><span data-stu-id="18573-114">Delete an existing person group.</span></span> <span data-ttu-id="18573-115">Conserva la cara también se eliminarán las imágenes de todas las personas en el grupo de persona.</span><span class="sxs-lookup"><span data-stu-id="18573-115">Persisted face images of all people in the person group will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-116">PersonGroupId de la persona de grupo va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="18573-116">The personGroupId of the person group to be deleted.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-117">Recuperar la información de una persona del grupo, incluido su nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="18573-117">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-118">personGroupId la persona del grupo de destino.</span><span class="sxs-lookup"><span data-stu-id="18573-118">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-119">Recuperar la información de una persona del grupo, incluido su nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="18573-119">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, options: function, callback: ServiceCallback<PersonGroupResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-120">Recuperar la información de una persona del grupo, incluido su nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="18573-120">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function get(personGroupId: string, callback: ServiceCallback<PersonGroupResult>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatus
  name: getTrainingStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-121">Recuperar el estado de entrenamiento de un grupo de la persona (completado o en curso).</span><span class="sxs-lookup"><span data-stu-id="18573-121">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-122">personGroupId persona del grupo de destino.</span><span class="sxs-lookup"><span data-stu-id="18573-122">personGroupId of target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus1>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatus_1
  name: getTrainingStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-123">Recuperar el estado de entrenamiento de un grupo de la persona (completado o en curso).</span><span class="sxs-lookup"><span data-stu-id="18573-123">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, callback: ServiceCallback<TrainingStatus1>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus1>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus1>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatus_2
  name: getTrainingStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-124">Recuperar el estado de entrenamiento de un grupo de la persona (completado o en curso).</span><span class="sxs-lookup"><span data-stu-id="18573-124">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(personGroupId: string, options: function, callback: ServiceCallback<TrainingStatus1>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus1>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus1>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-125">Recuperar el estado de entrenamiento de un grupo de la persona (completado o en curso).</span><span class="sxs-lookup"><span data-stu-id="18573-125">Retrieve the training status of a person group (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-126">personGroupId persona del grupo de destino.</span><span class="sxs-lookup"><span data-stu-id="18573-126">personGroupId of target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus1>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-127">Recuperar la información de una persona del grupo, incluido su nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="18573-127">Retrieve the information of a person group, including its name and userData.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-128">personGroupId la persona del grupo de destino.</span><span class="sxs-lookup"><span data-stu-id="18573-128">personGroupId of the target person group.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-129">Lista de grupos de personas y su información.</span><span class="sxs-lookup"><span data-stu-id="18573-129">List person groups and their information.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<PersonGroupResult[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-130">Lista de grupos de personas y su información.</span><span class="sxs-lookup"><span data-stu-id="18573-130">List person groups and their information.</span></span>
  syntax:
    content: 'function list(options: function, callback: ServiceCallback<PersonGroupResult[]>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersonGroupResult[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-131">Lista de grupos de personas y su información.</span><span class="sxs-lookup"><span data-stu-id="18573-131">List person groups and their information.</span></span>
  syntax:
    content: 'function list(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-132">Lista de grupos de personas y su información.</span><span class="sxs-lookup"><span data-stu-id="18573-132">List person groups and their information.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.train
  name: train
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-133">Poner en cola una tarea de aprendizaje del grupo de persona, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="18573-133">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-134">Grupo de destino person a entrenarse.</span><span class="sxs-lookup"><span data-stu-id="18573-134">Target person group to be trained.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.train_1
  name: train
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-135">Poner en cola una tarea de aprendizaje del grupo de persona, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="18573-135">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.train_2
  name: train
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-136">Poner en cola una tarea de aprendizaje del grupo de persona, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="18573-136">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(personGroupId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="18573-137">Poner en cola una tarea de aprendizaje del grupo de persona, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="18573-137">Queue a person group training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-138">Grupo de destino person a entrenarse.</span><span class="sxs-lookup"><span data-stu-id="18573-138">Target person group to be trained.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"18573-139\">Actualice el nombre para mostrar de un grupo existente: persona y userData.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-139\">Update an existing person group's display name and userData.</span></span> <span data-ttu-id=\"18573-140\">No se actualizará las propiedades que no aparece en el cuerpo de la solicitud.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-140\">The properties which does not appear in request body will not be updated.</span></span>"
  syntax:
    content: 'function update(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-141">personGroupId de la persona del grupo a actualizarse.</span><span class="sxs-lookup"><span data-stu-id="18573-141">personGroupId of the person group to be updated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"18573-142\">Actualice el nombre para mostrar de un grupo existente: persona y userData.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-142\">Update an existing person group's display name and userData.</span></span> <span data-ttu-id=\"18573-143\">No se actualizará las propiedades que no aparece en el cuerpo de la solicitud.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-143\">The properties which does not appear in request body will not be updated.</span></span>"
  syntax:
    content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"18573-144\">Actualice el nombre para mostrar de un grupo existente: persona y userData.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-144\">Update an existing person group's display name and userData.</span></span> <span data-ttu-id=\"18573-145\">No se actualizará las propiedades que no aparece en el cuerpo de la solicitud.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-145\">The properties which does not appear in request body will not be updated.</span></span>"
  syntax:
    content: 'function update(personGroupId: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.PersonGroup.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: "<span data-ttu-id=\"18573-146\">Actualice el nombre para mostrar de un grupo existente: persona y userData.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-146\">Update an existing person group's display name and userData.</span></span> <span data-ttu-id=\"18573-147\">No se actualizará las propiedades que no aparece en el cuerpo de la solicitud.</span><span class=\"sxs-lookup\"><span data-stu-id=\"18573-147\">The properties which does not appear in request body will not be updated.</span></span>"
  syntax:
    content: 'function updateWithHttpOperationResponse(personGroupId: string, options?: function)'
    parameters:
    - id: personGroupId
      type:
      - string
      description: >
        <span data-ttu-id="18573-148">personGroupId de la persona del grupo a actualizarse.</span><span class="sxs-lookup"><span data-stu-id="18573-148">personGroupId of the person group to be updated.</span></span>
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersonGroupResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonGroupResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus1>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus1
    fullName: TrainingStatus1
    uid: azure-cognitiveservices-face.TrainingStatus1
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus1>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus1
    fullName: TrainingStatus1
    uid: azure-cognitiveservices-face.TrainingStatus1
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus1>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus1
    fullName: TrainingStatus1
    uid: azure-cognitiveservices-face.TrainingStatus1
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.PersonGroupResult[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersonGroupResult[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersonGroupResult[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersonGroupResult
    fullName: PersonGroupResult
    uid: azure-cognitiveservices-face.PersonGroupResult
  - name: '[]>>'
    fullName: '[]>>'
