### YamlMime:UniversalReference
ms.openlocfilehash: 145293f6ed7479b70bb9d3084353eda83a7bad33
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52038116"
items:
- uid: azure-cognitiveservices-face.LargeFaceListOperations
  name: LargeFaceListOperations
  fullName: LargeFaceListOperations
  children:
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  - azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.create
  - azure-cognitiveservices-face.LargeFaceListOperations.create_2
  - azure-cognitiveservices-face.LargeFaceListOperations.create_1
  - azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  - azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.get
  - azure-cognitiveservices-face.LargeFaceListOperations.get_2
  - azure-cognitiveservices-face.LargeFaceListOperations.get_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  - azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.list
  - azure-cognitiveservices-face.LargeFaceListOperations.list_2
  - azure-cognitiveservices-face.LargeFaceListOperations.list_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  - azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  - azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.train
  - azure-cognitiveservices-face.LargeFaceListOperations.train_2
  - azure-cognitiveservices-face.LargeFaceListOperations.train_1
  - azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.update
  - azure-cognitiveservices-face.LargeFaceListOperations.update_2
  - azure-cognitiveservices-face.LargeFaceListOperations.update_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  - azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  - azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream
  name: addFaceFromStream(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-101">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-101">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-102">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-102">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-103">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-103">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-104">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-104">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="2c4f2-105">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-105">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_2
  name: addFaceFromStream(string, stream.Readable, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-106">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-106">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-107">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-107">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-108">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStream_1
  name: addFaceFromStream(string, stream.Readable, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-109">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-109">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-110">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-110">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-111">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-111">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStream(largeFaceListId: string, image: stream.Readable, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromStreamWithHttpOperationResponse
  name: addFaceFromStreamWithHttpOperationResponse(string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-112">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-112">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-113">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-113">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-114">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-114">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromStreamWithHttpOperationResponse(largeFaceListId: string, image: stream.Readable, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-115">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-115">Id referencing a particular large face list.</span></span>
    - id: image
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="2c4f2-116">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-116">An image stream.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl
  name: addFaceFromUrl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-117">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-117">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-118">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-118">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-119">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-119">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-120">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-120">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-121">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="2c4f2-121">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_2
  name: addFaceFromUrl(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-122">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-122">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-123">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-123">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-124">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-124">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrl_1
  name: addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-125">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-125">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-126">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-126">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-127">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-127">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrl(largeFaceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.addFaceFromUrlWithHttpOperationResponse
  name: addFaceFromUrlWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-128">Agregar una cara a una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-128">Add a face to a large face list.</span></span> <span data-ttu-id="2c4f2-129">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-129">The input face is specified as an image with a targetFace rectangle.</span></span> <span data-ttu-id="2c4f2-130">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-130">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
  syntax:
    content: 'function addFaceFromUrlWithHttpOperationResponse(largeFaceListId: string, url: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-131">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-131">Id referencing a particular large face list.</span></span>
    - id: url
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-132">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="2c4f2-132">Publicly reachable URL of an image</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create
  name: create(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-133">Crear una lista vacía cara grandes.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-133">Create an empty large face list.</span></span> <span data-ttu-id="2c4f2-134">Hasta 64 caras grandes listas pueden existir en una suscripción.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-134">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-135">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-135">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_2
  name: create(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-136">Crear una lista vacía cara grandes.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-136">Create an empty large face list.</span></span> <span data-ttu-id="2c4f2-137">Hasta 64 caras grandes listas pueden existir en una suscripción.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-137">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.create_1
  name: create(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-138">Crear una lista vacía cara grandes.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-138">Create an empty large face list.</span></span> <span data-ttu-id="2c4f2-139">Hasta 64 caras grandes listas pueden existir en una suscripción.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-139">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function create(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-140">Crear una lista vacía cara grandes.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-140">Create an empty large face list.</span></span> <span data-ttu-id="2c4f2-141">Hasta 64 caras grandes listas pueden existir en una suscripción.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-141">Up to 64 large face lists are allowed to exist in one subscription.</span></span>
  syntax:
    content: 'function createWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-142">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-142">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace
  name: deleteFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-143">Eliminar una imagen existente de una lista de caras de gran tamaño (proporcionada por un persisitedFaceId y un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-143">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="2c4f2-144">También se eliminará la imagen permanente relacionados con la cara.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-144">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-145">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-145">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-146">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-146">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_2
  name: deleteFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-147">Eliminar una imagen existente de una lista de caras de gran tamaño (proporcionada por un persisitedFaceId y un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-147">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="2c4f2-148">También se eliminará la imagen permanente relacionados con la cara.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-148">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFace_1
  name: deleteFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-149">Eliminar una imagen existente de una lista de caras de gran tamaño (proporcionada por un persisitedFaceId y un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-149">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="2c4f2-150">También se eliminará la imagen permanente relacionados con la cara.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-150">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteFaceWithHttpOperationResponse
  name: deleteFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-151">Eliminar una imagen existente de una lista de caras de gran tamaño (proporcionada por un persisitedFaceId y un largeFaceListId).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-151">Delete an existing face from a large face list (given by a persisitedFaceId and a largeFaceListId).</span></span> <span data-ttu-id="2c4f2-152">También se eliminará la imagen permanente relacionados con la cara.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-152">Persisted image related to the face will also be deleted.</span></span>
  syntax:
    content: 'function deleteFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-153">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-153">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-154">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod
  name: deleteMethod(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-155">Eliminar una lista de caras grande existente según faceListId.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-155">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="2c4f2-156">Conserva la cara también se eliminarán las imágenes de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-156">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-157">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-157">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_2
  name: deleteMethod(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-158">Eliminar una lista de caras grande existente según faceListId.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-158">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="2c4f2-159">Conserva la cara también se eliminarán las imágenes de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-159">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethod_1
  name: deleteMethod(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-160">Eliminar una lista de caras grande existente según faceListId.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-160">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="2c4f2-161">Conserva la cara también se eliminarán las imágenes de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-161">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethod(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-162">Eliminar una lista de caras grande existente según faceListId.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-162">Delete an existing large face list according to faceListId.</span></span> <span data-ttu-id="2c4f2-163">Conserva la cara también se eliminarán las imágenes de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-163">Persisted face images in the large face list will also be deleted.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-164">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-164">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get
  name: get(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-165">Recuperar la información de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-165">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-166">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-166">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_2
  name: get(string, Object, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-167">Recuperar la información de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-167">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, options: Object, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.get_1
  name: get(string, ServiceCallback<LargeFaceList>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-168">Recuperar la información de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-168">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function get(largeFaceListId: string, callback: ServiceCallback<LargeFaceList>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace
  name: getFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-169">Recuperar información acerca de una cara persistente (especificada por persistedFaceId y su largeFaceListId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-169">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-170">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-170">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-171">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-171">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_2
  name: getFace(string, string, Object, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-172">Recuperar información acerca de una cara persistente (especificada por persistedFaceId y su largeFaceListId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-172">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFace_1
  name: getFace(string, string, ServiceCallback<PersistedFace>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-173">Recuperar información acerca de una cara persistente (especificada por persistedFaceId y su largeFaceListId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-173">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getFaceWithHttpOperationResponse
  name: getFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-174">Recuperar información acerca de una cara persistente (especificada por persistedFaceId y su largeFaceListId perteneciente).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-174">Retrieve information about a persisted face (specified by persistedFaceId and its belonging largeFaceListId).</span></span>
  syntax:
    content: 'function getFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-175">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-175">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-176">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-176">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus
  name: getTrainingStatus(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-177">Recuperar el estado de la formación de una lista de caras de gran tamaño (completada o en curso).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-177">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-178">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-178">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_2
  name: getTrainingStatus(string, Object, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-179">Recuperar el estado de la formación de una lista de caras de gran tamaño (completada o en curso).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-179">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, options: Object, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatus_1
  name: getTrainingStatus(string, ServiceCallback<TrainingStatus>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-180">Recuperar el estado de la formación de una lista de caras de gran tamaño (completada o en curso).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-180">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatus(largeFaceListId: string, callback: ServiceCallback<TrainingStatus>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.TrainingStatus>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getTrainingStatusWithHttpOperationResponse
  name: getTrainingStatusWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-181">Recuperar el estado de la formación de una lista de caras de gran tamaño (completada o en curso).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-181">Retrieve the training status of a large face list (completed or ongoing).</span></span>
  syntax:
    content: 'function getTrainingStatusWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-182">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-182">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.getWithHttpOperationResponse
  name: getWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-183">Recuperar la información de la lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-183">Retrieve a large face list's information.</span></span>
  syntax:
    content: 'function getWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-184">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-184">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list
  name: list(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-185">Recuperar información acerca de todas las listas grandes face existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-185">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="2c4f2-186">Se devolverá sólo largeFaceListId, nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-186">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_2
  name: list(Object, ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-187">Recuperar información acerca de todas las listas grandes face existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-187">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="2c4f2-188">Se devolverá sólo largeFaceListId, nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-188">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(options: Object, callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.list_1
  name: list(ServiceCallback<LargeFaceList[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-189">Recuperar información acerca de todas las listas grandes face existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-189">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="2c4f2-190">Se devolverá sólo largeFaceListId, nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-190">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function list(callback: ServiceCallback<LargeFaceList[]>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.LargeFaceList[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces
  name: listFaces(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-191">Enumerar todas las caras en una lista de caras grandes y recuperar información de fuente (incluidas userData y persistedFaceIds de caras registradas de la cara).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-191">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-192">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-192">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_2
  name: listFaces(string, Object, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-193">Enumerar todas las caras en una lista de caras grandes y recuperar información de fuente (incluidas userData y persistedFaceIds de caras registradas de la cara).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-193">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, options: Object, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFaces_1
  name: listFaces(string, ServiceCallback<PersistedFace[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-194">Enumerar todas las caras en una lista de caras grandes y recuperar información de fuente (incluidas userData y persistedFaceIds de caras registradas de la cara).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-194">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFaces(largeFaceListId: string, callback: ServiceCallback<PersistedFace[]>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-face.PersistedFace[]>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listFacesWithHttpOperationResponse
  name: listFacesWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-195">Enumerar todas las caras en una lista de caras grandes y recuperar información de fuente (incluidas userData y persistedFaceIds de caras registradas de la cara).</span><span class="sxs-lookup"><span data-stu-id="2c4f2-195">List all faces in a large face list, and retrieve face information (including userData and persistedFaceIds of registered faces of the face).</span></span>
  syntax:
    content: 'function listFacesWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-196">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-196">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.listWithHttpOperationResponse
  name: listWithHttpOperationResponse(Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-197">Recuperar información acerca de todas las listas grandes face existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-197">Retrieve information about all existing large face lists.</span></span> <span data-ttu-id="2c4f2-198">Se devolverá sólo largeFaceListId, nombre y userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-198">Only largeFaceListId, name and userData will be returned.</span></span>
  syntax:
    content: 'function listWithHttpOperationResponse(options?: Object)'
    parameters:
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train
  name: train(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-199">Poner en cola una tarea de aprendizaje de lista de caras grandes, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-199">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-200">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-200">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_2
  name: train(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-201">Poner en cola una tarea de aprendizaje de lista de caras grandes, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-201">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.train_1
  name: train(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-202">Poner en cola una tarea de aprendizaje de lista de caras grandes, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-202">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function train(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.trainWithHttpOperationResponse
  name: trainWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-203">Poner en cola una tarea de aprendizaje de lista de caras grandes, puede que no se inicie inmediatamente la tarea de aprendizaje.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-203">Queue a large face list training task, the training task may not be started immediately.</span></span>
  syntax:
    content: 'function trainWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-204">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-204">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update
  name: update(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-205">Actualizar la información de una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-205">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-206">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-206">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_2
  name: update(string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-207">Actualizar la información de una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-207">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.update_1
  name: update(string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-208">Actualizar la información de una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-208">Update information of a large face list.</span></span>
  syntax:
    content: 'function update(largeFaceListId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace
  name: updateFace(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-209">Actualizar campo de una cara persistente userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-209">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-210">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-210">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-211">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-211">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_2
  name: updateFace(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-212">Actualizar campo de una cara persistente userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-212">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFace_1
  name: updateFace(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-213">Actualizar campo de una cara persistente userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-213">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFace(largeFaceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: ''
    - id: persistedFaceId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateFaceWithHttpOperationResponse
  name: updateFaceWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-214">Actualizar campo de una cara persistente userData.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-214">Update a persisted face's userData field.</span></span>
  syntax:
    content: 'function updateFaceWithHttpOperationResponse(largeFaceListId: string, persistedFaceId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-215">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-215">Id referencing a particular large face list.</span></span>
    - id: persistedFaceId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-216">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-216">Id referencing a particular persistedFaceId of an existing face.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
- uid: azure-cognitiveservices-face.LargeFaceListOperations.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse(string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="2c4f2-217">Actualizar la información de una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-217">Update information of a large face list.</span></span>
  syntax:
    content: 'function updateWithHttpOperationResponse(largeFaceListId: string, options?: Object)'
    parameters:
    - id: largeFaceListId
      type:
      - string
      description: >
        <span data-ttu-id="2c4f2-218">Id. de referencia a una lista de caras grandes determinado.</span><span class="sxs-lookup"><span data-stu-id="2c4f2-218">Id referencing a particular large face list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-face
references:
- uid: Promise<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace>
  name: PersistedFace>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace>>
  name: PersistedFace>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList>
  name: LargeFaceList>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-face.TrainingStatus>
  name: TrainingStatus>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.TrainingStatus>>
  name: TrainingStatus>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TrainingStatus
    fullName: TrainingStatus
    uid: azure-cognitiveservices-face.TrainingStatus
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList>>
  name: LargeFaceList>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.LargeFaceList[]>
  name: LargeFaceList[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: ServiceCallback<azure-cognitiveservices-face.PersistedFace[]>
  name: PersistedFace[]>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>'
    fullName: '[]>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.PersistedFace[]>>
  name: PersistedFace[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: PersistedFace
    fullName: PersistedFace
    uid: azure-cognitiveservices-face.PersistedFace
  - name: '[]>>'
    fullName: '[]>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-face.LargeFaceList[]>>
  name: LargeFaceList[]>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LargeFaceList
    fullName: LargeFaceList
    uid: azure-cognitiveservices-face.LargeFaceList
  - name: '[]>>'
    fullName: '[]>>'
