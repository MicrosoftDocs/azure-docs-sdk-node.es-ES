### YamlMime:UniversalReference
ms.openlocfilehash: 6820bcfd1f15de1a6c220cd6c4230ec2af3b93d2
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52120860"
items:
- uid: adal-node.TokenCache
  name: TokenCache
  fullName: TokenCache
  children:
  - adal-node.TokenCache.add
  - adal-node.TokenCache.find
  - adal-node.TokenCache.remove
  langs:
  - typeScript
  type: interface
  summary: Se trata de una interfaz que se puede implementar para proporcionar persistencia de caché de tokens personalizado.
  package: adal-node
- uid: adal-node.TokenCache.add
  name: 'add(TokenResponse[], (err: Error, result: boolean) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: Agrega una colección de entradas a la memoria caché en una operación por lotes.
  syntax:
    content: 'function add(entries: TokenResponse[], callback: (err: Error, result: boolean) => void)'
    parameters:
    - id: entries
      type:
      - adal-node.TokenResponse[]
      description: Una matriz de entradas que desea agregar a la memoria caché.
    - id: callback
      type:
      - '(err: Error, result: boolean) => void'
      description: >
        Esta función se invoca cuando se completa la operación.  Cualquier error se proporciona como el primer parámetro.
  package: adal-node
- uid: adal-node.TokenCache.find
  name: 'find(any, (err: Error, results: any[]) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: Busca todas las entradas en la memoria caché que coinciden con todos los valores pasados.
  syntax:
    content: 'function find(query: any, callback: (err: Error, results: any[]) => void)'
    parameters:
    - id: query
      type:
      - any
      description: Este objeto se comparará con cada entrada en la memoria caché.  Se devolverán todas las entradas que coinciden con todos los valores de este objeto.  Todos los valores en el objeto pasado deben coincidir con los valores de un objeto devuelto potencialmente exactamente.  El objeto devuelto puede tener más valores que ha pasado en el objeto de consulta. Eche un vistazo a http://underscorejs.org/#where para obtener un ejemplo sobre cómo proporcionar la consulta.
    - id: callback
      type:
      - '(err: Error, results: any[]) => void'
      description: "\n"
  package: adal-node
- uid: adal-node.TokenCache.remove
  name: 'remove(TokenResponse[], (err: Error, result: null) => void)'
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita una colección de entradas de la memoria caché en una operación por lotes.
  syntax:
    content: 'function remove(entires: TokenResponse[], callback: (err: Error, result: null) => void)'
    parameters:
    - id: entires
      type:
      - adal-node.TokenResponse[]
      description: ''
    - id: callback
      type:
      - '(err: Error, result: null) => void'
      description: >
        Esta función se invoca cuando se completa la operación.  Cualquier error se proporciona como el primer parámetro.
  package: adal-node
references:
- uid: adal-node.TokenResponse[]
  name: TokenResponse[]
  spec.typeScript:
  - name: TokenResponse
    fullName: TokenResponse
    uid: adal-node.TokenResponse
  - name: '[]'
    fullName: '[]'
