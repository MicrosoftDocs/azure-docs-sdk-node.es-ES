### YamlMime:UniversalReference
ms.openlocfilehash: f506a0924f3f3b5f4088429dc8a673f55815c690
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/22/2018
ms.locfileid: "41684337"
items:
- uid: adal-node.MemoryCache
  name: MemoryCache
  fullName: MemoryCache
  children:
  - adal-node.MemoryCache.add
  - adal-node.MemoryCache.find
  - adal-node.MemoryCache.constructor
  - adal-node.MemoryCache.remove
  langs:
  - typeScript
  type: class
  summary: ''
  package: adal-node
- uid: adal-node.MemoryCache.add
  name: add
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="cac68-101">Agrega una colección de entradas a la memoria caché en una operación por lotes.</span><span class="sxs-lookup"><span data-stu-id="cac68-101">Adds a collection of entries to the cache in a single batch operation.</span></span>
  syntax:
    content: 'function add(entries: TokenResponse[], callback: (err: Error, result: boolean) => void)'
    parameters:
    - id: entries
      type:
      - adal-node.TokenResponse[]
      description: <span data-ttu-id="cac68-102">Una matriz de entradas que desea agregar a la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="cac68-102">An array of entries to add to the cache.</span></span>
    - id: callback
      type:
      - '(err: Error, result: boolean) => void'
      description: >
        <span data-ttu-id="cac68-103">Esta función se invoca cuando se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="cac68-103">This function is called when the operation is complete.</span></span>  <span data-ttu-id="cac68-104">Cualquier error se proporciona como el primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="cac68-104">Any error is provided as the first parameter.</span></span>
  package: adal-node
- uid: adal-node.MemoryCache.find
  name: find
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="cac68-105">Busca todas las entradas en la memoria caché que coinciden con todos los valores pasados.</span><span class="sxs-lookup"><span data-stu-id="cac68-105">Finds all entries in the cache that match all of the passed in values.</span></span>
  syntax:
    content: 'function find(query: any, callback: (err: Error, results: any[]) => void)'
    parameters:
    - id: query
      type:
      - any
      description: <span data-ttu-id="cac68-106">Este objeto se comparará con cada entrada en la memoria caché.</span><span class="sxs-lookup"><span data-stu-id="cac68-106">This object will be compared to each entry in the cache.</span></span>  <span data-ttu-id="cac68-107">Se devolverán todas las entradas que coinciden con todos los valores de este objeto.</span><span class="sxs-lookup"><span data-stu-id="cac68-107">Any entries that match all of the values in this object will be returned.</span></span>  <span data-ttu-id="cac68-108">Todos los valores en el objeto pasado deben coincidir con los valores de un objeto devuelto potencialmente exactamente.</span><span class="sxs-lookup"><span data-stu-id="cac68-108">All the values in the passed in object must match values in a potentialy returned object exactly.</span></span>  <span data-ttu-id="cac68-109">El objeto devuelto puede tener más valores que ha pasado en el objeto de consulta.</span><span class="sxs-lookup"><span data-stu-id="cac68-109">The returned object may have more values than the passed in query object.</span></span> <span data-ttu-id="cac68-110">Eche un vistazo a http://underscorejs.org/#where para obtener un ejemplo sobre cómo proporcionar la consulta.</span><span class="sxs-lookup"><span data-stu-id="cac68-110">Please take a look at http://underscorejs.org/#where for an example on how to provide query.</span></span>
    - id: callback
      type:
      - '(err: Error, results: any[]) => void'
      description: "\n"
  package: adal-node
- uid: adal-node.MemoryCache.constructor
  name: MemoryCache
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: new MemoryCache()
    parameters: []
  package: adal-node
- uid: adal-node.MemoryCache.remove
  name: remove
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="cac68-111">Quita una colección de entradas de la memoria caché en una operación por lotes.</span><span class="sxs-lookup"><span data-stu-id="cac68-111">Removes a collection of entries from the cache in a single batch operation.</span></span>
  syntax:
    content: 'function remove(entires: TokenResponse[], callback: (err: Error, result: null) => void)'
    parameters:
    - id: entires
      type:
      - adal-node.TokenResponse[]
      description: ''
    - id: callback
      type:
      - '(err: Error, result: null) => void'
      description: >
        <span data-ttu-id="cac68-112">Esta función se invoca cuando se completa la operación.</span><span class="sxs-lookup"><span data-stu-id="cac68-112">This function is called when the operation is complete.</span></span>  <span data-ttu-id="cac68-113">Cualquier error se proporciona como el primer parámetro.</span><span class="sxs-lookup"><span data-stu-id="cac68-113">Any error is provided as the first parameter.</span></span>
  package: adal-node
references:
- uid: adal-node.TokenResponse[]
  spec.typeScript:
  - name: TokenResponse
    fullName: TokenResponse
    uid: adal-node.TokenResponse
  - name: '[]'
    fullName: '[]'
