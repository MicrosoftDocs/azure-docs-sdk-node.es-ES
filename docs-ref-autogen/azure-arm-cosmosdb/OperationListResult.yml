### YamlMime:UniversalReference
items:
  - uid: azure-arm-cosmosdb.OperationListResult
    name: OperationListResult
    fullName: OperationListResult
    children:
      - azure-arm-cosmosdb.OperationListResult.Array
      - azure-arm-cosmosdb.OperationListResult.concat
      - azure-arm-cosmosdb.OperationListResult.concat_1
      - azure-arm-cosmosdb.OperationListResult.every
      - azure-arm-cosmosdb.OperationListResult.filter_1
      - azure-arm-cosmosdb.OperationListResult.filter
      - azure-arm-cosmosdb.OperationListResult.forEach
      - azure-arm-cosmosdb.OperationListResult.indexOf
      - azure-arm-cosmosdb.OperationListResult.join
      - azure-arm-cosmosdb.OperationListResult.lastIndexOf
      - azure-arm-cosmosdb.OperationListResult.length
      - azure-arm-cosmosdb.OperationListResult.map
      - azure-arm-cosmosdb.OperationListResult.nextLink
      - azure-arm-cosmosdb.OperationListResult.pop
      - azure-arm-cosmosdb.OperationListResult.push
      - azure-arm-cosmosdb.OperationListResult.reduce
      - azure-arm-cosmosdb.OperationListResult.reduce_1
      - azure-arm-cosmosdb.OperationListResult.reduce_2
      - azure-arm-cosmosdb.OperationListResult.reduceRight
      - azure-arm-cosmosdb.OperationListResult.reduceRight_1
      - azure-arm-cosmosdb.OperationListResult.reduceRight_2
      - azure-arm-cosmosdb.OperationListResult.reverse
      - azure-arm-cosmosdb.OperationListResult.shift
      - azure-arm-cosmosdb.OperationListResult.slice
      - azure-arm-cosmosdb.OperationListResult.some
      - azure-arm-cosmosdb.OperationListResult.sort
      - azure-arm-cosmosdb.OperationListResult.splice
      - azure-arm-cosmosdb.OperationListResult.splice_1
      - azure-arm-cosmosdb.OperationListResult.toLocaleString
      - azure-arm-cosmosdb.OperationListResult.toString
      - azure-arm-cosmosdb.OperationListResult.unshift
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<azure-arm-cosmosdb.Operation>
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.concat
    name: 'concat(ConcatArray<Operation>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-101">Combina dos o más matrices.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<Operation>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-cosmosdb.Operation>[]'
          description: |
            <span data-ttu-id="2ffdd-102">Elementos adicionales que agregue al final del argumento array1.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-103">Combina dos o más matrices.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="2ffdd-104">Elementos adicionales que agregue al final del argumento array1.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.every
    name: 'every((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-105">Determina si todos los miembros de la matriz satisfacen la prueba especificada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-105">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: '<span data-ttu-id="2ffdd-106">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-106">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2ffdd-107">El método cada llama a la función callbackfn para cada elemento de matriz 1 hasta que el callbackfn devuelve false, o hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-107">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2ffdd-108">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-108">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2ffdd-109">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-109">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.filter_1
    name: 'filter((value: Operation, index: number, array: Operation[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-110">Devuelve los elementos de una matriz que cumplen la condición especificada en una función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-110">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: Operation, index: number, array: Operation[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => any'
          description: <span data-ttu-id="2ffdd-111">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-111">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2ffdd-112">El método de filtro llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-112">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2ffdd-113">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-113">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2ffdd-114">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-114">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.filter
    name: 'filter((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-115">Devuelve los elementos de una matriz que cumplen la condición especificada en una función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-115">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: <span data-ttu-id="2ffdd-116">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-116">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2ffdd-117">El método de filtro llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-117">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2ffdd-118">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-118">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2ffdd-119">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-119">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.forEach
    name: 'forEach((value: Operation, index: number, array: Operation[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-120">Realiza la acción especificada para cada elemento de matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-120">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: Operation, index: number, array: Operation[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => void'
          description: <span data-ttu-id="2ffdd-121">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-121">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2ffdd-122">forEach llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-122">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2ffdd-123">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-123">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2ffdd-124">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-124">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.indexOf
    name: 'indexOf(Operation, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-125">Devuelve el índice de la primera aparición de un valor en una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-125">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: Operation, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-cosmosdb.Operation
          description: <span data-ttu-id="2ffdd-126">El valor para buscar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-126">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="2ffdd-127">El índice de matriz en la que se va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-127">The array index at which to begin the search.</span></span> <span data-ttu-id="2ffdd-128">Si se omite fromIndex, la búsqueda comienza en el índice 0.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-128">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-129">Agrega todos los elementos de una matriz separados por la cadena separadora especificada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-129">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="2ffdd-130">Cadena utilizada para separar un elemento de una matriz del siguiente en la cadena resultante.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-130">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="2ffdd-131">Si se omite, los elementos de matriz se separan con una coma.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-131">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.lastIndexOf
    name: 'lastIndexOf(Operation, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-132">Devuelve el índice de la última aparición de un valor especificado en una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-132">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: Operation, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-cosmosdb.Operation
          description: <span data-ttu-id="2ffdd-133">El valor para buscar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-133">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="2ffdd-134">El índice de matriz en la que se va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-134">The array index at which to begin the search.</span></span> <span data-ttu-id="2ffdd-135">Si se omite fromIndex, la búsqueda comienza en el último índice de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-135">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="2ffdd-136">Obtiene o establece la longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-136">Gets or sets the length of the array.</span></span> <span data-ttu-id="2ffdd-137">Esto es un número mayor que el elemento mayor definido en una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-137">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.map
    name: 'map((value: Operation, index: number, array: Operation[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-138">Llama a una función de devolución de llamada definida en cada elemento de una matriz y devuelve una matriz que contiene los resultados.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-138">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: Operation, index: number, array: Operation[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => U'
          description: <span data-ttu-id="2ffdd-139">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-139">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2ffdd-140">El método map llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-140">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2ffdd-141">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-141">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2ffdd-142">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-142">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-143">Quita el último elemento de una matriz y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-143">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-cosmosdb.Operation | undefined
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.push
    name: 'push(Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-144">Anexa nuevos elementos a una matriz y devuelve la nueva longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-144">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: Operation[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-cosmosdb.Operation[]'
          description: |
            <span data-ttu-id="2ffdd-145">Nuevos elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-145">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reduce
    name: 'reduce((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-146">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-146">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="2ffdd-147">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-147">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: <span data-ttu-id="2ffdd-148">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-148">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2ffdd-149">El método reduce llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-149">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-cosmosdb.Operation
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reduce_1
    name: 'reduce((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-150">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-150">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="2ffdd-151">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-151">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, initialValue: Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: ''
        - id: initialValue
          type:
            - azure-arm-cosmosdb.Operation
          description: ''
      return:
        type:
          - azure-arm-cosmosdb.Operation
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reduce_2
    name: 'reduce((previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-152">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-152">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="2ffdd-153">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-153">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U'
          description: <span data-ttu-id="2ffdd-154">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-154">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2ffdd-155">El método reduce llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-155">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="2ffdd-156">Si se especifica initialValue, se usa como valor inicial para iniciar la acumulación.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-156">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="2ffdd-157">La primera llamada a la función callbackfn proporciona este valor como argumento en lugar de un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-157">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reduceRight
    name: 'reduceRight((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-158">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-158">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="2ffdd-159">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-159">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: <span data-ttu-id="2ffdd-160">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-160">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2ffdd-161">ReduceRight (método) llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-161">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-cosmosdb.Operation
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reduceRight_1
    name: 'reduceRight((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-162">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-162">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="2ffdd-163">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-163">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, initialValue: Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: ''
        - id: initialValue
          type:
            - azure-arm-cosmosdb.Operation
          description: ''
      return:
        type:
          - azure-arm-cosmosdb.Operation
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-164">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-164">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="2ffdd-165">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-165">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U'
          description: <span data-ttu-id="2ffdd-166">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-166">A function that accepts up to four arguments.</span></span> <span data-ttu-id="2ffdd-167">ReduceRight (método) llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-167">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="2ffdd-168">Si se especifica initialValue, se usa como valor inicial para iniciar la acumulación.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-168">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="2ffdd-169">La primera llamada a la función callbackfn proporciona este valor como argumento en lugar de un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-169">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-170">Invierte los elementos en una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-170">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-171">Quita el primer elemento de una matriz y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-171">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-cosmosdb.Operation | undefined
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-172">Devuelve una sección de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-172">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="2ffdd-173">El principio de la parte especificada de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-173">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="2ffdd-174">Final de la parte especificada de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-174">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.some
    name: 'some((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-175">Determina si la función de devolución de llamada especificada devuelve true para cualquier elemento de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-175">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: '<span data-ttu-id="2ffdd-176">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-176">A function that accepts up to three arguments.</span></span> <span data-ttu-id="2ffdd-177">El método algunos llama a la función callbackfn para cada elemento en la matriz 1 hasta que el callbackfn devuelve true, o hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-177">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="2ffdd-178">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-178">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="2ffdd-179">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-179">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.sort
    name: 'sort((a: Operation, b: Operation) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-180">Ordena una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-180">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: Operation, b: Operation) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: Operation, b: Operation) => number'
          description: |
            <span data-ttu-id="2ffdd-181">El nombre de la función usada para determinar el orden de los elementos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-181">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="2ffdd-182">Si se omite, los elementos se ordenan en orden ascendente, orden de los caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-182">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-183">Quita elementos de una matriz y, si es necesario, inserta nuevos elementos en su lugar, devuelve los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-183">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="2ffdd-184">Ubicación de base cero de la matriz desde el que se va a comenzar a quitar elementos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-184">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="2ffdd-185">El número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-185">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.splice_1
    name: 'splice(number, number, Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="2ffdd-186">Quita elementos de una matriz y, si es necesario, inserta nuevos elementos en su lugar, devuelve los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-186">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Operation[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="2ffdd-187">Ubicación de base cero de la matriz desde el que se va a comenzar a quitar elementos.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-187">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="2ffdd-188">El número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-188">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-cosmosdb.Operation[]'
          description: |
            <span data-ttu-id="2ffdd-189">Elementos que se va a insertar en la matriz en lugar de los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-189">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-cosmosdb.Operation[]'
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-190">Devuelve una representación de cadena de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-190">Returns a string representation of an array.</span></span> <span data-ttu-id="2ffdd-191">Los elementos se convierten en cadenas mediante sus métodos toLocalString.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-191">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-192">Devuelve una representación de cadena de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-192">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-cosmosdb
  - uid: azure-arm-cosmosdb.OperationListResult.unshift
    name: 'unshift(Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="2ffdd-193">Inserta nuevos elementos al principio de una matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-193">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: Operation[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-cosmosdb.Operation[]'
          description: |
            <span data-ttu-id="2ffdd-194">Elementos que se va a insertar al principio de la matriz.</span><span class="sxs-lookup"><span data-stu-id="2ffdd-194">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-cosmosdb
references:
  - uid: Array<azure-arm-cosmosdb.Operation>
    name: Operation>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Operation
        fullName: Operation
        uid: azure-arm-cosmosdb.Operation
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-cosmosdb.Operation>[]'
    name: 'Operation>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Operation
        fullName: Operation
        uid: azure-arm-cosmosdb.Operation
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-cosmosdb.Operation[]'
    name: 'Operation[]'
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: azure-arm-cosmosdb.Operation
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-cosmosdb.Operation
    name: Operation
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: azure-arm-cosmosdb.Operation
  - uid: azure-arm-cosmosdb.Operation | undefined
    name: Operation | undefined
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: azure-arm-cosmosdb.Operation
      - name: ' | undefined'
        fullName: ' | undefined'