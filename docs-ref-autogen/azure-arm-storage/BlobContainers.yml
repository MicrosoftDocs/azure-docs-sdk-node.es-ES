### YamlMime:UniversalReference
ms.openlocfilehash: 16e5c8d5e48a413877be9cffa7bf2a859943cbd2
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/22/2018
ms.locfileid: "41697414"
items:
- uid: azure-arm-storage.BlobContainers
  name: BlobContainers
  fullName: BlobContainers
  children:
  - azure-arm-storage.BlobContainers.clearLegalHold
  - azure-arm-storage.BlobContainers.clearLegalHold_1
  - azure-arm-storage.BlobContainers.clearLegalHold_2
  - azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.create
  - azure-arm-storage.BlobContainers.create_2
  - azure-arm-storage.BlobContainers.create_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.deleteMethod
  - azure-arm-storage.BlobContainers.deleteMethod_1
  - azure-arm-storage.BlobContainers.deleteMethod_2
  - azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.get
  - azure-arm-storage.BlobContainers.get_1
  - azure-arm-storage.BlobContainers.get_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.list
  - azure-arm-storage.BlobContainers.list_1
  - azure-arm-storage.BlobContainers.list_2
  - azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  - azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.setLegalHold
  - azure-arm-storage.BlobContainers.setLegalHold_1
  - azure-arm-storage.BlobContainers.setLegalHold_2
  - azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  - azure-arm-storage.BlobContainers.update
  - azure-arm-storage.BlobContainers.update_1
  - azure-arm-storage.BlobContainers.update_2
  - azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Borra legal contienen etiquetas. Borrar la etiqueta a la misma o inexistente da lugar a una operación idempotente. ClearLegalHold borra sólo las etiquetas especificadas en la solicitud.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: tags
      type:
      - string[]
      description: >
        Cada etiqueta debe ser 3 y 23 caracteres alfanuméricos y se normaliza a minúsculas en SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_1
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Borra legal contienen etiquetas. Borrar la etiqueta a la misma o inexistente da lugar a una operación idempotente. ClearLegalHold borra sólo las etiquetas especificadas en la solicitud.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHold_2
  name: clearLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Borra legal contienen etiquetas. Borrar la etiqueta a la misma o inexistente da lugar a una operación idempotente. ClearLegalHold borra sólo las etiquetas especificadas en la solicitud.
  syntax:
    content: 'function clearLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.clearLegalHoldWithHttpOperationResponse
  name: clearLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Borra legal contienen etiquetas. Borrar la etiqueta a la misma o inexistente da lugar a una operación idempotente. ClearLegalHold borra sólo las etiquetas especificadas en la solicitud.
  syntax:
    content: 'function clearLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: tags
      type:
      - string[]
      description: >
        Cada etiqueta debe ser 3 y 23 caracteres alfanuméricos y se normaliza a minúsculas en SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuevo contenedor en la cuenta especificada como se describe en el cuerpo de la solicitud. El recurso de contenedor incluye los metadatos y propiedades de ese contenedor. No se incluye una lista de los blobs del contenedor.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuevo contenedor en la cuenta especificada como se describe en el cuerpo de la solicitud. El recurso de contenedor incluye los metadatos y propiedades de ese contenedor. No se incluye una lista de los blobs del contenedor.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuevo contenedor en la cuenta especificada como se describe en el cuerpo de la solicitud. El recurso de contenedor incluye los metadatos y propiedades de ese contenedor. No se incluye una lista de los blobs del contenedor.
  syntax:
    content: 'function create(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o actualiza una directiva de inmutabilidad desbloqueado. ETag en If-Match se respeta si determinado, pero no es necesario para esta operación.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        El período de inmutabilidad de los blobs del contenedor desde la creación de directiva, en días.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_1
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o actualiza una directiva de inmutabilidad desbloqueado. ETag en If-Match se respeta si determinado, pero no es necesario para esta operación.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicy_2
  name: createOrUpdateImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o actualiza una directiva de inmutabilidad desbloqueado. ETag en If-Match se respeta si determinado, pero no es necesario para esta operación.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  name: createOrUpdateImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea o actualiza una directiva de inmutabilidad desbloqueado. ETag en If-Match se respeta si determinado, pero no es necesario para esta operación.
  syntax:
    content: 'function createOrUpdateImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        El período de inmutabilidad de los blobs del contenedor desde la creación de directiva, en días.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un nuevo contenedor en la cuenta especificada como se describe en el cuerpo de la solicitud. El recurso de contenedor incluye los metadatos y propiedades de ese contenedor. No se incluye una lista de los blobs del contenedor.
  syntax:
    content: 'function createWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_1
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Anula una directiva de inmutabilidad desbloqueado. La respuesta de eliminación tiene immutabilityPeriodSinceCreationInDays establecido en 0. ETag en If-Match es necesaria para esta operación. Eliminación de una directiva de inmutabilidad bloqueadas no se permite, sólo consiste en eliminar el contenedor después de eliminar todos los blobs dentro del contenedor.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Anula una directiva de inmutabilidad desbloqueado. La respuesta de eliminación tiene immutabilityPeriodSinceCreationInDays establecido en 0. ETag en If-Match es necesaria para esta operación. Eliminación de una directiva de inmutabilidad bloqueadas no se permite, sólo consiste en eliminar el contenedor después de eliminar todos los blobs dentro del contenedor.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: ifMatch
      type:
      - string
      description: >
        La versión de estado (ETag) de entidad de la directiva de inmutabilidad para actualizar. Un valor de "*" puede utilizarse para aplicar la operación solo si ya existe la directiva de inmutabilidad. Si se omite, siempre se aplicará esta operación.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicy_2
  name: deleteImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Anula una directiva de inmutabilidad desbloqueado. La respuesta de eliminación tiene immutabilityPeriodSinceCreationInDays establecido en 0. ETag en If-Match es necesaria para esta operación. Eliminación de una directiva de inmutabilidad bloqueadas no se permite, sólo consiste en eliminar el contenedor después de eliminar todos los blobs dentro del contenedor.
  syntax:
    content: 'function deleteImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteImmutabilityPolicyWithHttpOperationResponse
  name: deleteImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Anula una directiva de inmutabilidad desbloqueado. La respuesta de eliminación tiene immutabilityPeriodSinceCreationInDays establecido en 0. ETag en If-Match es necesaria para esta operación. Eliminación de una directiva de inmutabilidad bloqueadas no se permite, sólo consiste en eliminar el contenedor después de eliminar todos los blobs dentro del contenedor.
  syntax:
    content: 'function deleteImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: ifMatch
      type:
      - string
      description: >
        La versión de estado (ETag) de entidad de la directiva de inmutabilidad para actualizar. Un valor de "*" puede utilizarse para aplicar la operación solo si ya existe la directiva de inmutabilidad. Si se omite, siempre se aplicará esta operación.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el contenedor en su cuenta especificado.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el contenedor en su cuenta especificado.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el contenedor en su cuenta especificado.
  syntax:
    content: 'function deleteMethod(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el contenedor en su cuenta especificado.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Extiende el immutabilityPeriodSinceCreationInDays de una directiva de inmutabilidad bloqueada. La única acción que se permite en una directiva de bloqueo estará esta acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: ifMatch
      type:
      - string
      description: >
        La versión de estado (ETag) de entidad de la directiva de inmutabilidad para actualizar. Un valor de "*" puede utilizarse para aplicar la operación solo si ya existe la directiva de inmutabilidad. Si se omite, siempre se aplicará esta operación.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        El período de inmutabilidad de los blobs del contenedor desde la creación de directiva, en días.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_1
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Extiende el immutabilityPeriodSinceCreationInDays de una directiva de inmutabilidad bloqueada. La única acción que se permite en una directiva de bloqueo estará esta acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicy_2
  name: extendImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Extiende el immutabilityPeriodSinceCreationInDays de una directiva de inmutabilidad bloqueada. La única acción que se permite en una directiva de bloqueo estará esta acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function extendImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.extendImmutabilityPolicyWithHttpOperationResponse
  name: extendImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Extiende el immutabilityPeriodSinceCreationInDays de una directiva de inmutabilidad bloqueada. La única acción que se permite en una directiva de bloqueo estará esta acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function extendImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, immutabilityPeriodSinceCreationInDays: number, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: ifMatch
      type:
      - string
      description: >
        La versión de estado (ETag) de entidad de la directiva de inmutabilidad para actualizar. Un valor de "*" puede utilizarse para aplicar la operación solo si ya existe la directiva de inmutabilidad. Si se omite, siempre se aplicará esta operación.
    - id: immutabilityPeriodSinceCreationInDays
      type:
      - number
      description: >
        El período de inmutabilidad de los blobs del contenedor desde la creación de directiva, en días.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las propiedades de un contenedor especificado.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_1
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las propiedades de un contenedor especificado.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.get_2
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las propiedades de un contenedor especificado.
  syntax:
    content: 'function get(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la directiva de inmutabilidad existente junto con el valor de ETag correspondiente en los encabezados de respuesta y cuerpo.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_2
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la directiva de inmutabilidad existente junto con el valor de ETag correspondiente en los encabezados de respuesta y cuerpo.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicy_1
  name: getImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la directiva de inmutabilidad existente junto con el valor de ETag correspondiente en los encabezados de respuesta y cuerpo.
  syntax:
    content: 'function getImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getImmutabilityPolicyWithHttpOperationResponse
  name: getImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la directiva de inmutabilidad existente junto con el valor de ETag correspondiente en los encabezados de respuesta y cuerpo.
  syntax:
    content: 'function getImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.getWithHttpOperationResponse
  name: getWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las propiedades de un contenedor especificado.
  syntax:
    content: 'function getWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Enumera todos los contenedores y no es compatible con un prefijo como plano de datos. También SRP hoy en día no devuelve el token de continuación.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_1
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Enumera todos los contenedores y no es compatible con un prefijo como plano de datos. También SRP hoy en día no devuelve el token de continuación.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.list_2
  name: list
  children: []
  type: method
  langs:
  - typeScript
  summary: Enumera todos los contenedores y no es compatible con un prefijo como plano de datos. También SRP hoy en día no devuelve el token de continuación.
  syntax:
    content: 'function list(resourceGroupName: string, accountName: string, options: Object, callback: ServiceCallback<ListContainerItems>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ListContainerItems>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ListContainerItems>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.listWithHttpOperationResponse
  name: listWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Enumera todos los contenedores y no es compatible con un prefijo como plano de datos. También SRP hoy en día no devuelve el token de continuación.
  syntax:
    content: 'function listWithHttpOperationResponse(resourceGroupName: string, accountName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la directiva de inmutabilidad en estado bloqueado. La única acción que se permite en una directiva de bloqueo es ExtendImmutabilityPolicy acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: ifMatch
      type:
      - string
      description: >
        La versión de estado (ETag) de entidad de la directiva de inmutabilidad para actualizar. Un valor de "*" puede utilizarse para aplicar la operación solo si ya existe la directiva de inmutabilidad. Si se omite, siempre se aplicará esta operación.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_1
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la directiva de inmutabilidad en estado bloqueado. La única acción que se permite en una directiva de bloqueo es ExtendImmutabilityPolicy acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicy_2
  name: lockImmutabilityPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la directiva de inmutabilidad en estado bloqueado. La única acción que se permite en una directiva de bloqueo es ExtendImmutabilityPolicy acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function lockImmutabilityPolicy(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options: Object, callback: ServiceCallback<ImmutabilityPolicy>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: ifMatch
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.ImmutabilityPolicy>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.lockImmutabilityPolicyWithHttpOperationResponse
  name: lockImmutabilityPolicyWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la directiva de inmutabilidad en estado bloqueado. La única acción que se permite en una directiva de bloqueo es ExtendImmutabilityPolicy acción. ETag en If-Match es necesaria para esta operación.
  syntax:
    content: 'function lockImmutabilityPolicyWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, ifMatch: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: ifMatch
      type:
      - string
      description: >
        La versión de estado (ETag) de entidad de la directiva de inmutabilidad para actualizar. Un valor de "*" puede utilizarse para aplicar la operación solo si ya existe la directiva de inmutabilidad. Si se omite, siempre se aplicará esta operación.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Legal conjuntos contienen etiquetas. Configuración de los resultados de la misma etiqueta en una operación idempotente. SetLegalHold sigue un patrón de anexar y no desactive horizontalmente las etiquetas existentes que no se especifican en la solicitud.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: tags
      type:
      - string[]
      description: >
        Cada etiqueta debe ser 3 y 23 caracteres alfanuméricos y se normaliza a minúsculas en SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_1
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Legal conjuntos contienen etiquetas. Configuración de los resultados de la misma etiqueta en una operación idempotente. SetLegalHold sigue un patrón de anexar y no desactive horizontalmente las etiquetas existentes que no se especifican en la solicitud.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHold_2
  name: setLegalHold
  children: []
  type: method
  langs:
  - typeScript
  summary: Legal conjuntos contienen etiquetas. Configuración de los resultados de la misma etiqueta en una operación idempotente. SetLegalHold sigue un patrón de anexar y no desactive horizontalmente las etiquetas existentes que no se especifican en la solicitud.
  syntax:
    content: 'function setLegalHold(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options: Object, callback: ServiceCallback<LegalHold>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: tags
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.LegalHold>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.LegalHold>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.setLegalHoldWithHttpOperationResponse
  name: setLegalHoldWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Legal conjuntos contienen etiquetas. Configuración de los resultados de la misma etiqueta en una operación idempotente. SetLegalHold sigue un patrón de anexar y no desactive horizontalmente las etiquetas existentes que no se especifican en la solicitud.
  syntax:
    content: 'function setLegalHoldWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, tags: string[], options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: tags
      type:
      - string[]
      description: >
        Cada etiqueta debe ser 3 y 23 caracteres alfanuméricos y se normaliza a minúsculas en SRP.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Actualiza las propiedades del contenedor como se especifica en el cuerpo de la solicitud. Las propiedades que no se menciona en la solicitud no se modificará. Error al actualizar si aún no existe el contenedor especificado.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_1
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Actualiza las propiedades del contenedor como se especifica en el cuerpo de la solicitud. Las propiedades que no se menciona en la solicitud no se modificará. Error al actualizar si aún no existe el contenedor especificado.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.update_2
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: Actualiza las propiedades del contenedor como se especifica en el cuerpo de la solicitud. Las propiedades que no se menciona en la solicitud no se modificará. Error al actualizar si aún no existe el contenedor especificado.
  syntax:
    content: 'function update(resourceGroupName: string, accountName: string, containerName: string, options: Object, callback: ServiceCallback<BlobContainer>)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: ''
    - id: accountName
      type:
      - string
      description: ''
    - id: containerName
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-storage.BlobContainer>
      description: ''
    return:
      type:
      - Promise<azure-arm-storage.BlobContainer>
  package: azure-arm-storage
- uid: azure-arm-storage.BlobContainers.updateWithHttpOperationResponse
  name: updateWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Actualiza las propiedades del contenedor como se especifica en el cuerpo de la solicitud. Las propiedades que no se menciona en la solicitud no se modificará. Error al actualizar si aún no existe el contenedor especificado.
  syntax:
    content: 'function updateWithHttpOperationResponse(resourceGroupName: string, accountName: string, containerName: string, options?: Object)'
    parameters:
    - id: resourceGroupName
      type:
      - string
      description: >
        El nombre del grupo de recursos dentro de la suscripción del usuario. El nombre distingue mayúsculas de minúsculas.
    - id: accountName
      type:
      - string
      description: >
        El nombre de la cuenta de almacenamiento en el grupo de recursos especificado. Los nombres de cuentas de almacenamiento deben tener entre 3 y 24 caracteres, y usar solo números y letras minúsculas.
    - id: containerName
      type:
      - string
      description: >
        El nombre del contenedor de blobs dentro de la cuenta de almacenamiento especificada. Los nombres de contenedor de blobs deben estar comprendida entre 3 y 63 caracteres de longitud y usar números, letras en minúsculas y guiones (-).

        Todos los caracteres de guión (-) deben estar precedido y seguido por una letra o número inmediatamente.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  package: azure-arm-storage
references:
- uid: Promise<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.LegalHold>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.LegalHold>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: LegalHold
    fullName: LegalHold
    uid: azure-arm-storage.LegalHold
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.BlobContainer>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>'
    fullName: '>'
- uid: Promise<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ImmutabilityPolicy>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ImmutabilityPolicy>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImmutabilityPolicy
    fullName: ImmutabilityPolicy
    uid: azure-arm-storage.ImmutabilityPolicy
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.BlobContainer>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: BlobContainer
    fullName: BlobContainer
    uid: azure-arm-storage.BlobContainer
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-storage.ListContainerItems>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-storage.ListContainerItems>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListContainerItems
    fullName: ListContainerItems
    uid: azure-arm-storage.ListContainerItems
  - name: '>>'
    fullName: '>>'
