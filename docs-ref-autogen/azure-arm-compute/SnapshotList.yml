### YamlMime:UniversalReference
items:
  - uid: azure-arm-compute.SnapshotList
    name: SnapshotList
    fullName: SnapshotList
    children:
      - azure-arm-compute.SnapshotList.Array
      - azure-arm-compute.SnapshotList.concat
      - azure-arm-compute.SnapshotList.concat_1
      - azure-arm-compute.SnapshotList.every
      - azure-arm-compute.SnapshotList.filter_1
      - azure-arm-compute.SnapshotList.filter
      - azure-arm-compute.SnapshotList.forEach
      - azure-arm-compute.SnapshotList.indexOf
      - azure-arm-compute.SnapshotList.join
      - azure-arm-compute.SnapshotList.lastIndexOf
      - azure-arm-compute.SnapshotList.length
      - azure-arm-compute.SnapshotList.map
      - azure-arm-compute.SnapshotList.nextLink
      - azure-arm-compute.SnapshotList.pop
      - azure-arm-compute.SnapshotList.push
      - azure-arm-compute.SnapshotList.reduce
      - azure-arm-compute.SnapshotList.reduce_1
      - azure-arm-compute.SnapshotList.reduce_2
      - azure-arm-compute.SnapshotList.reduceRight
      - azure-arm-compute.SnapshotList.reduceRight_1
      - azure-arm-compute.SnapshotList.reduceRight_2
      - azure-arm-compute.SnapshotList.reverse
      - azure-arm-compute.SnapshotList.shift
      - azure-arm-compute.SnapshotList.slice
      - azure-arm-compute.SnapshotList.some
      - azure-arm-compute.SnapshotList.sort
      - azure-arm-compute.SnapshotList.splice
      - azure-arm-compute.SnapshotList.splice_1
      - azure-arm-compute.SnapshotList.toLocaleString
      - azure-arm-compute.SnapshotList.toString
      - azure-arm-compute.SnapshotList.unshift
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="9f350-101">La respuesta de la operación enumerar instantáneas.</span><span class="sxs-lookup"><span data-stu-id="9f350-101">The List Snapshots operation response.</span></span>
    extends:
      name: Array<azure-arm-compute.Snapshot>
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.Array
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.concat
    name: 'concat(ConcatArray<Snapshot>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-102">Combina dos o más matrices.</span><span class="sxs-lookup"><span data-stu-id="9f350-102">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<Snapshot>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<azure-arm-compute.Snapshot>[]'
          description: |
            <span data-ttu-id="9f350-103">Elementos adicionales que agregue al final del argumento array1.</span><span class="sxs-lookup"><span data-stu-id="9f350-103">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.concat_1
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-104">Combina dos o más matrices.</span><span class="sxs-lookup"><span data-stu-id="9f350-104">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="9f350-105">Elementos adicionales que agregue al final del argumento array1.</span><span class="sxs-lookup"><span data-stu-id="9f350-105">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.every
    name: 'every((value: Snapshot, index: number, array: Snapshot[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-106">Determina si todos los miembros de la matriz satisfacen la prueba especificada.</span><span class="sxs-lookup"><span data-stu-id="9f350-106">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: Snapshot, index: number, array: Snapshot[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Snapshot, index: number, array: Snapshot[]) => boolean'
          description: '<span data-ttu-id="9f350-107">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-107">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9f350-108">El método cada llama a la función callbackfn para cada elemento de matriz 1 hasta que el callbackfn devuelve false, o hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-108">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9f350-109">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9f350-109">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9f350-110">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="9f350-110">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.filter_1
    name: 'filter((value: Snapshot, index: number, array: Snapshot[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-111">Devuelve los elementos de una matriz que cumplen la condición especificada en una función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-111">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: Snapshot, index: number, array: Snapshot[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Snapshot, index: number, array: Snapshot[]) => any'
          description: <span data-ttu-id="9f350-112">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9f350-113">El método de filtro llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-113">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9f350-114">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9f350-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9f350-115">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="9f350-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.filter
    name: 'filter((value: Snapshot, index: number, array: Snapshot[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-116">Devuelve los elementos de una matriz que cumplen la condición especificada en una función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-116">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: Snapshot, index: number, array: Snapshot[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Snapshot, index: number, array: Snapshot[]) => boolean'
          description: <span data-ttu-id="9f350-117">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-117">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9f350-118">El método de filtro llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-118">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9f350-119">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9f350-119">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9f350-120">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="9f350-120">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.forEach
    name: 'forEach((value: Snapshot, index: number, array: Snapshot[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-121">Realiza la acción especificada para cada elemento de matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-121">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: Snapshot, index: number, array: Snapshot[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Snapshot, index: number, array: Snapshot[]) => void'
          description: <span data-ttu-id="9f350-122">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-122">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9f350-123">forEach llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-123">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9f350-124">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9f350-124">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9f350-125">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="9f350-125">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.indexOf
    name: 'indexOf(Snapshot, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-126">Devuelve el índice de la primera aparición de un valor en una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-126">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: Snapshot, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-compute.Snapshot
          description: <span data-ttu-id="9f350-127">El valor para buscar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-127">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="9f350-128">El índice de matriz en la que se va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="9f350-128">The array index at which to begin the search.</span></span> <span data-ttu-id="9f350-129">Si se omite fromIndex, la búsqueda comienza en el índice 0.</span><span class="sxs-lookup"><span data-stu-id="9f350-129">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.join
    name: join(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-130">Agrega todos los elementos de una matriz separados por la cadena separadora especificada.</span><span class="sxs-lookup"><span data-stu-id="9f350-130">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: string)'
      parameters:
        - id: separator
          type:
            - string
          description: |
            <span data-ttu-id="9f350-131">Cadena utilizada para separar un elemento de una matriz del siguiente en la cadena resultante.</span><span class="sxs-lookup"><span data-stu-id="9f350-131">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="9f350-132">Si se omite, los elementos de matriz se separan con una coma.</span><span class="sxs-lookup"><span data-stu-id="9f350-132">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.lastIndexOf
    name: 'lastIndexOf(Snapshot, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-133">Devuelve el índice de la última aparición de un valor especificado en una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-133">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: Snapshot, fromIndex?: number)'
      parameters:
        - id: searchElement
          type:
            - azure-arm-compute.Snapshot
          description: <span data-ttu-id="9f350-134">El valor para buscar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-134">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - number
          description: |
            <span data-ttu-id="9f350-135">El índice de matriz en la que se va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="9f350-135">The array index at which to begin the search.</span></span> <span data-ttu-id="9f350-136">Si se omite fromIndex, la búsqueda comienza en el último índice de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-136">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.length
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="9f350-137">Obtiene o establece la longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-137">Gets or sets the length of the array.</span></span> <span data-ttu-id="9f350-138">Esto es un número mayor que el elemento mayor definido en una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-138">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.map
    name: 'map((value: Snapshot, index: number, array: Snapshot[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-139">Llama a una función de devolución de llamada definida en cada elemento de una matriz y devuelve una matriz que contiene los resultados.</span><span class="sxs-lookup"><span data-stu-id="9f350-139">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: Snapshot, index: number, array: Snapshot[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Snapshot, index: number, array: Snapshot[]) => U'
          description: <span data-ttu-id="9f350-140">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-140">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9f350-141">El método map llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-141">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9f350-142">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9f350-142">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9f350-143">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="9f350-143">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.nextLink
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="9f350-144">El uri para capturar la página siguiente de instantáneas.</span><span class="sxs-lookup"><span data-stu-id="9f350-144">The uri to fetch the next page of snapshots.</span></span> <span data-ttu-id="9f350-145">Llame a ListNext() con esta opción para capturar la página siguiente de instantáneas.</span><span class="sxs-lookup"><span data-stu-id="9f350-145">Call ListNext() with this to fetch the next page of snapshots.</span></span>
    optional: true
    syntax:
      content: 'nextLink?: string'
      return:
        type:
          - string
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.pop
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-146">Quita el último elemento de una matriz y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="9f350-146">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - azure-arm-compute.Snapshot | undefined
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.push
    name: 'push(Snapshot[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-147">Anexa nuevos elementos a una matriz y devuelve la nueva longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-147">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: Snapshot[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-compute.Snapshot[]'
          description: |
            <span data-ttu-id="9f350-148">Nuevos elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-148">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reduce
    name: 'reduce((previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-149">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-149">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="9f350-150">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-150">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot'
          description: <span data-ttu-id="9f350-151">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-151">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9f350-152">El método reduce llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-152">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-compute.Snapshot
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reduce_1
    name: 'reduce((previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot, Snapshot)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-153">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-153">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="9f350-154">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-154">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot, initialValue: Snapshot)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot'
          description: ''
        - id: initialValue
          type:
            - azure-arm-compute.Snapshot
          description: ''
      return:
        type:
          - azure-arm-compute.Snapshot
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reduce_2
    name: 'reduce((previousValue: U, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-155">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-155">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="9f350-156">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-156">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => U'
          description: <span data-ttu-id="9f350-157">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-157">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9f350-158">El método reduce llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-158">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="9f350-159">Si se especifica initialValue, se usa como valor inicial para iniciar la acumulación.</span><span class="sxs-lookup"><span data-stu-id="9f350-159">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="9f350-160">La primera llamada a la función callbackfn proporciona este valor como argumento en lugar de un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-160">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reduceRight
    name: 'reduceRight((previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-161">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="9f350-161">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="9f350-162">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-162">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot'
          description: <span data-ttu-id="9f350-163">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-163">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9f350-164">ReduceRight (método) llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-164">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - azure-arm-compute.Snapshot
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reduceRight_1
    name: 'reduceRight((previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot, Snapshot)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-165">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="9f350-165">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="9f350-166">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-166">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot, initialValue: Snapshot)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Snapshot, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => Snapshot'
          description: ''
        - id: initialValue
          type:
            - azure-arm-compute.Snapshot
          description: ''
      return:
        type:
          - azure-arm-compute.Snapshot
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reduceRight_2
    name: 'reduceRight((previousValue: U, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-167">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="9f350-167">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="9f350-168">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="9f350-168">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Snapshot, currentIndex: number, array: Snapshot[]) => U'
          description: <span data-ttu-id="9f350-169">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-169">A function that accepts up to four arguments.</span></span> <span data-ttu-id="9f350-170">ReduceRight (método) llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-170">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="9f350-171">Si se especifica initialValue, se usa como valor inicial para iniciar la acumulación.</span><span class="sxs-lookup"><span data-stu-id="9f350-171">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="9f350-172">La primera llamada a la función callbackfn proporciona este valor como argumento en lugar de un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-172">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.reverse
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-173">Invierte los elementos en una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-173">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.shift
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-174">Quita el primer elemento de una matriz y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="9f350-174">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - azure-arm-compute.Snapshot | undefined
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.slice
    name: 'slice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-175">Devuelve una sección de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-175">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: number, end?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="9f350-176">El principio de la parte especificada de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-176">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - number
          description: |
            <span data-ttu-id="9f350-177">Final de la parte especificada de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-177">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.some
    name: 'some((value: Snapshot, index: number, array: Snapshot[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-178">Determina si la función de devolución de llamada especificada devuelve true para cualquier elemento de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-178">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: Snapshot, index: number, array: Snapshot[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Snapshot, index: number, array: Snapshot[]) => boolean'
          description: '<span data-ttu-id="9f350-179">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="9f350-179">A function that accepts up to three arguments.</span></span> <span data-ttu-id="9f350-180">El método algunos llama a la función callbackfn para cada elemento en la matriz 1 hasta que el callbackfn devuelve true, o hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-180">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="9f350-181">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="9f350-181">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="9f350-182">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="9f350-182">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.sort
    name: 'sort((a: Snapshot, b: Snapshot) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-183">Ordena una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-183">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: (a: Snapshot, b: Snapshot) => number)'
      parameters:
        - id: compareFn
          type:
            - '(a: Snapshot, b: Snapshot) => number'
          description: |
            <span data-ttu-id="9f350-184">El nombre de la función usada para determinar el orden de los elementos.</span><span class="sxs-lookup"><span data-stu-id="9f350-184">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="9f350-185">Si se omite, los elementos se ordenan en orden ascendente, orden de los caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="9f350-185">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.splice
    name: 'splice(number, number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-186">Quita elementos de una matriz y, si es necesario, inserta nuevos elementos en su lugar, devuelve los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="9f350-186">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="9f350-187">Ubicación de base cero de la matriz desde el que se va a comenzar a quitar elementos.</span><span class="sxs-lookup"><span data-stu-id="9f350-187">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: |
            <span data-ttu-id="9f350-188">El número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="9f350-188">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.splice_1
    name: 'splice(number, number, Snapshot[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="9f350-189">Quita elementos de una matriz y, si es necesario, inserta nuevos elementos en su lugar, devuelve los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="9f350-189">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Snapshot[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="9f350-190">Ubicación de base cero de la matriz desde el que se va a comenzar a quitar elementos.</span><span class="sxs-lookup"><span data-stu-id="9f350-190">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="9f350-191">El número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="9f350-191">The number of elements to remove.</span></span>
        - id: items
          type:
            - 'azure-arm-compute.Snapshot[]'
          description: |
            <span data-ttu-id="9f350-192">Elementos que se va a insertar en la matriz en lugar de los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="9f350-192">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - 'azure-arm-compute.Snapshot[]'
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.toLocaleString
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-193">Devuelve una representación de cadena de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-193">Returns a string representation of an array.</span></span> <span data-ttu-id="9f350-194">Los elementos se convierten en cadenas mediante sus métodos toLocalString.</span><span class="sxs-lookup"><span data-stu-id="9f350-194">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.toString
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-195">Devuelve una representación de cadena de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-195">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: azure-arm-compute
  - uid: azure-arm-compute.SnapshotList.unshift
    name: 'unshift(Snapshot[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="9f350-196">Inserta nuevos elementos al principio de una matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-196">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: Snapshot[])'
      parameters:
        - id: items
          type:
            - 'azure-arm-compute.Snapshot[]'
          description: |
            <span data-ttu-id="9f350-197">Elementos que se va a insertar al principio de la matriz.</span><span class="sxs-lookup"><span data-stu-id="9f350-197">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: azure-arm-compute
references:
  - uid: Array<azure-arm-compute.Snapshot>
    name: Snapshot>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute.Snapshot
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<azure-arm-compute.Snapshot>[]'
    name: 'Snapshot>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute.Snapshot
      - name: '>[]'
        fullName: '>[]'
  - uid: 'azure-arm-compute.Snapshot[]'
    name: 'Snapshot[]'
    spec.typeScript:
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute.Snapshot
      - name: '[]'
        fullName: '[]'
  - uid: azure-arm-compute.Snapshot
    name: Snapshot
    spec.typeScript:
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute.Snapshot
  - uid: azure-arm-compute.Snapshot | undefined
    name: Snapshot | undefined
    spec.typeScript:
      - name: Snapshot
        fullName: Snapshot
        uid: azure-arm-compute.Snapshot
      - name: ' | undefined'
        fullName: ' | undefined'