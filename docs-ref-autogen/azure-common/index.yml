### YamlMime:UniversalReference
ms.openlocfilehash: 6894afa5a4cabd5c941cec9d9770b727ab0335b7
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/13/2018
ms.locfileid: "40071821"
items:
- uid: azure-common
  name: azure-common
  langs:
  - js
  type: package
  summary: ''
  children:
  - azure-common.StorageServiceClient
  - azure-common.ServiceManagementClient
  - azure-common.ServiceClient
  - azure-common.HmacSha256Sign
  - azure-common.LinearRetryPolicyFilter
  - azure-common.ExponentialRetryPolicyFilter
  - azure-common.TokenCloudCredentials
  - azure-common.CertificateCloudCredentials
  - azure-common.AnonymousCloudCredentials
  - azure-common.ConnectionStringParser
  - azure-common.WebResource
  - azure-common.parse
  - azure-common.create
  - azure-common.setAgent
  - azure-common.DEFAULT_PROTOCOL
  - azure-common.noMatchConnectionString
  - azure-common.noMatchSettings
  - azure-common.parseAndValidateKeys
  - azure-common.getValidator
  - azure-common.setting
  - azure-common.atLeastOne
  - azure-common.optional
  - azure-common.allRequired
  - azure-common.settingWithFunc
  - azure-common.matchedSpecification
  - azure-common.serializeEntry
  - azure-common.propertyType
  - azure-common.unserializeValue
  - azure-common.serializeQueryValue
  - azure-common.format
  - azure-common.encodeUri
  - azure-common.objectKeysLength
  - azure-common.objectFirstKey
  - azure-common.objectIsNull
  - azure-common.objectIsEmpty
  - azure-common.objectIsInt
  - azure-common.objectIsString
  - azure-common.objectIsFunction
  - azure-common.zeroPaddingString
  - azure-common.stringIsEmpty
  - azure-common.stringFormat
  - azure-common.stringStartsWith
  - azure-common.stringEndsWith
  - azure-common.stringIsInt
  - azure-common.stringIsFloat
  - azure-common.stringIsNumber
  - azure-common.stringIsDate
  - azure-common.urlIsHTTPS
  - azure-common.removeBOM
  - azure-common.merge
  - azure-common.inArrayInsensitive
  - azure-common.tryGetValueInsensitive
  - azure-common.getNameSpace
  - azure-common.isInt
  - azure-common.tryGetValueChain
  - azure-common.truncatedISO8061Date
  - azure-common.isBufferAllZero
  - azure-common.getContentMd5
  - azure-common.isValidUri
  - azure-common.isValidHDInsightCreationObject
  - azure-common.isBase64Encoded
  - azure-common.isValidFunction
  - azure-common.namespaceNameIsValid
  - azure-common.containerNameIsValid
  - azure-common.blobNameIsValid
  - azure-common.tableNameIsValid
  - azure-common.queueNameIsValid
- uid: azure-common.parse
  id: azure-common.parse
  name: parse(connectionString)
  summary: Analiza una cadena de conexión.
  fullName: azure-common.parse(connectionString)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - number
      description: La cadena de conexión que se va a analizar.
    return:
      type:
      - object
      description: El objeto de cadena de conexión.
    content: function parse(connectionString)
  langs:
  - js
- uid: azure-common.create
  id: azure-common.create
  name: create()
  summary: Crea un filtro para controlar una respuesta de error. Esto incluye el análisis y la normalización de las respuestas de error.
  fullName: azure-common.create()
  type: Function
  syntax:
    content: function create()
  langs:
  - js
- uid: azure-common.setAgent
  id: azure-common.setAgent
  name: setAgent(resouce, proxy)
  summary: Conjunto el agente que se usará para el resultado de la solicitud depende de protocolo y la configuración de proxy
  fullName: azure-common.setAgent(resouce, proxy)
  type: Function
  syntax:
    parameters:
    - id: resouce
      type:
      - object
      description: Opciones de solicitud de la solicitud.
    - id: proxy
      type:
      - object
      description: dirección url analizado para el proxy.
    content: function setAgent(resouce, proxy)
  langs:
  - js
- uid: azure-common.DEFAULT_PROTOCOL
  id: azure-common.DEFAULT_PROTOCOL
  name: DEFAULT_PROTOCOL
  summary: El protocolo predeterminado.
  fullName: azure-common.DEFAULT_PROTOCOL
  type: Member
  syntax:
    content: DEFAULT_PROTOCOL
  langs:
  - js
- uid: azure-common.noMatchConnectionString
  id: azure-common.noMatchConnectionString
  name: noMatchConnectionString(connectionString)
  summary: Produce una excepción si el formato de cadena de conexión no coincide con cualquiera de los formatos disponibles.
  fullName: azure-common.noMatchConnectionString(connectionString)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - string
      description: La cadena de conexión con el formato no válido.
    return:
      description: None
    content: function noMatchConnectionString(connectionString)
  langs:
  - js
- uid: azure-common.noMatchSettings
  id: azure-common.noMatchSettings
  name: noMatchSettings(settings)
  summary: Produce una excepción si la configuración no coincide con ninguno de los formatos disponibles.
  fullName: azure-common.noMatchSettings(settings)
  type: Function
  syntax:
    parameters:
    - id: settings
      type:
      - object
      description: La configuración no válida.
    return:
      description: None
    content: function noMatchSettings(settings)
  langs:
  - js
- uid: azure-common.parseAndValidateKeys
  id: azure-common.parseAndValidateKeys
  name: parseAndValidateKeys(connectionString, validKeys)
  summary: Analiza la cadena de conexión y, a continuación, validar que las claves analizadas pertenecen a la validSettingKeys
  fullName: azure-common.parseAndValidateKeys(connectionString, validKeys)
  type: Function
  syntax:
    parameters:
    - id: connectionString
      type:
      - string
      description: El usuario proporcionó la cadena de conexión.
    - id: validKeys
      type:
      - array
      description: Las claves válidas.
    return:
      type:
      - array
      description: Las claves de cadena de conexión con tokens.
    content: function parseAndValidateKeys(connectionString, validKeys)
  langs:
  - js
- uid: azure-common.getValidator
  id: azure-common.getValidator
  name: getValidator(array, boolean, boolean)
  summary: Crea una función anónima que actúa como el predicado que se va a realizar una validación.
  fullName: azure-common.getValidator(array, boolean, boolean)
  type: Function
  syntax:
    parameters:
    - id: array
      type:
      - azure-common.requirements
      description: Matriz de condiciones para satisfacer.
    - id: boolean
      type:
      - azure-common.isRequired
      description: Cualquiera de estas condiciones son todas opcionales o todo lo necesario.
    - id: boolean
      type:
      - azure-common.atLeastOne
      description: Indica que al menos un requisito debe completarse correctamente.
    return:
      type:
      - function
      description: ''
    content: function getValidator(array, boolean, boolean)
  langs:
  - js
- uid: azure-common.setting
  id: azure-common.setting
  name: setting(name)
  summary: Crea el valor de una condición que se valida es uno de los valores pasados válidos.
  fullName: azure-common.setting(name)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: El nombre de clave de configuración.
    return:
      type:
      - array
      description: ''
    content: function setting(name)
  langs:
  - js
- uid: azure-common.atLeastOne
  id: azure-common.atLeastOne
  name: atLeastOne()
  summary: Crea un predicado "en la concesión uno" de la lista proporcionada de requisitos.
  fullName: azure-common.atLeastOne()
  type: Function
  syntax:
    return:
      description: puede llamar
    content: function atLeastOne()
  langs:
  - js
- uid: azure-common.optional
  id: azure-common.optional
  name: optional()
  summary: Crea un predicado opcional para la lista proporcionada de requisitos.
  fullName: azure-common.optional()
  type: Function
  syntax:
    return:
      type:
      - function
      description: ''
    content: function optional()
  langs:
  - js
- uid: azure-common.allRequired
  id: azure-common.allRequired
  name: allRequired()
  summary: Crea un predicado para la lista proporcionada de los requisitos necesario.
  fullName: azure-common.allRequired()
  type: Function
  syntax:
    return:
      type:
      - function
      description: ''
    content: function allRequired()
  langs:
  - js
- uid: azure-common.settingWithFunc
  id: azure-common.settingWithFunc
  name: settingWithFunc(name, predicate)
  summary: Crea una condición de valor de configuración mediante el predicado pasado.
  fullName: azure-common.settingWithFunc(name, predicate)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: El nombre de clave de configuración.
    - id: predicate
      type:
      - function
      description: El predicado de valor de configuración.
    return:
      type:
      - array
      description: ''
    content: function settingWithFunc(name, predicate)
  langs:
  - js
- uid: azure-common.matchedSpecification
  id: azure-common.matchedSpecification
  name: matchedSpecification(array)
  summary: Comprueba si una determinada lista de configuraciones coincide exactamente con un conjunto de filtros.
  fullName: azure-common.matchedSpecification(array)
  type: Function
  syntax:
    parameters:
    - id: array
      description: $settings para comprobar la configuración de.
    return:
      description: filtro booleano si cualquier devuelve null, false. Si no hay ninguna configuración después de que todos los filtros son procesados, false. En caso contrario, true.
    content: function matchedSpecification(array)
  langs:
  - js
- uid: azure-common.serializeEntry
  id: azure-common.serializeEntry
  name: serializeEntry(content, namespaces)
  summary: ''
  fullName: azure-common.serializeEntry(content, namespaces)
  type: Function
  syntax:
    parameters:
    - id: content
      type:
      - object
      description: La carga de contenido tal y como es js2xml va a serializar. Debe incluir los nodos raíz.
    - id: namespaces
      type:
      - array
      description: Una matriz de espacios de nombres de nivel superior que se defina.
    content: function serializeEntry(content, namespaces)
  langs:
  - js
- uid: azure-common.propertyType
  id: azure-common.propertyType
  name: propertyType(value)
  summary: Obtiene el tipo Edm de un objeto.
  fullName: azure-common.propertyType(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Una instancia con tipo.
    return:
      type:
      - string
      description: El tipo de Edm.
    content: function propertyType(value)
  langs:
  - js
- uid: azure-common.unserializeValue
  id: azure-common.unserializeValue
  name: unserializeValue(type, value)
  summary: Convertir un valor serializado en un objeto con tipo.
  fullName: azure-common.unserializeValue(type, value)
  type: Function
  syntax:
    parameters:
    - id: type
      type:
      - string
      description: El tipo del valor tal y como aparece en el atributo de tipo.
    - id: value
      type:
      - string
      description: El valor en formato de cadena.
    return:
      type:
      - object
      description: El valor con tipo.
    content: function unserializeValue(type, value)
  langs:
  - js
- uid: azure-common.serializeQueryValue
  id: azure-common.serializeQueryValue
  name: serializeQueryValue(value)
  summary: Serializa el valor en un valor adecuado para su uso en el valor de la consulta de odata.
  fullName: azure-common.serializeQueryValue(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: El valor que se va a serializar.
    return:
      type:
      - string
      description: Valor serializado.
    content: function serializeQueryValue(value)
  langs:
  - js
- uid: azure-common.format
  id: azure-common.format
  name: format(date, skipMilliseconds, millisecondsPading)
  summary: Da formato a una fecha en una cadena de iso 8061.
  fullName: azure-common.format(date, skipMilliseconds, millisecondsPading)
  type: Function
  syntax:
    parameters:
    - id: date
      type:
      - date
      description: Para dar formato a la fecha.
    - id: skipMilliseconds
      type:
      - azure-common.bool
      description: Valor booleano que indica si la parte de milisegundos de la fecha no debe incluir.
    - id: millisecondsPading
      type:
      - azure-common.integer
      description: Número de dígitos a la izquierda rellena los milisegundos.
    return:
      type:
      - string
      description: La fecha con formato en el formato de fecha ISO 8061.
    content: function format(date, skipMilliseconds, millisecondsPading)
  langs:
  - js
- uid: azure-common.encodeUri
  id: azure-common.encodeUri
  name: encodeUri(uri)
  summary: Codifica un identificador URI.
  fullName: azure-common.encodeUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: El URI que se desea codificar.
    return:
      type:
      - string
      description: El identificador URI codificado.
    content: function encodeUri(uri)
  langs:
  - js
- uid: azure-common.objectKeysLength
  id: azure-common.objectKeysLength
  name: objectKeysLength(value)
  summary: Devuelve el número de claves (propiedades) de un objeto.
  fullName: azure-common.objectKeysLength(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: El objeto que se cuentan las claves.
    return:
      type:
      - number
      description: El número de claves en el objeto.
    content: function objectKeysLength(value)
  langs:
  - js
- uid: azure-common.objectFirstKey
  id: azure-common.objectFirstKey
  name: objectFirstKey(value)
  summary: Devuelve el nombre de la primera propiedad en un objeto.
  fullName: azure-common.objectFirstKey(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: Objeto clave que se va a devolver.
    return:
      type:
      - number
      description: El nombre de la primera clave del objeto.
    content: function objectFirstKey(value)
  langs:
  - js
- uid: azure-common.objectIsNull
  id: azure-common.objectIsNull
  name: objectIsNull(value)
  summary: Comprueba si un valor es null o undefined.
  fullName: azure-common.objectIsNull(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: El valor para que busque null o undefined.
    return:
      type:
      - azure-common.bool
      description: True si el valor es null o undefined, false en caso contrario.
    content: function objectIsNull(value)
  langs:
  - js
- uid: azure-common.objectIsEmpty
  id: azure-common.objectIsEmpty
  name: objectIsEmpty(object)
  summary: Comprueba si un objeto está vacío.
  fullName: azure-common.objectIsEmpty(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: El objeto para comprobar si es null.
    return:
      type:
      - azure-common.bool
      description: True si el objeto en caso contrario, está vacío, es false.
    content: function objectIsEmpty(object)
  langs:
  - js
- uid: azure-common.objectIsInt
  id: azure-common.objectIsInt
  name: objectIsInt(value)
  summary: Determina si un objeto contiene un número entero.
  fullName: azure-common.objectIsInt(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: El objeto de imponer.
    return:
      type:
      - azure-common.bool
      description: True si el objeto contiene un número entero; False en caso contrario.
    content: function objectIsInt(value)
  langs:
  - js
- uid: azure-common.objectIsString
  id: azure-common.objectIsString
  name: objectIsString(object)
  summary: Comprueba si un objeto es una cadena.
  fullName: azure-common.objectIsString(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: El objeto que se comprobará si es una cadena.
    return:
      type:
      - azure-common.bool
      description: True si el objeto es un strign, false en caso contrario.
    content: function objectIsString(object)
  langs:
  - js
- uid: azure-common.objectIsFunction
  id: azure-common.objectIsFunction
  name: objectIsFunction(object)
  summary: Comprobar si un objeto es una función
  fullName: azure-common.objectIsFunction(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: Objeto que se comprueba si se trata de función
    return:
      type:
      - azure-common.bool
      description: True si el objeto especificado es la función, de lo contrario, false
    content: function objectIsFunction(object)
  langs:
  - js
- uid: azure-common.zeroPaddingString
  id: azure-common.zeroPaddingString
  name: zeroPaddingString()
  summary: Servidores front-cero relleno de la cadena de longitud sepcified
  fullName: azure-common.zeroPaddingString()
  type: Function
  syntax:
    content: function zeroPaddingString()
  langs:
  - js
- uid: azure-common.stringIsEmpty
  id: azure-common.stringIsEmpty
  name: stringIsEmpty(value)
  summary: Comprueba si un valor es una cadena vacía, null o undefined.
  fullName: azure-common.stringIsEmpty(value)
  type: Function
  syntax:
    parameters:
    - id: value
      type:
      - object
      description: El valor para buscar una cadena vacía, null o undefined.
    return:
      type:
      - azure-common.bool
      description: True si el valor es una cadena vacía, null o undefined, false en caso contrario.
    content: function stringIsEmpty(value)
  langs:
  - js
- uid: azure-common.stringFormat
  id: azure-common.stringFormat
  name: stringFormat(text, arguments)
  summary: Da formato a un texto reemplazando '?' por los argumentos.
  fullName: azure-common.stringFormat(text, arguments)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: ¿La cadena donde el? se debe reemplazar.
    - id: arguments
      type:
      - array
      description: Los valores que se va a insertar en cuestión marcan parámetros (?).
    return:
      type:
      - string
      description: ''
    content: function stringFormat(text, arguments)
  langs:
  - js
- uid: azure-common.stringStartsWith
  id: azure-common.stringStartsWith
  name: stringStartsWith(text, prefix)
  summary: Determina si una cadena comienza con otra.
  fullName: azure-common.stringStartsWith(text, prefix)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: La cadena de assert.
    - id: prefix
      type:
      - string
      description: Prefijo de cadena.
    return:
      type:
      - azure-common.Bool
      description: True si la cadena comienza con el prefijo; False en caso contrario.
    content: function stringStartsWith(text, prefix)
  langs:
  - js
- uid: azure-common.stringEndsWith
  id: azure-common.stringEndsWith
  name: stringEndsWith(text, suffix)
  summary: Determina si una cadena termina con otra.
  fullName: azure-common.stringEndsWith(text, suffix)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: La cadena de assert.
    - id: suffix
      type:
      - string
      description: El sufijo de la cadena.
    return:
      type:
      - azure-common.Bool
      description: True si la cadena finaliza con el sufijo; False en caso contrario.
    content: function stringEndsWith(text, suffix)
  langs:
  - js
- uid: azure-common.stringIsInt
  id: azure-common.stringIsInt
  name: stringIsInt(text)
  summary: Determina si una cadena contiene un número entero.
  fullName: azure-common.stringIsInt(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: La cadena de assert.
    return:
      type:
      - azure-common.Bool
      description: True si la cadena contiene un número entero; False en caso contrario.
    content: function stringIsInt(text)
  langs:
  - js
- uid: azure-common.stringIsFloat
  id: azure-common.stringIsFloat
  name: stringIsFloat(text)
  summary: Determina si una cadena contiene un número de punto flotante.
  fullName: azure-common.stringIsFloat(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: La cadena de assert.
    return:
      type:
      - azure-common.Bool
      description: True si la cadena contiene un número de punto flotante; False en caso contrario.
    content: function stringIsFloat(text)
  langs:
  - js
- uid: azure-common.stringIsNumber
  id: azure-common.stringIsNumber
  name: stringIsNumber(text)
  summary: Determina si una cadena contiene un número.
  fullName: azure-common.stringIsNumber(text)
  type: Function
  syntax:
    parameters:
    - id: text
      type:
      - string
      description: La cadena de assert.
    return:
      type:
      - azure-common.Bool
      description: True si la cadena contiene un número; False en caso contrario.
    content: function stringIsNumber(text)
  langs:
  - js
- uid: azure-common.stringIsDate
  id: azure-common.stringIsDate
  name: stringIsDate(date)
  summary: Determina si un objeto de fecha es válido.
  fullName: azure-common.stringIsDate(date)
  type: Function
  syntax:
    parameters:
    - id: date
      type:
      - Date
      description: La fecha para probar
    return:
      type:
      - azure-common.Bool
      description: True si la fecha es válida; False en caso contrario.
    content: function stringIsDate(date)
  langs:
  - js
- uid: azure-common.urlIsHTTPS
  id: azure-common.urlIsHTTPS
  name: urlIsHTTPS(urlToCheck)
  summary: Comprueba si una dirección URL analizada es HTTPS
  fullName: azure-common.urlIsHTTPS(urlToCheck)
  type: Function
  syntax:
    parameters:
    - id: urlToCheck
      type:
      - object
      description: La dirección url para comprobar
    return:
      type:
      - azure-common.bool
      description: True si la dirección URL es HTTPS. False en caso contrario.
    content: function urlIsHTTPS(urlToCheck)
  langs:
  - js
- uid: azure-common.removeBOM
  id: azure-common.removeBOM
  name: removeBOM(str)
  summary: Quita la lista de materiales de una cadena.
  fullName: azure-common.removeBOM(str)
  type: Function
  syntax:
    parameters:
    - id: str
      type:
      - string
      description: La cadena desde donde la lista de materiales se va a quitar
    return:
      type:
      - string
      description: La cadena sin marca BOM.
    content: function removeBOM(str)
  langs:
  - js
- uid: azure-common.merge
  id: azure-common.merge
  name: merge(object)
  summary: Combina varios objetos.
  fullName: azure-common.merge(object)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: Los objetos que se combinarán
    return:
      type:
      - object
      description: El objeto combinado.
    content: function merge(object)
  langs:
  - js
- uid: azure-common.inArrayInsensitive
  id: azure-common.inArrayInsensitive
  name: inArrayInsensitive(needle, haystack)
  summary: Comprueba si existe un valor en una matriz. La comparación se realiza de manera entre mayúsculas y minúsculas.
  fullName: azure-common.inArrayInsensitive(needle, haystack)
  type: Function
  syntax:
    parameters:
    - id: needle
      type:
      - string
      description: El valor buscado.
    - id: haystack
      type:
      - array
      description: La matriz.
    return:
      type:
      - boolean
      description: ''
    content: function inArrayInsensitive(needle, haystack)
  langs:
  - js
- uid: azure-common.tryGetValueInsensitive
  id: azure-common.tryGetValueInsensitive
  name: tryGetValueInsensitive(key, haystack, default)
  summary: Devuelve pasa el valor especificado de la clave de objeto y, en caso de que esta clave no existe, se devuelve el valor predeterminado. La coincidencia de clave se realiza de manera entre mayúsculas y minúsculas.
  fullName: azure-common.tryGetValueInsensitive(key, haystack, default)
  type: Function
  syntax:
    parameters:
    - id: key
      type:
      - string
      description: La clave de la matriz.
    - id: haystack
      type:
      - object
      description: Objeto que se usará.
    - id: default
      type:
      - azure-common.mix
      description: Valor que se devuelve si no se encuentra $key en $array.
    return:
      description: mezclar
    content: function tryGetValueInsensitive(key, haystack, default)
  langs:
  - js
- uid: azure-common.getNameSpace
  id: azure-common.getNameSpace
  name: getNameSpace()
  summary: Devuelve el espacio de nombres subscriptoinId, un prefijo y una ubicación
  fullName: azure-common.getNameSpace()
  tags:
  - originalTitle: subscriptionId
    title: subscriptionid
    text: '{string}  The Azure subscription id.'
    value: '{string}  The Azure subscription id.'
  - originalTitle: prefix
    title: prefix
    text: '{string}          The prifix for the service.'
    value: '{string}          The prifix for the service.'
  - originalTitle: location
    title: location
    text: '{string}        The location of the service.'
    value: '{string}        The location of the service.'
  type: Function
  syntax:
    return:
      type:
      - azure-common.Bool
      description: True si el valor es un número entero; False en caso contrario.
    content: function getNameSpace()
  langs:
  - js
- uid: azure-common.isInt
  id: azure-common.isInt
  name: isInt(The)
  summary: Determina si un valor (cadena o número) es un número entero.
  fullName: azure-common.isInt(The)
  type: Function
  syntax:
    parameters:
    - id: The
      type:
      - object
      description: valor que se va a evaluar.
    return:
      type:
      - azure-common.Bool
      description: True si el valor es un número entero; False en caso contrario.
    content: function isInt(The)
  langs:
  - js
- uid: azure-common.tryGetValueChain
  id: azure-common.tryGetValueChain
  name: tryGetValueChain(object, keys, default)
  summary: Devuelve el valor de un objeto encadenado.
  fullName: azure-common.tryGetValueChain(object, keys, default)
  type: Function
  syntax:
    parameters:
    - id: object
      type:
      - object
      description: El objeto con los valores.
    - id: keys
      type:
      - array
      description: Las llaves.
    - id: default
      type:
      - azure-common.mix
      description: Valor que se devuelve si no se encuentra $key en $array.
    return:
      description: mezclar
    content: function tryGetValueChain(object, keys, default)
  langs:
  - js
- uid: azure-common.truncatedISO8061Date
  id: azure-common.truncatedISO8061Date
  name: truncatedISO8061Date(a)
  summary: Redondea una fecha en segundos.
  fullName: azure-common.truncatedISO8061Date(a)
  type: Function
  syntax:
    parameters:
    - id: a
      type:
      - Date
      description: fecha
    return:
      type:
      - string
      description: la fecha en formato ISO8061, con ningún componente de milisegundos
    content: function truncatedISO8061Date(a)
  langs:
  - js
- uid: azure-common.isBufferAllZero
  id: azure-common.isBufferAllZero
  name: isBufferAllZero()
  summary: Si el contenido del búfer es todos cero
  fullName: azure-common.isBufferAllZero()
  type: Function
  syntax:
    content: function isBufferAllZero()
  langs:
  - js
- uid: azure-common.getContentMd5
  id: azure-common.getContentMd5
  name: getContentMd5()
  summary: Calcular md5sum del contenido
  fullName: azure-common.getContentMd5()
  type: Function
  syntax:
    content: function getContentMd5()
  langs:
  - js
- uid: azure-common.isValidUri
  id: azure-common.isValidUri
  name: isValidUri(uri)
  summary: Crea una función anónima que compruebe si el uri especificado es válido o no.
  fullName: azure-common.isValidUri(uri)
  type: Function
  syntax:
    parameters:
    - id: uri
      type:
      - string
      description: Uri que se va a validar.
    return:
      type:
      - function
      description: ''
    content: function isValidUri(uri)
  langs:
  - js
- uid: azure-common.isValidHDInsightCreationObject
  id: azure-common.isValidHDInsightCreationObject
  name: isValidHDInsightCreationObject(clusterCreationObject)
  summary: Valida que un clusterCreationObject sea correcto.
  fullName: azure-common.isValidHDInsightCreationObject(clusterCreationObject)
  type: Function
  syntax:
    parameters:
    - id: clusterCreationObject
      type:
      - object
      description: >-
        El objeto que se usa para proporcionar todos los parámetros necesarios para crear un clúster.

        {/ / los siguientes son el nombre de los campos obligatorios: ' el nombre del clúster (nombre dns) de todo en minúsculas ', ubicación: 'el centro de datos de Azure donde es necesario crear el clúster', defaultStorageAccountName: 'El nombre de la cuenta de almacenamiento de Azure predeterminada' defaultStorageAccountKey: 'La clave secreta de la cuenta de almacenamiento de Azure predeterminado,' defaultStorageContainer: 'El contenedor para la cuenta de almacenamiento de Azure predeterminada', usuario: "El nombre de usuario que se usará para el clúster" contraseña: 'La contraseña que se usará para el clúster' nodos: número / / el número de nodos que usará / / los siguientes son los campos opcionales additionalStorageAccounts: [{nombre: clave de 'nombre de la cuenta de almacenamiento': 'la clave secreta de la cuenta de almacenamiento'}, {/ / cuentas adicionales siguiendo el mismo patrón}] / / siguiente son opcionales, pero si se especifica el otro es necesario oozieMetastore: {servidor: 'el nombre de sql server para usar', base de datos: 'la base de datos de sql para usar' usuario: contraseña 'el nombre de usuario que se utiliza al iniciar sesión en la base de datos': ' la contraseña que se utilizará al iniciar sesión en el base de datos '} hiveMetastore: {servidor: 'el nombre de sql server para usar', base de datos: 'la base de datos de sql para usar' usuario: contraseña 'el nombre de usuario que se utiliza al iniciar sesión en la base de datos': 'la contraseña que se usará al iniciar sesión en la base de datos'}}
    content: function isValidHDInsightCreationObject(clusterCreationObject)
  langs:
  - js
- uid: azure-common.isBase64Encoded
  id: azure-common.isBase64Encoded
  name: isBase64Encoded(key)
  summary: Crea una función anónima que comprobar si una clave determinada está codificado en base 64.
  fullName: azure-common.isBase64Encoded(key)
  type: Function
  syntax:
    parameters:
    - id: key
      type:
      - string
      description: Para validar la clave.
    return:
      type:
      - function
      description: ''
    content: function isBase64Encoded(key)
  langs:
  - js
- uid: azure-common.isValidFunction
  id: azure-common.isValidFunction
  name: isValidFunction(function)
  summary: Valida una función.
  fullName: azure-common.isValidFunction(function)
  type: Function
  syntax:
    parameters:
    - id: function
      type:
      - object
      description: La función para validar.
    return:
      type:
      - function
      description: ''
    content: function isValidFunction(function)
  langs:
  - js
- uid: azure-common.namespaceNameIsValid
  id: azure-common.namespaceNameIsValid
  name: namespaceNameIsValid(name)
  summary: Valida que un nombre de espacio de nombres de Service Bus es legalmente permitido. No se comprueba la disponibilidad.
  fullName: azure-common.namespaceNameIsValid(name)
  type: Function
  syntax:
    parameters:
    - id: name
      type:
      - string
      description: el nombre debe comprobar
    return:
      description: nada. Excepción se produce si el nombre no es válido, mensaje describe los criterios de validez infringe.
    content: function namespaceNameIsValid(name)
  langs:
  - js
- uid: azure-common.containerNameIsValid
  id: azure-common.containerNameIsValid
  name: containerNameIsValid(containerName)
  summary: Valida un nombre de contenedor.
  fullName: azure-common.containerNameIsValid(containerName)
  type: Function
  syntax:
    parameters:
    - id: containerName
      type:
      - string
      description: El nombre del contenedor.
    return:
      type:
      - undefined
      description: ''
    content: function containerNameIsValid(containerName)
  langs:
  - js
- uid: azure-common.blobNameIsValid
  id: azure-common.blobNameIsValid
  name: blobNameIsValid(containerName, blobname)
  summary: Valida un nombre de blob.
  fullName: azure-common.blobNameIsValid(containerName, blobname)
  type: Function
  syntax:
    parameters:
    - id: containerName
      type:
      - string
      description: El nombre del contenedor.
    - id: blobname
      type:
      - string
      description: El nombre del blob.
    return:
      type:
      - undefined
      description: ''
    content: function blobNameIsValid(containerName, blobname)
  langs:
  - js
- uid: azure-common.tableNameIsValid
  id: azure-common.tableNameIsValid
  name: tableNameIsValid(table)
  summary: Valida un nombre de tabla.
  fullName: azure-common.tableNameIsValid(table)
  type: Function
  syntax:
    parameters:
    - id: table
      type:
      - string
      description: El nombre de tabla.
    return:
      type:
      - undefined
      description: ''
    content: function tableNameIsValid(table)
  langs:
  - js
- uid: azure-common.queueNameIsValid
  id: azure-common.queueNameIsValid
  name: queueNameIsValid(queue)
  summary: Valida un nombre de cola.
  fullName: azure-common.queueNameIsValid(queue)
  type: Function
  syntax:
    parameters:
    - id: queue
      type:
      - string
      description: El nombre de la cola
    return:
      type:
      - undefined
      description: ''
    content: function queueNameIsValid(queue)
  langs:
  - js
references:
- uid: azure-common.StorageServiceClient
  name: StorageServiceClient
- uid: azure-common.ServiceManagementClient
  name: ServiceManagementClient
- uid: azure-common.ServiceClient
  name: ServiceClient
- uid: azure-common.HmacSha256Sign
  name: HmacSha256Sign
- uid: azure-common.LinearRetryPolicyFilter
  name: LinearRetryPolicyFilter
- uid: azure-common.ExponentialRetryPolicyFilter
  name: ExponentialRetryPolicyFilter
- uid: azure-common.TokenCloudCredentials
  name: TokenCloudCredentials
- uid: azure-common.CertificateCloudCredentials
  name: CertificateCloudCredentials
- uid: azure-common.AnonymousCloudCredentials
  name: AnonymousCloudCredentials
- uid: azure-common.ConnectionStringParser
  name: ConnectionStringParser
- uid: azure-common.WebResource
  name: WebResource
