### YamlMime:UniversalReference
ms.openlocfilehash: 75afaedf2f5e76f076c1167cc227823ca7dc934f
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/12/2018
ms.locfileid: "40075223"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilizado para la serie se anexa al archivo especificado. Nota: El destino no puede contener datos agregados por ConcurrentAppend. No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino.'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a anexar.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        El contenido del archivo para incluir cuando se anexan al archivo.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilizado para la serie se anexa al archivo especificado. Nota: El destino no puede contener datos agregados por ConcurrentAppend. No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino.'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilizado para la serie se anexa al archivo especificado. Nota: El destino no puede contener datos agregados por ConcurrentAppend. No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino.'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilizado para la serie se anexa al archivo especificado. Nota: El destino no puede contener datos agregados por ConcurrentAppend. No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino.'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a anexar.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        El contenido del archivo para incluir cuando se anexan al archivo.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: Comprueba si el acceso especificado est谩 disponible en la ruta de acceso dada.
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a comprobar el acceso.
    - id: fsaction
      type:
      - string
      description: >
        Archivo del sistema operaci贸n lectura/escritura/ejecuci贸n en forma de cadena, que coincida con el patr贸n de expresi贸n regular ' rwx-{3}'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: Comprueba si el acceso especificado est谩 disponible en la ruta de acceso dada.
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess
  children: []
  type: method
  langs:
  - typeScript
  summary: Comprueba si el acceso especificado est谩 disponible en la ruta de acceso dada.
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Comprueba si el acceso especificado est谩 disponible en la ruta de acceso dada.
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a comprobar el acceso.
    - id: fsaction
      type:
      - string
      description: >
        Archivo del sistema operaci贸n lectura/escritura/ejecuci贸n en forma de cadena, que coincida con el patr贸n de expresi贸n regular ' rwx-{3}'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenaci贸n.
    - id: sources
      type:
      - string[]
      description: >
        Una lista de coma separada por las rutas de acceso de Data Lake Store (a partir de '/') de los archivos que se va a concatenar, en el orden en el que debe estar concatenados.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenaci贸n.
    - id: sources
      type:
      - string[]
      description: >
        Una lista de coma separada por las rutas de acceso de Data Lake Store (a partir de '/') de los archivos que se va a concatenar, en el orden en el que debe estar concatenados.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Anexa al archivo especificado, opcionalmente, crea primero el archivo si a煤n no existe. Este m茅todo es compatible con m煤ltiples simult谩neas que se anexa al archivo.

    Nota: El destino no puede contener datos agregados por Create o normal Append (serie). No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino. ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo de uso simult谩neo anexar a la que se va a anexar.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        El contenido del archivo para incluir cuando se anexan al archivo.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Anexa al archivo especificado, opcionalmente, crea primero el archivo si a煤n no existe. Este m茅todo es compatible con m煤ltiples simult谩neas que se anexa al archivo.

    Nota: El destino no puede contener datos agregados por Create o normal Append (serie). No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino. ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Anexa al archivo especificado, opcionalmente, crea primero el archivo si a煤n no existe. Este m茅todo es compatible con m煤ltiples simult谩neas que se anexa al archivo.

    Nota: El destino no puede contener datos agregados por Create o normal Append (serie). No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino. ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Anexa al archivo especificado, opcionalmente, crea primero el archivo si a煤n no existe. Este m茅todo es compatible con m煤ltiples simult谩neas que se anexa al archivo.

    Nota: El destino no puede contener datos agregados por Create o normal Append (serie). No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opci贸n de anexar no se puede usar en el archivo de destino. ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo de uso simult谩neo anexar a la que se va a anexar.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        El contenido del archivo para incluir cuando se anexan al archivo.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Crea un archivo con el contenido especificado opcionalmente. Nota: Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.'
  syntax:
    content: 'function create(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Crea un archivo con el contenido especificado opcionalmente. Nota: Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.'
  syntax:
    content: 'function create(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a crear.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Crea un archivo con el contenido especificado opcionalmente. Nota: Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Crea un archivo con el contenido especificado opcionalmente. Nota: Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a crear.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el archivo solicitado o directorio, opcionalmente recursivamente.
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio va a eliminar.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el archivo solicitado o directorio, opcionalmente recursivamente.
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el archivo solicitado o directorio, opcionalmente recursivamente.
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Elimina el archivo solicitado o directorio, opcionalmente recursivamente.
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio va a eliminar.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a obtener la ACL.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: function, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a obtener la ACL.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a recuperar el resumen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: function, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a recuperar el resumen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a recuperar el estado.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a recuperar el estado.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los par谩metros de paginaci贸n opcional
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los par谩metros de paginaci贸n opcional
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: function, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los par谩metros de paginaci贸n opcional
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del directorio a la lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los par谩metros de paginaci贸n opcional
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del directorio a la lista.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un directorio.
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del directorio que se va a crear.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un directorio.
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un directorio.
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea un directorio.
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del directorio que se va a crear.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se est谩 modificando.
    - id: aclspec
      type:
      - string
      description: >
        La especificaci贸n de ACL que se incluyen en las operaciones de modificaci贸n de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se est谩 modificando.
    - id: aclspec
      type:
      - string
      description: >
        La especificaci贸n de ACL que se incluyen en las operaciones de modificaci贸n de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente. Este m茅todo acepta m谩s rutas de acceso de archivo de origen que el m茅todo Concat. Este m茅todo y los par谩metros que se acepte est谩n sujetos a cambios para su uso en una pr贸xima versi贸n.
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenaci贸n.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Una lista de rutas de acceso de Data Lake Store (a partir de '/') de los archivos de origen. Debe ser una lista separada por comas de ruta de acceso en el formato: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente. Este m茅todo acepta m谩s rutas de acceso de archivo de origen que el m茅todo Concat. Este m茅todo y los par谩metros que se acepte est谩n sujetos a cambios para su uso en una pr贸xima versi贸n.
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente. Este m茅todo acepta m谩s rutas de acceso de archivo de origen que el m茅todo Concat. Este m茅todo y los par谩metros que se acepte est谩n sujetos a cambios para su uso en una pr贸xima versi贸n.
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente. Este m茅todo acepta m谩s rutas de acceso de archivo de origen que el m茅todo Concat. Este m茅todo y los par谩metros que se acepte est谩n sujetos a cambios para su uso en una pr贸xima versi贸n.
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenaci贸n.
    - id: streamContents
      type:
      - stream.Readable
      description: >
        Una lista de rutas de acceso de Data Lake Store (a partir de '/') de los archivos de origen. Debe ser una lista separada por comas de ruta de acceso en el formato: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Se abre y lee el archivo especificado.
  syntax:
    content: 'function open(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se abra.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Se abre y lee el archivo especificado.
  syntax:
    content: 'function open(accountName: string, path: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: Se abre y lee el archivo especificado.
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Se abre y lee el archivo especificado.
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se abra.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.
    - id: aclspec
      type:
      - string
      description: >
        La especificaci贸n ACL incluida en las operaciones de eliminaci贸n de ACL en el formato "[predeterminado:] usuario | grupo | otros '
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.
    - id: aclspec
      type:
      - string
      description: >
        La especificaci贸n ACL incluida en las operaciones de eliminaci贸n de ACL en el formato "[predeterminado:] usuario | grupo | otros '
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del directorio con el valor predeterminado ACL que se va a quitar.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del directorio con el valor predeterminado ACL que se va a quitar.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: Cambiar el nombre de un archivo o directorio.
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para move/rename.
    - id: destination
      type:
      - string
      description: >
        Mover/cambiar nombres de archivo o carpeta a la ruta de acceso
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: Cambiar el nombre de un archivo o directorio.
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: function, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename
  children: []
  type: method
  langs:
  - typeScript
  summary: Cambiar el nombre de un archivo o directorio.
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Cambiar el nombre de un archivo o directorio.
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para move/rename.
    - id: destination
      type:
      - string
      description: >
        Mover/cambiar nombres de archivo o carpeta a la ruta de acceso
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la lista de Control de acceso (ACL) para un archivo o carpeta.
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio en el que se va a establecer la ACL.
    - id: aclspec
      type:
      - string
      description: >
        La especificaci贸n ACL incluida en las operaciones de creaci贸n de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la lista de Control de acceso (ACL) para un archivo o carpeta.
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la lista de Control de acceso (ACL) para un archivo o carpeta.
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece la lista de Control de acceso (ACL) para un archivo o carpeta.
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio en el que se va a establecer la ACL.
    - id: aclspec
      type:
      - string
      description: >
        La especificaci贸n ACL incluida en las operaciones de creaci贸n de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece o quita la hora de expiraci贸n en el archivo especificado. Esta operaci贸n solo se puede ejecutar en archivos. No se admiten las carpetas.
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo en el que se va a establecer o quitar la hora de expiraci贸n.
    - id: expiryOption
      type:
      - string
      description: >
        Indica el tipo de expiraci贸n que se usar谩 para el archivo: 1. NeverExpire: ExpireTime se omite. 2. RelativeToNow: ExpireTime es un entero en milisegundos, que representa la fecha de vencimiento relativo a cuando se actualiza la expiraci贸n de archivos. 3. RelativeToCreationDate: ExpireTime es un entero en milisegundos, que representa la fecha de expiraci贸n en relaci贸n con la creaci贸n de archivos. 4. Absoluta: ExpireTime es un entero en milisegundos, como una marca de tiempo Unix en relaci贸n con 1/1/1970 00:00:00. Los valores posibles son: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absoluto'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece o quita la hora de expiraci贸n en el archivo especificado. Esta operaci贸n solo se puede ejecutar en archivos. No se admiten las carpetas.
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece o quita la hora de expiraci贸n en el archivo especificado. Esta operaci贸n solo se puede ejecutar en archivos. No se admiten las carpetas.
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece o quita la hora de expiraci贸n en el archivo especificado. Esta operaci贸n solo se puede ejecutar en archivos. No se admiten las carpetas.
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo en el que se va a establecer o quitar la hora de expiraci贸n.
    - id: expiryOption
      type:
      - string
      description: >
        Indica el tipo de expiraci贸n que se usar谩 para el archivo: 1. NeverExpire: ExpireTime se omite. 2. RelativeToNow: ExpireTime es un entero en milisegundos, que representa la fecha de vencimiento relativo a cuando se actualiza la expiraci贸n de archivos. 3. RelativeToCreationDate: ExpireTime es un entero en milisegundos, que representa la fecha de expiraci贸n en relaci贸n con la creaci贸n de archivos. 4. Absoluta: ExpireTime es un entero en milisegundos, como una marca de tiempo Unix en relaci贸n con 1/1/1970 00:00:00. Los valores posibles son: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absoluto'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el propietario de un archivo o directorio.
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el propietario.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el propietario de un archivo o directorio.
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el propietario de un archivo o directorio.
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el propietario de un archivo o directorio.
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el propietario.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el permiso del archivo o carpeta.
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el permiso.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el permiso del archivo o carpeta.
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el permiso del archivo o carpeta.
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Establece el permiso del archivo o carpeta.
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: function)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.
    - id: path
      type:
      - string
      description: >
        La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el permiso.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
