### YamlMime:UniversalReference
ms.openlocfilehash: 051668180977efad82270f671a6fb69557e2d712
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52044991"
items:
- uid: azure-arm-datalake-store.FileSystem
  name: FileSystem
  fullName: FileSystem
  children:
  - azure-arm-datalake-store.FileSystem.append
  - azure-arm-datalake-store.FileSystem.append_2
  - azure-arm-datalake-store.FileSystem.append_1
  - azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.checkAccess
  - azure-arm-datalake-store.FileSystem.checkAccess_2
  - azure-arm-datalake-store.FileSystem.checkAccess_1
  - azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concat
  - azure-arm-datalake-store.FileSystem.concat_2
  - azure-arm-datalake-store.FileSystem.concat_1
  - azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.concurrentAppend
  - azure-arm-datalake-store.FileSystem.concurrentAppend_2
  - azure-arm-datalake-store.FileSystem.concurrentAppend_1
  - azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.create
  - azure-arm-datalake-store.FileSystem.create_2
  - azure-arm-datalake-store.FileSystem.create_1
  - azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.deleteMethod
  - azure-arm-datalake-store.FileSystem.deleteMethod_2
  - azure-arm-datalake-store.FileSystem.deleteMethod_1
  - azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getAclStatus
  - azure-arm-datalake-store.FileSystem.getAclStatus_2
  - azure-arm-datalake-store.FileSystem.getAclStatus_1
  - azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getContentSummary
  - azure-arm-datalake-store.FileSystem.getContentSummary_2
  - azure-arm-datalake-store.FileSystem.getContentSummary_1
  - azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.getFileStatus
  - azure-arm-datalake-store.FileSystem.getFileStatus_2
  - azure-arm-datalake-store.FileSystem.getFileStatus_1
  - azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.listFileStatus
  - azure-arm-datalake-store.FileSystem.listFileStatus_2
  - azure-arm-datalake-store.FileSystem.listFileStatus_1
  - azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.mkdirs
  - azure-arm-datalake-store.FileSystem.mkdirs_2
  - azure-arm-datalake-store.FileSystem.mkdirs_1
  - azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.modifyAclEntries
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  - azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  - azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.msConcat
  - azure-arm-datalake-store.FileSystem.msConcat_2
  - azure-arm-datalake-store.FileSystem.msConcat_1
  - azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.open
  - azure-arm-datalake-store.FileSystem.open_2
  - azure-arm-datalake-store.FileSystem.open_1
  - azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAcl
  - azure-arm-datalake-store.FileSystem.removeAcl_2
  - azure-arm-datalake-store.FileSystem.removeAcl_1
  - azure-arm-datalake-store.FileSystem.removeAclEntries
  - azure-arm-datalake-store.FileSystem.removeAclEntries_2
  - azure-arm-datalake-store.FileSystem.removeAclEntries_1
  - azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  - azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  - azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.rename
  - azure-arm-datalake-store.FileSystem.rename_2
  - azure-arm-datalake-store.FileSystem.rename_1
  - azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setAcl
  - azure-arm-datalake-store.FileSystem.setAcl_2
  - azure-arm-datalake-store.FileSystem.setAcl_1
  - azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setFileExpiry
  - azure-arm-datalake-store.FileSystem.setFileExpiry_2
  - azure-arm-datalake-store.FileSystem.setFileExpiry_1
  - azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setOwner
  - azure-arm-datalake-store.FileSystem.setOwner_2
  - azure-arm-datalake-store.FileSystem.setOwner_1
  - azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  - azure-arm-datalake-store.FileSystem.setPermission
  - azure-arm-datalake-store.FileSystem.setPermission_2
  - azure-arm-datalake-store.FileSystem.setPermission_1
  - azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append
  name: append(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-101">Utilizado para la serie se anexa al archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-101">Used for serial appends to the specified file.</span></span><span data-ttu-id="78131-102"> NOTA:  El destino no puede contener datos agregados por ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-102"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="78131-103">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-103">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-104">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-104">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-105">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a anexar.</span><span class="sxs-lookup"><span data-stu-id="78131-105">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="78131-106">El contenido del archivo para incluir cuando se anexan al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-106">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="78131-107">El tamaño máximo del contenido es 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-107">The maximum content size is 4MB.</span></span>  <span data-ttu-id="78131-108">Para contenido de más de 4MB se debe anexar el contenido en fragmentos de 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-108">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_2
  name: append(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-109">Utilizado para la serie se anexa al archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-109">Used for serial appends to the specified file.</span></span><span data-ttu-id="78131-110"> NOTA:  El destino no puede contener datos agregados por ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-110"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="78131-111">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-111">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.append_1
  name: append(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-112">Utilizado para la serie se anexa al archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-112">Used for serial appends to the specified file.</span></span><span data-ttu-id="78131-113"> NOTA:  El destino no puede contener datos agregados por ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-113"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="78131-114">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-114">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function append(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.appendWithHttpOperationResponse
  name: appendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-115">Utilizado para la serie se anexa al archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-115">Used for serial appends to the specified file.</span></span><span data-ttu-id="78131-116"> NOTA:  El destino no puede contener datos agregados por ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-116"> NOTE: The target must not contain data added by ConcurrentAppend.</span></span> <span data-ttu-id="78131-117">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-117">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span>'
  syntax:
    content: 'function appendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-118">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-118">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-119">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a anexar.</span><span class="sxs-lookup"><span data-stu-id="78131-119">The Data Lake Store path (starting with '/') of the file to which to append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="78131-120">El contenido del archivo para incluir cuando se anexan al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-120">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="78131-121">El tamaño máximo del contenido es 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-121">The maximum content size is 4MB.</span></span>  <span data-ttu-id="78131-122">Para contenido de más de 4MB se debe anexar el contenido en fragmentos de 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-122">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess
  name: checkAccess(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-123">Comprueba si el acceso especificado está disponible en la ruta de acceso dada.</span><span class="sxs-lookup"><span data-stu-id="78131-123">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-124">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-124">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-125">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a comprobar el acceso.</span><span class="sxs-lookup"><span data-stu-id="78131-125">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="78131-126">Archivo del sistema operación lectura/escritura/ejecución en forma de cadena, que coincida con el patrón de expresión regular ' rwx-{3}'</span><span class="sxs-lookup"><span data-stu-id="78131-126">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_2
  name: checkAccess(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-127">Comprueba si el acceso especificado está disponible en la ruta de acceso dada.</span><span class="sxs-lookup"><span data-stu-id="78131-127">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccess_1
  name: checkAccess(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-128">Comprueba si el acceso especificado está disponible en la ruta de acceso dada.</span><span class="sxs-lookup"><span data-stu-id="78131-128">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccess(accountName: string, path: string, fsaction: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: fsaction
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.checkAccessWithHttpOperationResponse
  name: checkAccessWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-129">Comprueba si el acceso especificado está disponible en la ruta de acceso dada.</span><span class="sxs-lookup"><span data-stu-id="78131-129">Checks if the specified access is available at the given path.</span></span>
  syntax:
    content: 'function checkAccessWithHttpOperationResponse(accountName: string, path: string, fsaction: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-130">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-130">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-131">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a comprobar el acceso.</span><span class="sxs-lookup"><span data-stu-id="78131-131">The Data Lake Store path (starting with '/') of the file or directory for which to check access.</span></span>
    - id: fsaction
      type:
      - string
      description: >
        <span data-ttu-id="78131-132">Archivo del sistema operación lectura/escritura/ejecución en forma de cadena, que coincida con el patrón de expresión regular ' rwx-{3}'</span><span class="sxs-lookup"><span data-stu-id="78131-132">File system operation read/write/execute in string form, matching regex pattern '[rwx-]{3}'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat
  name: concat(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-133">Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-133">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-134">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-134">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-135">La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenación.</span><span class="sxs-lookup"><span data-stu-id="78131-135">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="78131-136">Una lista de coma separada por las rutas de acceso de Data Lake Store (a partir de '/') de los archivos que se va a concatenar, en el orden en el que debe estar concatenados.</span><span class="sxs-lookup"><span data-stu-id="78131-136">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_2
  name: concat(string, string, string[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-137">Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-137">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concat_1
  name: concat(string, string, string[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-138">Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-138">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concat(accountName: string, path: string, sources: string[], callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: sources
      type:
      - string[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concatWithHttpOperationResponse
  name: concatWithHttpOperationResponse(string, string, string[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-139">Concatena la lista de archivos de origen en el archivo de destino, quita todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-139">Concatenates the list of source files into the destination file, removing all source files upon success.</span></span>
  syntax:
    content: 'function concatWithHttpOperationResponse(accountName: string, path: string, sources: string[], options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-140">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-140">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-141">La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenación.</span><span class="sxs-lookup"><span data-stu-id="78131-141">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: sources
      type:
      - string[]
      description: >
        <span data-ttu-id="78131-142">Una lista de coma separada por las rutas de acceso de Data Lake Store (a partir de '/') de los archivos que se va a concatenar, en el orden en el que debe estar concatenados.</span><span class="sxs-lookup"><span data-stu-id="78131-142">A list of comma separated Data Lake Store paths (starting with '/') of the files to concatenate, in the order in which they should be concatenated.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend
  name: concurrentAppend(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="78131-143">Anexa al archivo especificado, opcionalmente, crea primero el archivo si aún no existe.</span><span class="sxs-lookup"><span data-stu-id="78131-143">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="78131-144">Este método es compatible con múltiples simultáneas que se anexa al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-144">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="78131-145">NOTA:  El destino no puede contener datos agregados por Create o normal Append (serie).</span><span class="sxs-lookup"><span data-stu-id="78131-145">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="78131-146">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-146">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="78131-147">ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-147">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-148">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-148">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-149">La ruta de acceso de Data Lake Store (a partir de '/') del archivo de uso simultáneo anexar a la que se va a anexar.</span><span class="sxs-lookup"><span data-stu-id="78131-149">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="78131-150">El contenido del archivo para incluir cuando se anexan al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-150">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="78131-151">El tamaño máximo del contenido es 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-151">The maximum content size is 4MB.</span></span>  <span data-ttu-id="78131-152">Para contenido de más de 4MB se debe anexar el contenido en fragmentos de 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-152">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_2
  name: concurrentAppend(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="78131-153">Anexa al archivo especificado, opcionalmente, crea primero el archivo si aún no existe.</span><span class="sxs-lookup"><span data-stu-id="78131-153">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="78131-154">Este método es compatible con múltiples simultáneas que se anexa al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-154">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="78131-155">NOTA:  El destino no puede contener datos agregados por Create o normal Append (serie).</span><span class="sxs-lookup"><span data-stu-id="78131-155">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="78131-156">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-156">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="78131-157">ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-157">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppend_1
  name: concurrentAppend(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="78131-158">Anexa al archivo especificado, opcionalmente, crea primero el archivo si aún no existe.</span><span class="sxs-lookup"><span data-stu-id="78131-158">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="78131-159">Este método es compatible con múltiples simultáneas que se anexa al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-159">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="78131-160">NOTA:  El destino no puede contener datos agregados por Create o normal Append (serie).</span><span class="sxs-lookup"><span data-stu-id="78131-160">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="78131-161">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-161">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="78131-162">ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-162">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppend(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.concurrentAppendWithHttpOperationResponse
  name: concurrentAppendWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    <span data-ttu-id="78131-163">Anexa al archivo especificado, opcionalmente, crea primero el archivo si aún no existe.</span><span class="sxs-lookup"><span data-stu-id="78131-163">Appends to the specified file, optionally first creating the file if it does not yet exist.</span></span> <span data-ttu-id="78131-164">Este método es compatible con múltiples simultáneas que se anexa al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-164">This method supports multiple concurrent appends to the file.</span></span>

    <span data-ttu-id="78131-165">NOTA:  El destino no puede contener datos agregados por Create o normal Append (serie).</span><span class="sxs-lookup"><span data-stu-id="78131-165">NOTE: The target must not contain data added by Create or normal (serial) Append.</span></span> <span data-ttu-id="78131-166">No se puede utilizar indistintamente; ConcurrentAppend y anexar una vez que se ha modificado un archivo de destino utilizando cualquiera de estas opciones de anexar, la otra opción de anexar no se puede usar en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-166">ConcurrentAppend and Append cannot be used interchangeably; once a target file has been modified using either of these append options, the other append option cannot be used on the target file.</span></span> <span data-ttu-id="78131-167">ConcurrentAppend no garantiza el orden y puede dar lugar a los datos duplicados de aterrizaje en el archivo de destino.</span><span class="sxs-lookup"><span data-stu-id="78131-167">ConcurrentAppend does not guarantee order and can result in duplicated data landing in the target file.</span></span>
  syntax:
    content: 'function concurrentAppendWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-168">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-168">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-169">La ruta de acceso de Data Lake Store (a partir de '/') del archivo de uso simultáneo anexar a la que se va a anexar.</span><span class="sxs-lookup"><span data-stu-id="78131-169">The Data Lake Store path (starting with '/') of the file to which to append using concurrent append.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="78131-170">El contenido del archivo para incluir cuando se anexan al archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-170">The file contents to include when appending to the file.</span></span>  <span data-ttu-id="78131-171">El tamaño máximo del contenido es 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-171">The maximum content size is 4MB.</span></span>  <span data-ttu-id="78131-172">Para contenido de más de 4MB se debe anexar el contenido en fragmentos de 4MB.</span><span class="sxs-lookup"><span data-stu-id="78131-172">For content larger than 4MB you must append the content in 4MB chunks.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create
  name: create(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-173">Crea un archivo con el contenido especificado opcionalmente.</span><span class="sxs-lookup"><span data-stu-id="78131-173">Creates a file with optionally specified content.</span></span> <span data-ttu-id="78131-174">NOTA:  Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-174">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-175">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-175">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-176">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="78131-176">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_2
  name: create(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-177">Crea un archivo con el contenido especificado opcionalmente.</span><span class="sxs-lookup"><span data-stu-id="78131-177">Creates a file with optionally specified content.</span></span> <span data-ttu-id="78131-178">NOTA:  Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-178">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.create_1
  name: create(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-179">Crea un archivo con el contenido especificado opcionalmente.</span><span class="sxs-lookup"><span data-stu-id="78131-179">Creates a file with optionally specified content.</span></span> <span data-ttu-id="78131-180">NOTA:  Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-180">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function create(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.createWithHttpOperationResponse
  name: createWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: '<span data-ttu-id="78131-181">Crea un archivo con el contenido especificado opcionalmente.</span><span class="sxs-lookup"><span data-stu-id="78131-181">Creates a file with optionally specified content.</span></span> <span data-ttu-id="78131-182">NOTA:  Si se proporciona el contenido, el archivo resultante no se puede modificar mediante ConcurrentAppend.</span><span class="sxs-lookup"><span data-stu-id="78131-182">NOTE: If content is provided, the resulting file cannot be modified using ConcurrentAppend.</span></span>'
  syntax:
    content: 'function createWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-183">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-183">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-184">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="78131-184">The Data Lake Store path (starting with '/') of the file to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod
  name: deleteMethod(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-185">Elimina el archivo solicitado o directorio, opcionalmente recursivamente.</span><span class="sxs-lookup"><span data-stu-id="78131-185">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-186">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-186">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-187">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="78131-187">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_2
  name: deleteMethod(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-188">Elimina el archivo solicitado o directorio, opcionalmente recursivamente.</span><span class="sxs-lookup"><span data-stu-id="78131-188">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethod_1
  name: deleteMethod(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-189">Elimina el archivo solicitado o directorio, opcionalmente recursivamente.</span><span class="sxs-lookup"><span data-stu-id="78131-189">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethod(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.deleteMethodWithHttpOperationResponse
  name: deleteMethodWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-190">Elimina el archivo solicitado o directorio, opcionalmente recursivamente.</span><span class="sxs-lookup"><span data-stu-id="78131-190">Deletes the requested file or directory, optionally recursively.</span></span>
  syntax:
    content: 'function deleteMethodWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-191">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-191">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-192">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio va a eliminar.</span><span class="sxs-lookup"><span data-stu-id="78131-192">The Data Lake Store path (starting with '/') of the file or directory to delete.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus
  name: getAclStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-193">Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-193">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-194">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-194">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-195">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a obtener la ACL.</span><span class="sxs-lookup"><span data-stu-id="78131-195">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_2
  name: getAclStatus(string, string, Object, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-196">Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-196">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatus_1
  name: getAclStatus(string, string, ServiceCallback<AclStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-197">Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-197">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatus(accountName: string, path: string, callback: ServiceCallback<AclStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.AclStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.AclStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getAclStatusWithHttpOperationResponse
  name: getAclStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-198">Obtiene las entradas de la lista de Control de acceso (ACL) para el archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-198">Gets Access Control List (ACL) entries for the specified file or directory.</span></span>
  syntax:
    content: 'function getAclStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-199">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-199">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-200">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a obtener la ACL.</span><span class="sxs-lookup"><span data-stu-id="78131-200">The Data Lake Store path (starting with '/') of the file or directory for which to get the ACL.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary
  name: getContentSummary(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-201">Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-201">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-202">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-202">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-203">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a recuperar el resumen.</span><span class="sxs-lookup"><span data-stu-id="78131-203">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_2
  name: getContentSummary(string, string, Object, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-204">Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-204">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, options: Object, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummary_1
  name: getContentSummary(string, string, ServiceCallback<ContentSummaryResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-205">Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-205">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummary(accountName: string, path: string, callback: ServiceCallback<ContentSummaryResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.ContentSummaryResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getContentSummaryWithHttpOperationResponse
  name: getContentSummaryWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-206">Obtiene el objeto de resumen de archivo contenido especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-206">Gets the file content summary object specified by the file path.</span></span>
  syntax:
    content: 'function getContentSummaryWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-207">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-207">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-208">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se va a recuperar el resumen.</span><span class="sxs-lookup"><span data-stu-id="78131-208">The Data Lake Store path (starting with '/') of the file for which to retrieve the summary.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus
  name: getFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-209">Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-209">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-210">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-210">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-211">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a recuperar el estado.</span><span class="sxs-lookup"><span data-stu-id="78131-211">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_2
  name: getFileStatus(string, string, Object, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-212">Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-212">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatus_1
  name: getFileStatus(string, string, ServiceCallback<FileStatusResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-213">Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-213">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.getFileStatusWithHttpOperationResponse
  name: getFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-214">Obtiene el objeto de estado de archivo especificado por la ruta de acceso de archivo.</span><span class="sxs-lookup"><span data-stu-id="78131-214">Get the file status object specified by the file path.</span></span>
  syntax:
    content: 'function getFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-215">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-215">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-216">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a recuperar el estado.</span><span class="sxs-lookup"><span data-stu-id="78131-216">The Data Lake Store path (starting with '/') of the file or directory for which to retrieve the status.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus
  name: listFileStatus(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-217">Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los parámetros de paginación opcional</span><span class="sxs-lookup"><span data-stu-id="78131-217">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-218">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-218">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-219">La ruta de acceso de Data Lake Store (a partir de '/') del directorio a la lista.</span><span class="sxs-lookup"><span data-stu-id="78131-219">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_2
  name: listFileStatus(string, string, Object, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-220">Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los parámetros de paginación opcional</span><span class="sxs-lookup"><span data-stu-id="78131-220">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, options: Object, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatus_1
  name: listFileStatus(string, string, ServiceCallback<FileStatusesResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-221">Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los parámetros de paginación opcional</span><span class="sxs-lookup"><span data-stu-id="78131-221">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatus(accountName: string, path: string, callback: ServiceCallback<FileStatusesResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileStatusesResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.listFileStatusWithHttpOperationResponse
  name: listFileStatusWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-222">Obtiene la lista de objetos de estado de archivo especificado en la ruta de acceso de archivo, con los parámetros de paginación opcional</span><span class="sxs-lookup"><span data-stu-id="78131-222">Get the list of file status objects specified by the file path, with optional pagination parameters</span></span>
  syntax:
    content: 'function listFileStatusWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-223">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-223">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-224">La ruta de acceso de Data Lake Store (a partir de '/') del directorio a la lista.</span><span class="sxs-lookup"><span data-stu-id="78131-224">The Data Lake Store path (starting with '/') of the directory to list.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs
  name: mkdirs(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-225">Crea un directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-225">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-226">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-226">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-227">La ruta de acceso de Data Lake Store (a partir de '/') del directorio que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="78131-227">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_2
  name: mkdirs(string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-228">Crea un directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-228">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirs_1
  name: mkdirs(string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-229">Crea un directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-229">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirs(accountName: string, path: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.mkdirsWithHttpOperationResponse
  name: mkdirsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-230">Crea un directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-230">Creates a directory.</span></span>
  syntax:
    content: 'function mkdirsWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-231">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-231">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-232">La ruta de acceso de Data Lake Store (a partir de '/') del directorio que se va a crear.</span><span class="sxs-lookup"><span data-stu-id="78131-232">The Data Lake Store path (starting with '/') of the directory to create.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries
  name: modifyAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-233">Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-233">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-234">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-234">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-235">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se está modificando.</span><span class="sxs-lookup"><span data-stu-id="78131-235">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="78131-236">La especificación de ACL que se incluyen en las operaciones de modificación de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="78131-236">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_2
  name: modifyAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-237">Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-237">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntries_1
  name: modifyAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-238">Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-238">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.modifyAclEntriesWithHttpOperationResponse
  name: modifyAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-239">Modifica las entradas de lista de Control de acceso (ACL) existentes en un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-239">Modifies existing Access Control List (ACL) entries on a file or folder.</span></span>
  syntax:
    content: 'function modifyAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-240">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-240">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-241">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se está modificando.</span><span class="sxs-lookup"><span data-stu-id="78131-241">The Data Lake Store path (starting with '/') of the file or directory with the ACL being modified.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="78131-242">La especificación de ACL que se incluyen en las operaciones de modificación de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="78131-242">The ACL specification included in ACL modification operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat
  name: msConcat(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-243">Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-243">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="78131-244">Este método acepta más rutas de acceso de archivo de origen que el método Concat.</span><span class="sxs-lookup"><span data-stu-id="78131-244">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="78131-245">Este método y los parámetros que se acepte están sujetos a cambios para su uso en una próxima versión.</span><span class="sxs-lookup"><span data-stu-id="78131-245">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-246">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-246">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-247">La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenación.</span><span class="sxs-lookup"><span data-stu-id="78131-247">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="78131-248">Una lista de rutas de acceso de Data Lake Store (a partir de '/') de los archivos de origen.</span><span class="sxs-lookup"><span data-stu-id="78131-248">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="78131-249">Debe ser una lista separada por comas de ruta de acceso en el formato: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="78131-249">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_2
  name: msConcat(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-250">Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-250">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="78131-251">Este método acepta más rutas de acceso de archivo de origen que el método Concat.</span><span class="sxs-lookup"><span data-stu-id="78131-251">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="78131-252">Este método y los parámetros que se acepte están sujetos a cambios para su uso en una próxima versión.</span><span class="sxs-lookup"><span data-stu-id="78131-252">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcat_1
  name: msConcat(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-253">Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-253">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="78131-254">Este método acepta más rutas de acceso de archivo de origen que el método Concat.</span><span class="sxs-lookup"><span data-stu-id="78131-254">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="78131-255">Este método y los parámetros que se acepte están sujetos a cambios para su uso en una próxima versión.</span><span class="sxs-lookup"><span data-stu-id="78131-255">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcat(accountName: string, path: string, streamContents: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: streamContents
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.msConcatWithHttpOperationResponse
  name: msConcatWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-256">Concatena la lista de archivos de origen en el archivo de destino, eliminar todos los archivos de origen cuando se realiza correctamente.</span><span class="sxs-lookup"><span data-stu-id="78131-256">Concatenates the list of source files into the destination file, deleting all source files upon success.</span></span> <span data-ttu-id="78131-257">Este método acepta más rutas de acceso de archivo de origen que el método Concat.</span><span class="sxs-lookup"><span data-stu-id="78131-257">This method accepts more source file paths than the Concat method.</span></span> <span data-ttu-id="78131-258">Este método y los parámetros que se acepte están sujetos a cambios para su uso en una próxima versión.</span><span class="sxs-lookup"><span data-stu-id="78131-258">This method and the parameters it accepts are subject to change for usability in an upcoming version.</span></span>
  syntax:
    content: 'function msConcatWithHttpOperationResponse(accountName: string, path: string, streamContents: stream.Readable, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-259">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-259">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-260">La ruta de acceso de Data Lake Store (a partir de '/') del archivo de destino resultante de la concatenación.</span><span class="sxs-lookup"><span data-stu-id="78131-260">The Data Lake Store path (starting with '/') of the destination file resulting from the concatenation.</span></span>
    - id: streamContents
      type:
      - stream.Readable
      description: >
        <span data-ttu-id="78131-261">Una lista de rutas de acceso de Data Lake Store (a partir de '/') de los archivos de origen.</span><span class="sxs-lookup"><span data-stu-id="78131-261">A list of Data Lake Store paths (starting with '/') of the source files.</span></span> <span data-ttu-id="78131-262">Debe ser una lista separada por comas de ruta de acceso en el formato: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span><span class="sxs-lookup"><span data-stu-id="78131-262">Must be a comma-separated path list in the format: sources=/file/path/1.txt,/file/path/2.txt,/file/path/lastfile.csv</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open
  name: open(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-263">Se abre y lee el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-263">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-264">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-264">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-265">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se abra.</span><span class="sxs-lookup"><span data-stu-id="78131-265">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_2
  name: open(string, string, Object, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-266">Se abre y lee el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-266">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, options: Object, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.open_1
  name: open(string, string, ServiceCallback<stream.Readable>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-267">Se abre y lee el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-267">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function open(accountName: string, path: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.openWithHttpOperationResponse
  name: openWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-268">Se abre y lee el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-268">Opens and reads from the specified file.</span></span>
  syntax:
    content: 'function openWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-269">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-269">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-270">La ruta de acceso de Data Lake Store (a partir de '/') del archivo que se abra.</span><span class="sxs-lookup"><span data-stu-id="78131-270">The Data Lake Store path (starting with '/') of the file to open.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl
  name: removeAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-271">Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-271">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-272">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-272">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-273">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="78131-273">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_2
  name: removeAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-274">Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-274">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAcl_1
  name: removeAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-275">Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-275">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries
  name: removeAclEntries(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-276">Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.</span><span class="sxs-lookup"><span data-stu-id="78131-276">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-277">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-277">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-278">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="78131-278">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="78131-279">La especificación ACL incluida en las operaciones de eliminación de ACL en el formato "[predeterminado:] usuario | grupo | otros '</span><span class="sxs-lookup"><span data-stu-id="78131-279">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_2
  name: removeAclEntries(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-280">Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.</span><span class="sxs-lookup"><span data-stu-id="78131-280">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntries_1
  name: removeAclEntries(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-281">Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.</span><span class="sxs-lookup"><span data-stu-id="78131-281">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntries(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclEntriesWithHttpOperationResponse
  name: removeAclEntriesWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-282">Quita las entradas de la lista de Control de acceso (ACL) para un archivo o carpeta de existente.</span><span class="sxs-lookup"><span data-stu-id="78131-282">Removes existing Access Control List (ACL) entries for a file or folder.</span></span>
  syntax:
    content: 'function removeAclEntriesWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-283">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-283">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-284">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="78131-284">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="78131-285">La especificación ACL incluida en las operaciones de eliminación de ACL en el formato "[predeterminado:] usuario | grupo | otros '</span><span class="sxs-lookup"><span data-stu-id="78131-285">The ACL spec included in ACL removal operations in the format '[default:]user|group|other'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeAclWithHttpOperationResponse
  name: removeAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-286">Quita la lista de Control de acceso (ACL) existentes del archivo o directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-286">Removes the existing Access Control List (ACL) of the specified file or directory.</span></span>
  syntax:
    content: 'function removeAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-287">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-287">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-288">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio con la ACL que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="78131-288">The Data Lake Store path (starting with '/') of the file or directory with the ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl
  name: removeDefaultAcl(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-289">Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-289">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-290">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-290">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-291">La ruta de acceso de Data Lake Store (a partir de '/') del directorio con el valor predeterminado ACL que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="78131-291">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_2
  name: removeDefaultAcl(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-292">Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-292">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAcl_1
  name: removeDefaultAcl(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-293">Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-293">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAcl(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.removeDefaultAclWithHttpOperationResponse
  name: removeDefaultAclWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-294">Quita el existente predeterminado Access Control de lista (ACL) del directorio especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-294">Removes the existing Default Access Control List (ACL) of the specified directory.</span></span>
  syntax:
    content: 'function removeDefaultAclWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-295">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-295">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-296">La ruta de acceso de Data Lake Store (a partir de '/') del directorio con el valor predeterminado ACL que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="78131-296">The Data Lake Store path (starting with '/') of the directory with the default ACL being removed.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename
  name: rename(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-297">Cambiar el nombre de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-297">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-298">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-298">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-299">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para move/rename.</span><span class="sxs-lookup"><span data-stu-id="78131-299">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="78131-300">Mover/cambiar nombres de archivo o carpeta a la ruta de acceso</span><span class="sxs-lookup"><span data-stu-id="78131-300">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_2
  name: rename(string, string, string, Object, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-301">Cambiar el nombre de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-301">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, options: Object, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.rename_1
  name: rename(string, string, string, ServiceCallback<FileOperationResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-302">Cambiar el nombre de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-302">Rename a file or directory.</span></span>
  syntax:
    content: 'function rename(accountName: string, path: string, destination: string, callback: ServiceCallback<FileOperationResult>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: destination
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-arm-datalake-store.FileOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-arm-datalake-store.FileOperationResult>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.renameWithHttpOperationResponse
  name: renameWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-303">Cambiar el nombre de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-303">Rename a file or directory.</span></span>
  syntax:
    content: 'function renameWithHttpOperationResponse(accountName: string, path: string, destination: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-304">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-304">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-305">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para move/rename.</span><span class="sxs-lookup"><span data-stu-id="78131-305">The Data Lake Store path (starting with '/') of the file or directory to move/rename.</span></span>
    - id: destination
      type:
      - string
      description: >
        <span data-ttu-id="78131-306">Mover/cambiar nombres de archivo o carpeta a la ruta de acceso</span><span class="sxs-lookup"><span data-stu-id="78131-306">The path to move/rename the file or folder to</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl
  name: setAcl(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-307">Establece la lista de Control de acceso (ACL) para un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-307">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-308">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-308">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-309">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio en el que se va a establecer la ACL.</span><span class="sxs-lookup"><span data-stu-id="78131-309">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="78131-310">La especificación ACL incluida en las operaciones de creación de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="78131-310">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_2
  name: setAcl(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-311">Establece la lista de Control de acceso (ACL) para un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-311">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAcl_1
  name: setAcl(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-312">Establece la lista de Control de acceso (ACL) para un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-312">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAcl(accountName: string, path: string, aclspec: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: aclspec
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setAclWithHttpOperationResponse
  name: setAclWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-313">Establece la lista de Control de acceso (ACL) para un archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-313">Sets the Access Control List (ACL) for a file or folder.</span></span>
  syntax:
    content: 'function setAclWithHttpOperationResponse(accountName: string, path: string, aclspec: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-314">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-314">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-315">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio en el que se va a establecer la ACL.</span><span class="sxs-lookup"><span data-stu-id="78131-315">The Data Lake Store path (starting with '/') of the file or directory on which to set the ACL.</span></span>
    - id: aclspec
      type:
      - string
      description: >
        <span data-ttu-id="78131-316">La especificación ACL incluida en las operaciones de creación de ACL en el formato "[predeterminado:] usuario | grupo | otros:: r |-w |-x |-'</span><span class="sxs-lookup"><span data-stu-id="78131-316">The ACL spec included in ACL creation operations in the format '[default:]user|group|other::r|-w|-x|-'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry
  name: setFileExpiry(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-317">Establece o quita la hora de expiración en el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-317">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="78131-318">Esta operación solo se puede ejecutar en archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-318">This operation can only be executed against files.</span></span> <span data-ttu-id="78131-319">No se admiten las carpetas.</span><span class="sxs-lookup"><span data-stu-id="78131-319">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-320">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-320">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-321">La ruta de acceso de Data Lake Store (a partir de '/') del archivo en el que se va a establecer o quitar la hora de expiración.</span><span class="sxs-lookup"><span data-stu-id="78131-321">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="78131-322">Indica el tipo de expiración que se usará para el archivo: 1.</span><span class="sxs-lookup"><span data-stu-id="78131-322">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="78131-323">NeverExpire: ExpireTime se omite.</span><span class="sxs-lookup"><span data-stu-id="78131-323">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="78131-324">2.</span><span class="sxs-lookup"><span data-stu-id="78131-324">2.</span></span> <span data-ttu-id="78131-325">RelativeToNow: ExpireTime es un entero en milisegundos, que representa la fecha de vencimiento relativo a cuando se actualiza la expiración de archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-325">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="78131-326">3.</span><span class="sxs-lookup"><span data-stu-id="78131-326">3.</span></span> <span data-ttu-id="78131-327">RelativeToCreationDate: ExpireTime es un entero en milisegundos, que representa la fecha de expiración en relación con la creación de archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-327">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="78131-328">4.</span><span class="sxs-lookup"><span data-stu-id="78131-328">4.</span></span> <span data-ttu-id="78131-329">Absoluta: ExpireTime es un entero en milisegundos, como una marca de tiempo Unix en relación con 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="78131-329">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="78131-330">Los valores posibles son: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absoluto'</span><span class="sxs-lookup"><span data-stu-id="78131-330">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_2
  name: setFileExpiry(string, string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-331">Establece o quita la hora de expiración en el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-331">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="78131-332">Esta operación solo se puede ejecutar en archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-332">This operation can only be executed against files.</span></span> <span data-ttu-id="78131-333">No se admiten las carpetas.</span><span class="sxs-lookup"><span data-stu-id="78131-333">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiry_1
  name: setFileExpiry(string, string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-334">Establece o quita la hora de expiración en el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-334">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="78131-335">Esta operación solo se puede ejecutar en archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-335">This operation can only be executed against files.</span></span> <span data-ttu-id="78131-336">No se admiten las carpetas.</span><span class="sxs-lookup"><span data-stu-id="78131-336">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiry(accountName: string, path: string, expiryOption: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: expiryOption
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setFileExpiryWithHttpOperationResponse
  name: setFileExpiryWithHttpOperationResponse(string, string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-337">Establece o quita la hora de expiración en el archivo especificado.</span><span class="sxs-lookup"><span data-stu-id="78131-337">Sets or removes the expiration time on the specified file.</span></span> <span data-ttu-id="78131-338">Esta operación solo se puede ejecutar en archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-338">This operation can only be executed against files.</span></span> <span data-ttu-id="78131-339">No se admiten las carpetas.</span><span class="sxs-lookup"><span data-stu-id="78131-339">Folders are not supported.</span></span>
  syntax:
    content: 'function setFileExpiryWithHttpOperationResponse(accountName: string, path: string, expiryOption: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-340">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-340">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-341">La ruta de acceso de Data Lake Store (a partir de '/') del archivo en el que se va a establecer o quitar la hora de expiración.</span><span class="sxs-lookup"><span data-stu-id="78131-341">The Data Lake Store path (starting with '/') of the file on which to set or remove the expiration time.</span></span>
    - id: expiryOption
      type:
      - string
      description: >
        <span data-ttu-id="78131-342">Indica el tipo de expiración que se usará para el archivo: 1.</span><span class="sxs-lookup"><span data-stu-id="78131-342">Indicates the type of expiration to use for the file: 1.</span></span> <span data-ttu-id="78131-343">NeverExpire: ExpireTime se omite.</span><span class="sxs-lookup"><span data-stu-id="78131-343">NeverExpire: ExpireTime is ignored.</span></span> <span data-ttu-id="78131-344">2.</span><span class="sxs-lookup"><span data-stu-id="78131-344">2.</span></span> <span data-ttu-id="78131-345">RelativeToNow: ExpireTime es un entero en milisegundos, que representa la fecha de vencimiento relativo a cuando se actualiza la expiración de archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-345">RelativeToNow: ExpireTime is an integer in milliseconds representing the expiration date relative to when file expiration is updated.</span></span> <span data-ttu-id="78131-346">3.</span><span class="sxs-lookup"><span data-stu-id="78131-346">3.</span></span> <span data-ttu-id="78131-347">RelativeToCreationDate: ExpireTime es un entero en milisegundos, que representa la fecha de expiración en relación con la creación de archivos.</span><span class="sxs-lookup"><span data-stu-id="78131-347">RelativeToCreationDate: ExpireTime is an integer in milliseconds representing the expiration date relative to file creation.</span></span> <span data-ttu-id="78131-348">4.</span><span class="sxs-lookup"><span data-stu-id="78131-348">4.</span></span> <span data-ttu-id="78131-349">Absoluta: ExpireTime es un entero en milisegundos, como una marca de tiempo Unix en relación con 1/1/1970 00:00:00.</span><span class="sxs-lookup"><span data-stu-id="78131-349">Absolute: ExpireTime is an integer in milliseconds, as a Unix timestamp relative to 1/1/1970 00:00:00.</span></span> <span data-ttu-id="78131-350">Los valores posibles son: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absoluto'</span><span class="sxs-lookup"><span data-stu-id="78131-350">Possible values include: 'NeverExpire', 'RelativeToNow', 'RelativeToCreationDate', 'Absolute'</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner
  name: setOwner(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-351">Establece el propietario de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-351">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-352">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-352">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-353">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el propietario.</span><span class="sxs-lookup"><span data-stu-id="78131-353">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_2
  name: setOwner(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-354">Establece el propietario de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-354">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwner_1
  name: setOwner(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-355">Establece el propietario de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-355">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwner(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setOwnerWithHttpOperationResponse
  name: setOwnerWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-356">Establece el propietario de un archivo o directorio.</span><span class="sxs-lookup"><span data-stu-id="78131-356">Sets the owner of a file or directory.</span></span>
  syntax:
    content: 'function setOwnerWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-357">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-357">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-358">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el propietario.</span><span class="sxs-lookup"><span data-stu-id="78131-358">The Data Lake Store path (starting with '/') of the file or directory for which to set the owner.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission
  name: setPermission(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-359">Establece el permiso del archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-359">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-360">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-360">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-361">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el permiso.</span><span class="sxs-lookup"><span data-stu-id="78131-361">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_2
  name: setPermission(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-362">Establece el permiso del archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-362">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermission_1
  name: setPermission(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-363">Establece el permiso del archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-363">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermission(accountName: string, path: string, callback: ServiceCallback<void>)'
    parameters:
    - id: accountName
      type:
      - string
      description: ''
    - id: path
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-arm-datalake-store
- uid: azure-arm-datalake-store.FileSystem.setPermissionWithHttpOperationResponse
  name: setPermissionWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="78131-364">Establece el permiso del archivo o carpeta.</span><span class="sxs-lookup"><span data-stu-id="78131-364">Sets the permission of the file or folder.</span></span>
  syntax:
    content: 'function setPermissionWithHttpOperationResponse(accountName: string, path: string, options?: Object)'
    parameters:
    - id: accountName
      type:
      - string
      description: >
        <span data-ttu-id="78131-365">Para ejecutar operaciones de sistema de archivos en la cuenta de Azure Data Lake Store.</span><span class="sxs-lookup"><span data-stu-id="78131-365">The Azure Data Lake Store account to execute filesystem operations on.</span></span>
    - id: path
      type:
      - string
      description: >
        <span data-ttu-id="78131-366">La ruta de acceso de Data Lake Store (a partir de '/') del archivo o directorio para el que se va a establecer el permiso.</span><span class="sxs-lookup"><span data-stu-id="78131-366">The Data Lake Store path (starting with '/') of the file or directory for which to set the permission.</span></span>
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-arm-datalake-store
references:
- uid: Promise<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileOperationResult>
  name: FileOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileOperationResult>>
  name: FileOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileOperationResult
    fullName: FileOperationResult
    uid: azure-arm-datalake-store.FileOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.AclStatusResult>
  name: AclStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.AclStatusResult>>
  name: AclStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: AclStatusResult
    fullName: AclStatusResult
    uid: azure-arm-datalake-store.AclStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.ContentSummaryResult>
  name: ContentSummaryResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.ContentSummaryResult>>
  name: ContentSummaryResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ContentSummaryResult
    fullName: ContentSummaryResult
    uid: azure-arm-datalake-store.ContentSummaryResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusResult>
  name: FileStatusResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusResult>>
  name: FileStatusResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusResult
    fullName: FileStatusResult
    uid: azure-arm-datalake-store.FileStatusResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-arm-datalake-store.FileStatusesResult>
  name: FileStatusesResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-arm-datalake-store.FileStatusesResult>>
  name: FileStatusesResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: FileStatusesResult
    fullName: FileStatusesResult
    uid: azure-arm-datalake-store.FileStatusesResult
  - name: '>>'
    fullName: '>>'
