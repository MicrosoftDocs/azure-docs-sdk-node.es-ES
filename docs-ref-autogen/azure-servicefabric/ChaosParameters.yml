### YamlMime:UniversalReference
ms.openlocfilehash: ab15ed7cbbeacca663fe05ea36bf237ea7258053
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52035490"
items:
- uid: azure-servicefabric.ChaosParameters
  name: ChaosParameters
  fullName: ChaosParameters
  children:
  - azure-servicefabric.ChaosParameters.chaosTargetFilter
  - azure-servicefabric.ChaosParameters.clusterHealthPolicy
  - azure-servicefabric.ChaosParameters.context
  - azure-servicefabric.ChaosParameters.enableMoveReplicaFaults
  - azure-servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
  - azure-servicefabric.ChaosParameters.maxConcurrentFaults
  - azure-servicefabric.ChaosParameters.timeToRunInSeconds
  - azure-servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds
  - azure-servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds
  langs:
  - typeScript
  type: interface
  summary: Define todos los parámetros para configurar una ejecución de Chaos.
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.chaosTargetFilter
  name: chaosTargetFilter
  fullName: chaosTargetFilter
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Lista de las entidades de clúster de destino para los errores de Chaos.

    Este filtro se puede utilizar para errores de Chaos de destino sólo a determinados tipos de nodos o solo a determinadas instancias de la aplicación. Si no se utiliza ChaosTargetFilter, Chaos produce un error en todas las entidades de clúster.

    Si se utiliza ChaosTargetFilter, Chaos produce un error solo en las entidades que cumplen la especificación de ChaosTargetFilter.
  optional: true
  syntax:
    content: 'chaosTargetFilter?: ChaosTargetFilter'
    return:
      type:
      - azure-servicefabric.ChaosTargetFilter
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.clusterHealthPolicy
  name: clusterHealthPolicy
  fullName: clusterHealthPolicy
  children: []
  langs:
  - typeScript
  type: property
  summary: Directiva de mantenimiento de clúster pasada se utiliza para validar el estado del clúster entre las iteraciones de Chaos. Si el estado del clúster es un error o si se produce una excepción inesperada durante la ejecución del error, Chaos esperará para proporcionar el clúster con algún tiempo en recuperate--30 minutos antes de la siguiente comprobación de estado.
  optional: true
  syntax:
    content: 'clusterHealthPolicy?: ClusterHealthPolicy'
    return:
      type:
      - azure-servicefabric.ClusterHealthPolicy
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.context
  name: context
  fullName: context
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Describe un mapa, que es una colección de (cadena, cadena) pares de clave y valor de tipo. El mapa se puede usar para registrar información acerca de la ejecución de Chaos. No puede haber más de 100 de dicho pares y cada cadena (clave o valor) puede tener una longitud máxima de 4095.

    Este mapa lo establece el inicio de la ejecución de Chaos para almacenar, opcionalmente, el contexto de la ejecución específica.
  optional: true
  syntax:
    content: 'context?: ChaosContext'
    return:
      type:
      - azure-servicefabric.ChaosContext
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.enableMoveReplicaFaults
  name: enableMoveReplicaFaults
  fullName: enableMoveReplicaFaults
  children: []
  langs:
  - typeScript
  type: property
  summary: Habilita o deshabilita el mover principal y mover secundaria errores.
  optional: true
  syntax:
    content: 'enableMoveReplicaFaults?: boolean'
    return:
      type:
      - boolean
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.maxClusterStabilizationTimeoutInSeconds
  name: maxClusterStabilizationTimeoutInSeconds
  fullName: maxClusterStabilizationTimeoutInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    La cantidad máxima de tiempo de espera para que todas las entidades del clúster se vuelvan estables y en buen estado.

    Chaos se ejecuta en las iteraciones y al inicio de cada iteración valida el estado de las entidades de clúster.

    Durante la validación si una entidad de clúster no es estable y está en buen estado dentro de MaxClusterStabilizationTimeoutInSeconds, Chaos genera un evento de error de validación.
  optional: true
  syntax:
    content: 'maxClusterStabilizationTimeoutInSeconds?: number'
    return:
      type:
      - number
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.maxConcurrentFaults
  name: maxConcurrentFaults
  fullName: maxConcurrentFaults
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    MaxConcurrentFaults es el número máximo de errores simultáneos inducidos por iteración.

    Chaos se ejecuta en las iteraciones y dos iteraciones consecutivas están separadas por una fase de validación.

    Cuanto mayor sea la simultaneidad, más agresiva será la inserción de errores, dando lugar a provocar una serie más compleja de Estados para detectar errores.

    La recomendación es comenzar con un valor de 2 o 3 y tener cuidado al mover hacia arriba.
  optional: true
  syntax:
    content: 'maxConcurrentFaults?: number'
    return:
      type:
      - number
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.timeToRunInSeconds
  name: timeToRunInSeconds
  fullName: timeToRunInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: Tiempo total (en segundos) para el que se ejecutará Chaos antes de la detención automática. El valor máximo permitido es 4.294.967.295 (System.UInt32.MaxValue).
  optional: true
  syntax:
    content: 'timeToRunInSeconds?: string'
    return:
      type:
      - string
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.waitTimeBetweenFaultsInSeconds
  name: waitTimeBetweenFaultsInSeconds
  fullName: waitTimeBetweenFaultsInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Tiempo de espera (en segundos) entre errores consecutivos dentro de una única iteración.

    Cuanto mayor sea el valor, menor será la superposición entre errores y más sencilla será la secuencia de transiciones de estado por las que pasa el clúster.

    La recomendación es comenzar con un valor entre 1 y 5, y tener cuidado al mover hacia arriba.
  optional: true
  syntax:
    content: 'waitTimeBetweenFaultsInSeconds?: number'
    return:
      type:
      - number
  package: azure-servicefabric
- uid: azure-servicefabric.ChaosParameters.waitTimeBetweenIterationsInSeconds
  name: waitTimeBetweenIterationsInSeconds
  fullName: waitTimeBetweenIterationsInSeconds
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Separación de tiempo (en segundos) entre dos iteraciones consecutivas de Chaos.

    Cuanto mayor sea el valor, menor será la tasa de inserción de errores.
  optional: true
  syntax:
    content: 'waitTimeBetweenIterationsInSeconds?: number'
    return:
      type:
      - number
  package: azure-servicefabric
references:
- uid: azure-servicefabric.ChaosTargetFilter
  name: ChaosTargetFilter
  spec.typeScript:
  - name: ChaosTargetFilter
    fullName: ChaosTargetFilter
    uid: azure-servicefabric.ChaosTargetFilter
- uid: azure-servicefabric.ClusterHealthPolicy
  name: ClusterHealthPolicy
  spec.typeScript:
  - name: ClusterHealthPolicy
    fullName: ClusterHealthPolicy
    uid: azure-servicefabric.ClusterHealthPolicy
- uid: azure-servicefabric.ChaosContext
  name: ChaosContext
  spec.typeScript:
  - name: ChaosContext
    fullName: ChaosContext
    uid: azure-servicefabric.ChaosContext
