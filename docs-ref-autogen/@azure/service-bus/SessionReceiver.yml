### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    fullName: SessionReceiver
    children:
      - '@azure/service-bus.SessionReceiver.close'
      - '@azure/service-bus.SessionReceiver.getMessageIterator'
      - '@azure/service-bus.SessionReceiver.getState'
      - '@azure/service-bus.SessionReceiver.isClosed'
      - '@azure/service-bus.SessionReceiver.isReceivingMessages'
      - '@azure/service-bus.SessionReceiver.peek'
      - '@azure/service-bus.SessionReceiver.peekBySequenceNumber'
      - '@azure/service-bus.SessionReceiver.receiveDeferredMessage'
      - '@azure/service-bus.SessionReceiver.receiveDeferredMessages'
      - '@azure/service-bus.SessionReceiver.receiveMessages'
      - '@azure/service-bus.SessionReceiver.receiveMode'
      - '@azure/service-bus.SessionReceiver.registerMessageHandler'
      - '@azure/service-bus.SessionReceiver.renewSessionLock'
      - '@azure/service-bus.SessionReceiver.sessionId'
      - '@azure/service-bus.SessionReceiver.sessionLockedUntilUtc'
      - '@azure/service-bus.SessionReceiver.setState'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="414c0-101">La clase SessionReceiver puede utilizarse para recibir mensajes desde una sesión habilitada cola o suscripción en un lote o mediante el registro de controladores.</span><span class="sxs-lookup"><span data-stu-id="414c0-101">The SessionReceiver class can be used to receive messages from a session enabled Queue or Subscription in a batch or by registering handlers.</span></span>
      <span data-ttu-id="414c0-102">Use el `createReceiver` funcionan en QueueClient o SubscriptionClient para crear instancias de un SessionReceiver.</span><span class="sxs-lookup"><span data-stu-id="414c0-102">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a SessionReceiver.</span></span>
      <span data-ttu-id="414c0-103">La clase SessionReceiver es una abstracción sobre el vínculo del receptor AMQP subyacente.</span><span class="sxs-lookup"><span data-stu-id="414c0-103">The SessionReceiver class is an abstraction over the underlying AMQP receiver link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="414c0-104">Cierra el vínculo del receptor AMQP subyacente.</span><span class="sxs-lookup"><span data-stu-id="414c0-104">Closes the underlying AMQP receiver link.</span></span>
      <span data-ttu-id="414c0-105">Una vez cerrado, el receptor no puede usarse para realizar más operaciones.</span><span class="sxs-lookup"><span data-stu-id="414c0-105">Once closed, the receiver cannot be used for any further operations.</span></span>
      <span data-ttu-id="414c0-106">Use el `createReceiver` funcionan en QueueClient o SubscriptionClient para crear instancias de un nuevo destinatario</span><span class="sxs-lookup"><span data-stu-id="414c0-106">Use the `createReceiver` function on the QueueClient or SubscriptionClient to instantiate a new Receiver</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.getMessageIterator'
    name: getMessageIterator()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="414c0-107">Obtiene un iterador de asincronía a través de mensajes desde el receptor.</span><span class="sxs-lookup"><span data-stu-id="414c0-107">Gets an async iterator over messages from the receiver.</span></span>
      <span data-ttu-id="414c0-108">Produce un error si no hay otra operación de recepción en curso en el receptor del mismo.</span><span class="sxs-lookup"><span data-stu-id="414c0-108">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="414c0-109">Si no está seguro de si hay otra ejecución de la operación de recepción, comprobar la `isReceivingMessages` propiedad en el receptor.</span><span class="sxs-lookup"><span data-stu-id="414c0-109">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>

      <span data-ttu-id="414c0-110">Si el iterador no es capaz de capturar un nuevo mensaje en más de un minuto, `undefined` se devolverán</span><span class="sxs-lookup"><span data-stu-id="414c0-110">If the iterator is not able to fetch a new message in over a minute, `undefined` will be returned</span></span>
    syntax:
      content: function getMessageIterator()
      parameters: []
      return:
        type:
          - AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.getState'
    name: getState()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="414c0-111">Obtiene el estado de la sesión.</span><span class="sxs-lookup"><span data-stu-id="414c0-111">Gets the state of the Session.</span></span> <span data-ttu-id="414c0-112">Para obtener más información sobre los Estados de sesión, vea [estado de sesión](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span><span class="sxs-lookup"><span data-stu-id="414c0-112">For more on session states, see [Session State](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span></span>'
    syntax:
      content: function getState()
      parameters: []
      return:
        type:
          - Promise<any>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="414c0-113">Devuelve `true` si el receptor está cerrado.</span><span class="sxs-lookup"><span data-stu-id="414c0-113">Returns `true` if the receiver is closed.</span></span> <span data-ttu-id="414c0-114">Esto puede ocurrir cualquiera se ha cerrado porque se ha cerrado el receptor de sí mismo o el cliente que creó.</span><span class="sxs-lookup"><span data-stu-id="414c0-114">This can happen either because the receiver itself has been closed or the client that created it has been closed.</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.isReceivingMessages'
    name: isReceivingMessages()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="414c0-115">Indica si el receptor está recibiendo actualmente mensajes o no.</span><span class="sxs-lookup"><span data-stu-id="414c0-115">Indicates whether the receiver is currently receiving messages or not.</span></span>
      <span data-ttu-id="414c0-116">Cuando devuelve true, nuevo `registerMessageHandler()` o `receiveMessages()` no se pueden realizar llamadas.</span><span class="sxs-lookup"><span data-stu-id="414c0-116">When this returns true, new `registerMessageHandler()` or `receiveMessages()` calls cannot be made.</span></span>
    syntax:
      content: function isReceivingMessages()
      parameters: []
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="414c0-117">Recupera el siguiente lote de mensajes activos (incluidos diferida, pero no deadlettered mensajes) en la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="414c0-117">Fetches the next batch of active messages (including deferred but not deadlettered messages) in the current session.</span></span>
      - <span data-ttu-id="414c0-118">La primera llamada a `peek()` captura el primer mensaje activo.</span><span class="sxs-lookup"><span data-stu-id="414c0-118">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="414c0-119">Cada llamada posterior realizada captura el mensaje subsiguiente.</span><span class="sxs-lookup"><span data-stu-id="414c0-119">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="414c0-120">A diferencia de un `received` mensaje, `peeked` mensaje es una versión de solo lectura del mensaje.</span><span class="sxs-lookup"><span data-stu-id="414c0-120">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="414c0-121">No puede ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="414c0-121">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="414c0-122">No se puede renovar el bloqueo en él.</span><span class="sxs-lookup"><span data-stu-id="414c0-122">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: <span data-ttu-id="414c0-123">El número máximo de mensajes.</span><span class="sxs-lookup"><span data-stu-id="414c0-123">The maximum number of messages to peek.</span></span> <span data-ttu-id="414c0-124">Valor predeterminado `1`.</span><span class="sxs-lookup"><span data-stu-id="414c0-124">Default value `1`.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="414c0-125">Busca el número deseado de mensajes activos (incluidos diferida, pero no los mensajes deadlettered) del número de secuencia especificado en la sesión actual.</span><span class="sxs-lookup"><span data-stu-id="414c0-125">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number in the current session.</span></span>
      - <span data-ttu-id="414c0-126">A diferencia de un `received` mensaje, `peeked` mensaje es una versión de solo lectura del mensaje.</span><span class="sxs-lookup"><span data-stu-id="414c0-126">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="414c0-127">No puede ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="414c0-127">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="414c0-128">No se puede renovar el bloqueo en él.</span><span class="sxs-lookup"><span data-stu-id="414c0-128">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: <span data-ttu-id="414c0-129">El número de secuencia desde donde leer el mensaje.</span><span class="sxs-lookup"><span data-stu-id="414c0-129">The sequence number from where to read the message.</span></span>
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveDeferredMessage'
    name: receiveDeferredMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="414c0-130">Devuelve una promesa que se resuelve en un mensaje aplazado identificado por el determinado `sequenceNumber`.</span><span class="sxs-lookup"><span data-stu-id="414c0-130">Returns a promise that resolves to a deferred message identified by the given `sequenceNumber`.</span></span>
    syntax:
      content: 'function receiveDeferredMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="414c0-131">El número de secuencia del mensaje que necesita para poder recibir.</span><span class="sxs-lookup"><span data-stu-id="414c0-131">The sequence number of the message that needs to be received.</span></span>
      return:
        type:
          - Promise<@azure/service-bus.ServiceBusMessage | undefined>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveDeferredMessages'
    name: 'receiveDeferredMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="414c0-132">Devuelve una promesa que se resuelve en una matriz de los mensajes aplazados identificado por asigna `sequenceNumbers`.</span><span class="sxs-lookup"><span data-stu-id="414c0-132">Returns a promise that resolves to an array of deferred messages identified by given `sequenceNumbers`.</span></span>
    syntax:
      content: 'function receiveDeferredMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="414c0-133">Una matriz de números de secuencia para los mensajes que necesitan para poder recibir.</span><span class="sxs-lookup"><span data-stu-id="414c0-133">An array of sequence numbers for the messages that need to be received.</span></span>
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveMessages'
    name: 'receiveMessages(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="414c0-134">Devuelve una promesa que se resuelve en una matriz de mensajes basada en recuento y tiempo de espera a través de un receptor de AMQP un vínculo desde una cola o suscripción.</span><span class="sxs-lookup"><span data-stu-id="414c0-134">Returns a promise that resolves to an array of messages based on given count and timeout over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="414c0-135">Produce un error si no hay otra operación de recepción en curso en el receptor del mismo.</span><span class="sxs-lookup"><span data-stu-id="414c0-135">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="414c0-136">Si no está seguro de si hay otra ejecución de la operación de recepción, comprobar la `isReceivingMessages` propiedad en el receptor.</span><span class="sxs-lookup"><span data-stu-id="414c0-136">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function receiveMessages(maxMessageCount: number, maxWaitTimeInSeconds?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - number
          description: <span data-ttu-id="414c0-137">El número máximo de mensajes que se va a recibir de cola o suscripción.</span><span class="sxs-lookup"><span data-stu-id="414c0-137">The maximum number of messages to receive from Queue/Subscription.</span></span>
        - id: maxWaitTimeInSeconds
          type:
            - undefined | number
          description: |-
            <span data-ttu-id="414c0-138">El máximo tiempo de espera en segundos para que el receptor debe esperar para recibir el primer mensaje.</span><span class="sxs-lookup"><span data-stu-id="414c0-138">The maximum wait time in seconds for which the Receiver should wait to receive the first message.</span></span> <span data-ttu-id="414c0-139">Si no se recibe ningún mensaje Llegados a este punto, el compromiso devuelto se resuelva a una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="414c0-139">If no message is received by this time, the returned promise gets resolved to an empty array.</span></span>
            - <span data-ttu-id="414c0-140">**Default**: `60` segundos.</span><span class="sxs-lookup"><span data-stu-id="414c0-140">**Default**: `60` seconds.</span></span>
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.receiveMode'
    name: receiveMode
    fullName: receiveMode
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="414c0-141">Denota receiveMode de este receptor.</span><span class="sxs-lookup"><span data-stu-id="414c0-141">Denotes receiveMode of this receiver.</span></span>
    syntax:
      content: 'receiveMode: ReceiveMode'
      return:
        type:
          - '@azure/service-bus.ReceiveMode'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.registerMessageHandler'
    name: 'registerMessageHandler(OnMessage, OnError, SessionMessageHandlerOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="414c0-142">Registra los controladores para tratar con los flujos de mensajes entrantes a través de un vínculo AMQP del receptor de una cola o suscripción.</span><span class="sxs-lookup"><span data-stu-id="414c0-142">Registers handlers to deal with the incoming stream of messages over an AMQP receiver link from a Queue/Subscription.</span></span>
      <span data-ttu-id="414c0-143">Para detener la recepción de mensajes, llame a `close()` en el SessionReceiver.</span><span class="sxs-lookup"><span data-stu-id="414c0-143">To stop receiving messages, call `close()` on the SessionReceiver.</span></span>
      <span data-ttu-id="414c0-144">Produce un error si no hay otra operación de recepción en curso en el receptor del mismo.</span><span class="sxs-lookup"><span data-stu-id="414c0-144">Throws an error if there is another receive operation in progress on the same receiver.</span></span> <span data-ttu-id="414c0-145">Si no está seguro de si hay otra ejecución de la operación de recepción, comprobar la `isReceivingMessages` propiedad en el receptor.</span><span class="sxs-lookup"><span data-stu-id="414c0-145">If you are not sure whether there is another receive operation running, check the `isReceivingMessages` property on the receiver.</span></span>
    syntax:
      content: 'function registerMessageHandler(onMessage: OnMessage, onError: OnError, options?: SessionMessageHandlerOptions)'
      parameters:
        - id: onMessage
          type:
            - '@azure/service-bus.OnMessage'
          description: <span data-ttu-id="414c0-146">Controlador para procesar cada mensaje entrante.</span><span class="sxs-lookup"><span data-stu-id="414c0-146">Handler for processing each incoming message.</span></span>
        - id: onError
          type:
            - '@azure/service-bus.OnError'
          description: <span data-ttu-id="414c0-147">Controlador para cualquier error que se produce al recibir o procesar los mensajes.</span><span class="sxs-lookup"><span data-stu-id="414c0-147">Handler for any error that occurs while receiving or processing messages.</span></span>
        - id: options
          type:
            - '@azure/service-bus.SessionMessageHandlerOptions'
          description: |
            <span data-ttu-id="414c0-148">Opciones para controlar si los mensajes se deben completar automáticamente o si se debe renovar automáticamente el bloqueo en la sesión.</span><span class="sxs-lookup"><span data-stu-id="414c0-148">Options to control whether messages should be automatically completed or if the lock on the session should be automatically renewed.</span></span> <span data-ttu-id="414c0-149">Puede controlar el número máximo de mensajes que se deben procesar simultáneamente.</span><span class="sxs-lookup"><span data-stu-id="414c0-149">You can control the maximum number of messages that should be concurrently processed.</span></span> <span data-ttu-id="414c0-150">También puede proporcionar un tiempo de espera en segundos para indicar la cantidad de tiempo de espera para un mensaje nuevo antes de cerrar el receptor.</span><span class="sxs-lookup"><span data-stu-id="414c0-150">You can also provide a timeout in seconds to denote the amount of time to wait for a new message before closing the receiver.</span></span>
          optional: true
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.renewSessionLock'
    name: renewSessionLock()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="414c0-151">Renueva el bloqueo en la sesión para la duración, tal como se especifica durante la creación de la cola o suscripción.</span><span class="sxs-lookup"><span data-stu-id="414c0-151">Renews the lock on the session for the duration as specified during the Queue/Subscription creation.</span></span>
      - <span data-ttu-id="414c0-152">Compruebe el `sessionLockedUntilUtc` propiedad en el SessionReceiver durante el tiempo cuando expira el bloqueo.</span><span class="sxs-lookup"><span data-stu-id="414c0-152">Check the `sessionLockedUntilUtc` property on the SessionReceiver for the time when the lock expires.</span></span>
      - <span data-ttu-id="414c0-153">Cuando expira el bloqueo en la sesión</span><span class="sxs-lookup"><span data-stu-id="414c0-153">When the lock on the session expires</span></span>
          - <span data-ttu-id="414c0-154">No hay más mensajes pueden recibirse mediante este receptor</span><span class="sxs-lookup"><span data-stu-id="414c0-154">No more messages can be received using this receiver</span></span>
          - <span data-ttu-id="414c0-155">Si no se registra un mensaje (mediante `complete()`, `defer()` o `deadletter()`, antes de la sesión expira el bloqueo y luego la ultramar de mensaje en la cola o suscripción para la siguiente operación de recepción.</span><span class="sxs-lookup"><span data-stu-id="414c0-155">If a message is not settled (using either `complete()`, `defer()` or `deadletter()`, before the session lock expires, then the message lands back in the Queue/Subscription for the next receive operation.</span></span>
    syntax:
      content: function renewSessionLock()
      parameters: []
      return:
        type:
          - Promise<Date>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.sessionId'
    name: sessionId
    fullName: sessionId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="414c0-156">El identificador de la sesión del que este receptor se recibirán los mensajes.</span><span class="sxs-lookup"><span data-stu-id="414c0-156">The id of the session from which this receiver will receive messages.</span></span>
      <span data-ttu-id="414c0-157">Se devolverá sin definir hasta que un vínculo del receptor AMQP ha se ha configurado correctamente para la sesión.</span><span class="sxs-lookup"><span data-stu-id="414c0-157">Will return undefined until a AMQP receiver link has been successfully set up for the session.</span></span>
    syntax:
      content: 'sessionId: string | undefined'
      return:
        type:
          - string | undefined
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.sessionLockedUntilUtc'
    name: sessionLockedUntilUtc
    fullName: sessionLockedUntilUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="414c0-158">La hora en UTC hasta la que se bloquee la sesión.</span><span class="sxs-lookup"><span data-stu-id="414c0-158">The time in UTC until which the session is locked.</span></span>
      <span data-ttu-id="414c0-159">Cada vez que `renewSessionLock()` es llamado, se actualiza esta vez a la hora actual más la duración del bloqueo tal como se especifica durante la creación de la cola o suscripción.</span><span class="sxs-lookup"><span data-stu-id="414c0-159">Everytime `renewSessionLock()` is called, this time gets updated to current time plus the lock duration as specified during the Queue/Subscription creation.</span></span>

      <span data-ttu-id="414c0-160">Se devolverá sin definir hasta que un vínculo del receptor AMQP ha se ha configurado correctamente para la sesión.</span><span class="sxs-lookup"><span data-stu-id="414c0-160">Will return undefined until a AMQP receiver link has been successfully set up for the session.</span></span>
    syntax:
      content: 'sessionLockedUntilUtc: Date | undefined'
      return:
        type:
          - Date | undefined
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SessionReceiver.setState'
    name: setState(any)
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="414c0-161">Establece el estado de la sesión.</span><span class="sxs-lookup"><span data-stu-id="414c0-161">Sets the state on the Session.</span></span> <span data-ttu-id="414c0-162">Para obtener más información sobre los Estados de sesión, vea [estado de sesión](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span><span class="sxs-lookup"><span data-stu-id="414c0-162">For more on session states, see [Session State](https://docs.microsoft.com/en-us/azure/service-bus-messaging/message-sessions#message-session-state)</span></span>'
    syntax:
      content: 'function setState(state: any)'
      parameters:
        - id: state
          type:
            - any
          description: |
            <span data-ttu-id="414c0-163">El estado que se debe establecer.</span><span class="sxs-lookup"><span data-stu-id="414c0-163">The state that needs to be set.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: AsyncIterableIterator<@azure/service-bus.ServiceBusMessage>
    name: ServiceBusMessage>
    spec.typeScript:
      - name: AsyncIterableIterator<
        fullName: AsyncIterableIterator<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '>'
        fullName: '>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'
  - uid: Promise<@azure/service-bus.ServiceBusMessage | undefined>
    name: ServiceBusMessage | undefined>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: ' | undefined>'
        fullName: ' | undefined>'
  - uid: 'Promise<@azure/service-bus.ServiceBusMessage[]>'
    name: 'ServiceBusMessage[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ServiceBusMessage
        fullName: ServiceBusMessage
        uid: '@azure/service-bus.ServiceBusMessage'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/service-bus.OnMessage'
    name: OnMessage
    spec.typeScript:
      - name: OnMessage
        fullName: OnMessage
        uid: '@azure/service-bus.OnMessage'
  - uid: '@azure/service-bus.OnError'
    name: OnError
    spec.typeScript:
      - name: OnError
        fullName: OnError
        uid: '@azure/service-bus.OnError'
  - uid: '@azure/service-bus.SessionMessageHandlerOptions'
    name: SessionMessageHandlerOptions
    spec.typeScript:
      - name: SessionMessageHandlerOptions
        fullName: SessionMessageHandlerOptions
        uid: '@azure/service-bus.SessionMessageHandlerOptions'