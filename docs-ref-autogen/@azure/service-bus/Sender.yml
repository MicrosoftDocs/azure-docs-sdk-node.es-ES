### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.Sender'
    name: Sender
    fullName: Sender
    children:
      - '@azure/service-bus.Sender.cancelScheduledMessage'
      - '@azure/service-bus.Sender.cancelScheduledMessages'
      - '@azure/service-bus.Sender.close'
      - '@azure/service-bus.Sender.isClosed'
      - '@azure/service-bus.Sender.scheduleMessage'
      - '@azure/service-bus.Sender.scheduleMessages'
      - '@azure/service-bus.Sender.send'
      - '@azure/service-bus.Sender.sendBatch'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="1ca11-101">La clase remitente puede usarse para enviar mensajes, programar mensajes para enviarse en un momento posterior y cancelar tales mensajes programados.</span><span class="sxs-lookup"><span data-stu-id="1ca11-101">The Sender class can be used to send messages, schedule messages to be sent at a later time and cancel such scheduled messages.</span></span>
      <span data-ttu-id="1ca11-102">Use el `createSender` funcionan en QueueClient o TopicClient para crear instancias de un remitente.</span><span class="sxs-lookup"><span data-stu-id="1ca11-102">Use the `createSender` function on the QueueClient or TopicClient to instantiate a Sender.</span></span>
      <span data-ttu-id="1ca11-103">La clase del remitente es una abstracción sobre el vínculo del remitente AMQP subyacente.</span><span class="sxs-lookup"><span data-stu-id="1ca11-103">The Sender class is an abstraction over the underlying AMQP sender link.</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessage'
    name: cancelScheduledMessage(Long)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1ca11-104">Cancela un mensaje que se programó para aparecer en una cola o suscripción de bus de servicio.</span><span class="sxs-lookup"><span data-stu-id="1ca11-104">Cancels a message that was scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessage(sequenceNumber: Long)'
      parameters:
        - id: sequenceNumber
          type:
            - Long
          description: <span data-ttu-id="1ca11-105">El número de secuencia del mensaje que debe cancelarse.</span><span class="sxs-lookup"><span data-stu-id="1ca11-105">The sequence number of the message to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.cancelScheduledMessages'
    name: 'cancelScheduledMessages(Long[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1ca11-106">Cancela varios mensajes que se programaron para aparecer en una cola o suscripción de bus de servicio.</span><span class="sxs-lookup"><span data-stu-id="1ca11-106">Cancels multiple messages that were scheduled to appear on a ServiceBus Queue/Subscription.</span></span>
    syntax:
      content: 'function cancelScheduledMessages(sequenceNumbers: Long[])'
      parameters:
        - id: sequenceNumbers
          type:
            - 'Long[]'
          description: <span data-ttu-id="1ca11-107">Una matriz de números de secuencia de los mensajes que debe cancelarse.</span><span class="sxs-lookup"><span data-stu-id="1ca11-107">An Array of sequence numbers of the messages to be cancelled.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="1ca11-108">Cierra el vínculo del remitente AMQP subyacente.</span><span class="sxs-lookup"><span data-stu-id="1ca11-108">Closes the underlying AMQP sender link.</span></span>
      <span data-ttu-id="1ca11-109">Una vez cerrado, el remitente no se puede usar para realizar más operaciones.</span><span class="sxs-lookup"><span data-stu-id="1ca11-109">Once closed, the sender cannot be used for any further operations.</span></span>
      <span data-ttu-id="1ca11-110">Use el `createSender` funcionan en QueueClient o TopicClient para crear instancias de un nuevo remitente</span><span class="sxs-lookup"><span data-stu-id="1ca11-110">Use the `createSender` function on the QueueClient or TopicClient to instantiate a new Sender</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.isClosed'
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="1ca11-111">Devuelve `true` si se ha cerrado el remitente o el cliente que lo creó</span><span class="sxs-lookup"><span data-stu-id="1ca11-111">Returns `true` if either the sender or the client that created it has been closed</span></span>
    syntax:
      content: 'isClosed: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessage'
    name: 'scheduleMessage(Date, SendableMessageInfo)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1ca11-112">Programaciones dados mensaje aparezca en el Bus de servicio de cola o suscripción en un momento posterior.</span><span class="sxs-lookup"><span data-stu-id="1ca11-112">Schedules given message to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessage(scheduledEnqueueTimeUtc: Date, message: SendableMessageInfo)'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="1ca11-113">La hora UTC a la que el mensaje debe poner en cola.</span><span class="sxs-lookup"><span data-stu-id="1ca11-113">The UTC time at which the message should be enqueued.</span></span>
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="1ca11-114">El mensaje que se debe programar.</span><span class="sxs-lookup"><span data-stu-id="1ca11-114">The message that needs to be scheduled.</span></span>
      return:
        type:
          - Promise<Long>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.scheduleMessages'
    name: 'scheduleMessages(Date, SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="1ca11-115">Programaciones dados los mensajes que aparecen en el Bus de servicio de cola o suscripción en un momento posterior.</span><span class="sxs-lookup"><span data-stu-id="1ca11-115">Schedules given messages to appear on Service Bus Queue/Subscription at a later time.</span></span>
    syntax:
      content: 'function scheduleMessages(scheduledEnqueueTimeUtc: Date, messages: SendableMessageInfo[])'
      parameters:
        - id: scheduledEnqueueTimeUtc
          type:
            - Date
          description: <span data-ttu-id="1ca11-116">La hora UTC a la que los mensajes deben ser puestos en cola.</span><span class="sxs-lookup"><span data-stu-id="1ca11-116">The UTC time at which the messages should be enqueued.</span></span>
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="1ca11-117">Matriz de mensajes que se deben programar.</span><span class="sxs-lookup"><span data-stu-id="1ca11-117">Array of Messages that need to be scheduled.</span></span>
      return:
        type:
          - 'Promise<Long[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.send'
    name: send(SendableMessageInfo)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="1ca11-118">Envía el mensaje especificado después de crear un vínculo AMQP remitente si aún no existe.</span><span class="sxs-lookup"><span data-stu-id="1ca11-118">Sends the given message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      <span data-ttu-id="1ca11-119">Para enviar un mensaje a un `session` o `partition` tema o cola habilitado, establezca el `sessionId` o `partitionKey` propiedades respectivamente en el mensaje.</span><span class="sxs-lookup"><span data-stu-id="1ca11-119">To send a message to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the message.</span></span>
    syntax:
      content: 'function send(message: SendableMessageInfo)'
      parameters:
        - id: message
          type:
            - '@azure/service-bus.SendableMessageInfo'
          description: <span data-ttu-id="1ca11-120">Mensaje que se enviará.</span><span class="sxs-lookup"><span data-stu-id="1ca11-120">Message to send.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.Sender.sendBatch'
    name: 'sendBatch(SendableMessageInfo[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      <span data-ttu-id="1ca11-121">Envía los mensajes determinados en un único lote, es decir, en un único mensaje AMQP después de crear un vínculo AMQP remitente si aún no existe.</span><span class="sxs-lookup"><span data-stu-id="1ca11-121">Sends the given messages in a single batch i.e. in a single AMQP message after creating an AMQP Sender link if it doesnt already exists.</span></span>
      - <span data-ttu-id="1ca11-122">Para enviar mensajes a un `session` o `partition` tema o cola habilitado, establezca el `sessionId` o `partitionKey` propiedades respectivamente en los mensajes.</span><span class="sxs-lookup"><span data-stu-id="1ca11-122">To send messages to a `session` and/or `partition` enabled Queue/Topic, set the `sessionId` and/or `partitionKey` properties respectively on the messages.</span></span>
      - <span data-ttu-id="1ca11-123">Al hacerlo, todos los mensajes del lote deben tener el mismo `sessionId` (si usa las sesiones) y el mismo `parititionKey` (si usa particiones).</span><span class="sxs-lookup"><span data-stu-id="1ca11-123">When doing so, all messages in the batch should have the same `sessionId` (if using sessions) and the same `parititionKey` (if using paritions).</span></span>
    syntax:
      content: 'function sendBatch(messages: SendableMessageInfo[])'
      parameters:
        - id: messages
          type:
            - '@azure/service-bus.SendableMessageInfo[]'
          description: <span data-ttu-id="1ca11-124">Una matriz de objetos SendableMessageInfo para enviarlo en un mensaje por lotes.</span><span class="sxs-lookup"><span data-stu-id="1ca11-124">An array of SendableMessageInfo objects to be sent in a Batch message.</span></span>
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.SendableMessageInfo[]'
    name: 'SendableMessageInfo[]'
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
      - name: '[]'
        fullName: '[]'