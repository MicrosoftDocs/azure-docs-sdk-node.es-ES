### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.SubscriptionClient'
    name: SubscriptionClient
    fullName: SubscriptionClient
    children:
      - '@azure/service-bus.SubscriptionClient.addRule'
      - '@azure/service-bus.SubscriptionClient.close'
      - '@azure/service-bus.SubscriptionClient.createReceiver'
      - '@azure/service-bus.SubscriptionClient.createReceiver_1'
      - '@azure/service-bus.SubscriptionClient.defaultRuleName'
      - '@azure/service-bus.SubscriptionClient.entityPath'
      - '@azure/service-bus.SubscriptionClient.getRules'
      - '@azure/service-bus.SubscriptionClient.id'
      - '@azure/service-bus.SubscriptionClient.peek'
      - '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
      - '@azure/service-bus.SubscriptionClient.removeRule'
      - '@azure/service-bus.SubscriptionClient.subscriptionName'
      - '@azure/service-bus.SubscriptionClient.topicName'
    langs:
      - typeScript
    type: class
    summary: |-
      <span data-ttu-id="a13be-101">Describe al cliente que permite interactuar con una suscripción a Service Bus.</span><span class="sxs-lookup"><span data-stu-id="a13be-101">Describes the client that allows interacting with a Service Bus Subscription.</span></span>
      <span data-ttu-id="a13be-102">Use el `createSubscriptionClient` función en el objeto ServiceBusClient para crear instancias de un SubscriptionClient</span><span class="sxs-lookup"><span data-stu-id="a13be-102">Use the `createSubscriptionClient` function on the ServiceBusClient object to instantiate a SubscriptionClient</span></span>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.addRule'
    name: 'addRule(string, boolean | string | CorrelationFilter, undefined | string)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-103">Agrega una regla en la suscripción como se define en el nombre de la regla especificada, el filtro y la acción.</span><span class="sxs-lookup"><span data-stu-id="a13be-103">Adds a rule on the subscription as defined by the given rule name, filter and action.</span></span>
      <span data-ttu-id="a13be-104">**Nota**: Quite el filtro true de forma predeterminada en la suscripción antes de agregar una regla.</span><span class="sxs-lookup"><span data-stu-id="a13be-104">**Note**: Remove the default true filter on the subscription before adding a rule.</span></span>
      <span data-ttu-id="a13be-105">En caso contrario, la regla se ha agregado no tendrá ningún efecto, como el filtro true hará siempre en la suscripción de recibir todos los mensajes.</span><span class="sxs-lookup"><span data-stu-id="a13be-105">Otherwise, the added rule will have no affect as the true filter will always result in the subscription receiving all messages.</span></span>
    syntax:
      content: 'function addRule(ruleName: string, filter: boolean | string | CorrelationFilter, sqlRuleActionExpression?: undefined | string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: <span data-ttu-id="a13be-106">Nombre de la regla.</span><span class="sxs-lookup"><span data-stu-id="a13be-106">Name of the rule</span></span>
        - id: filter
          type:
            - boolean | string | @azure/service-bus.CorrelationFilter
          description: '<span data-ttu-id="a13be-107">Un valor booleano, expresión SQL o un filtro de correlación.</span><span class="sxs-lookup"><span data-stu-id="a13be-107">A Boolean, SQL expression or a Correlation filter.</span></span> <span data-ttu-id="a13be-108">Para la sintaxis de filtro de SQL, vea [sintaxis de SQLFilter](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span><span class="sxs-lookup"><span data-stu-id="a13be-108">For SQL Filter syntax, see [SQLFilter syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-filter).</span></span>'
        - id: sqlRuleActionExpression
          type:
            - undefined | string
          description: |
            <span data-ttu-id="a13be-109">Acción que se realizará si el mensaje satisface la expresión de filtrado.</span><span class="sxs-lookup"><span data-stu-id="a13be-109">Action to perform if the message satisfies the filtering expression.</span></span> <span data-ttu-id="a13be-110">Para conocer la sintaxis SQL la acción de regla, vea [sintaxis de SQLRuleAction](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span><span class="sxs-lookup"><span data-stu-id="a13be-110">For SQL Rule Action syntax, see [SQLRuleAction syntax](https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-messaging-sql-rule-action).</span></span>
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.close'
    name: close()
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-111">Cierra el vínculo AMQP para los receptores creados por este cliente.</span><span class="sxs-lookup"><span data-stu-id="a13be-111">Closes the AMQP link for the receivers created by this client.</span></span>
      <span data-ttu-id="a13be-112">Una vez cerrado, el SubscriptionClient ni sus receptores pueden utilizarse para realizar más operaciones.</span><span class="sxs-lookup"><span data-stu-id="a13be-112">Once closed, neither the SubscriptionClient nor its receivers can be used for any further operations.</span></span>
    syntax:
      content: function close()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver'
    name: createReceiver(ReceiveMode)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-113">Crea un receptor para recibir mensajes de una suscripción que no tienen sesiones habilitadas.</span><span class="sxs-lookup"><span data-stu-id="a13be-113">Creates a Receiver for receiving messages from a Subscription which does not have sessions enabled.</span></span>
      - <span data-ttu-id="a13be-114">Produce el error si ya existe un receptor abierto para este SubscriptionClient.</span><span class="sxs-lookup"><span data-stu-id="a13be-114">Throws error if an open receiver already exists for this SubscriptionClient.</span></span>
      - <span data-ttu-id="a13be-115">Produce `InvalidOperationError` si la suscripción tiene sesiones habilitadas (en cuyo caso, utilice la sobrecarga de este método que toma `sessionOptions` argumento)</span><span class="sxs-lookup"><span data-stu-id="a13be-115">Throws `InvalidOperationError` if the Subscription has sessions enabled (in which case, use the overload of this method which takes `sessionOptions` argument)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |
            <span data-ttu-id="a13be-116">Una enumeración que indica el modo en que se deben recibir los mensajes.</span><span class="sxs-lookup"><span data-stu-id="a13be-116">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="a13be-117">Los valores posibles son:</span><span class="sxs-lookup"><span data-stu-id="a13be-117">Possible values are:</span></span>
            - <span data-ttu-id="a13be-118">`ReceiveMode.peekLock`: Una vez que se recibe un mensaje en este modo, el receptor tiene un bloqueo en el mensaje durante un tiempo determinado.</span><span class="sxs-lookup"><span data-stu-id="a13be-118">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="a13be-119">Si el mensaje no se resuelvan mediante este tiempo, llega a activarlo de Service Bus para ser capturado por la siguiente operación de recepción.</span><span class="sxs-lookup"><span data-stu-id="a13be-119">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="a13be-120">`ReceiveMode.receiveAndDelete`: Los mensajes recibidos en este modo se quitarán automáticamente de Service Bus.</span><span class="sxs-lookup"><span data-stu-id="a13be-120">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
      return:
        type:
          - '@azure/service-bus.Receiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.createReceiver_1'
    name: 'createReceiver(ReceiveMode, SessionReceiverOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-121">Crea un receptor para recibir mensajes desde una sesión habilitada la suscripción.</span><span class="sxs-lookup"><span data-stu-id="a13be-121">Creates a Receiver for receiving messages from a session enabled Subscription.</span></span> <span data-ttu-id="a13be-122">Cuando no se especifica ningún Id. de sesión, se utiliza una sesión aleatoria entre las sesiones disponibles.</span><span class="sxs-lookup"><span data-stu-id="a13be-122">When no sessionId is given, a random session among the available sessions is used.</span></span>
      - <span data-ttu-id="a13be-123">Se produce error si un receptor abierto ya existe para la dada sessionId.</span><span class="sxs-lookup"><span data-stu-id="a13be-123">Throws error if an open receiver already exists for given sessionId.</span></span>
      - <span data-ttu-id="a13be-124">Produce `SessionCannotBeLockedError` si la suscripción no tienen sesiones habilitadas (en cuyo caso no pase el `sessionOptions` argumento) o si Service Bus no es capaz de obtener un bloqueo en la sesión (en qué casos vuelva a intentarlo más tarde)</span><span class="sxs-lookup"><span data-stu-id="a13be-124">Throws `SessionCannotBeLockedError` if the Subscription does not have sessions enabled (in which case do not pass the `sessionOptions` argument) or if Service Bus is not able to get a lock on the session (in which case try again after some time)</span></span>
    syntax:
      content: 'function createReceiver(receiveMode: ReceiveMode, sessionOptions: SessionReceiverOptions)'
      parameters:
        - id: receiveMode
          type:
            - '@azure/service-bus.ReceiveMode'
          description: |-
            <span data-ttu-id="a13be-125">Una enumeración que indica el modo en que se deben recibir los mensajes.</span><span class="sxs-lookup"><span data-stu-id="a13be-125">An enum indicating the mode in which messages should be received.</span></span> <span data-ttu-id="a13be-126">Los valores posibles son:</span><span class="sxs-lookup"><span data-stu-id="a13be-126">Possible values are:</span></span>
            - <span data-ttu-id="a13be-127">`ReceiveMode.peekLock`: Una vez que se recibe un mensaje en este modo, el receptor tiene un bloqueo en el mensaje durante un tiempo determinado.</span><span class="sxs-lookup"><span data-stu-id="a13be-127">`ReceiveMode.peekLock`: Once a message is received in this mode, the receiver has a lock on the message for a particular duration.</span></span> <span data-ttu-id="a13be-128">Si el mensaje no se resuelvan mediante este tiempo, llega a activarlo de Service Bus para ser capturado por la siguiente operación de recepción.</span><span class="sxs-lookup"><span data-stu-id="a13be-128">If the message is not settled by this time, it lands back on Service Bus to be fetched by the next receive operation.</span></span>
            - <span data-ttu-id="a13be-129">`ReceiveMode.receiveAndDelete`: Los mensajes recibidos en este modo se quitarán automáticamente de Service Bus.</span><span class="sxs-lookup"><span data-stu-id="a13be-129">`ReceiveMode.receiveAndDelete`: Messages received in this mode get automatically removed from Service Bus.</span></span>
        - id: sessionOptions
          type:
            - '@azure/service-bus.SessionReceiverOptions'
          description: |
            <span data-ttu-id="a13be-130">Opciones para proporcionar el Id. de sesión y la duración de la renovación del bloqueo automático para el receptor de sesión.</span><span class="sxs-lookup"><span data-stu-id="a13be-130">Options to provide sessionId and duration of automatic lock renewal for the session receiver.</span></span>
      return:
        type:
          - '@azure/service-bus.SessionReceiver'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.defaultRuleName'
    name: defaultRuleName
    fullName: defaultRuleName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="a13be-131">El nombre de la regla predeterminada en la suscripción.</span><span class="sxs-lookup"><span data-stu-id="a13be-131">The name of the default rule on the subscription.</span></span>
    syntax:
      content: 'defaultRuleName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.entityPath'
    name: entityPath
    fullName: entityPath
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="a13be-132">La ruta de acceso para la suscripción a Service Bus para el que se creó este cliente.</span><span class="sxs-lookup"><span data-stu-id="a13be-132">The path for the Service Bus Subscription for which this client is created.</span></span>
    syntax:
      content: 'entityPath: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.getRules'
    name: getRules()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="a13be-133">Obtiene todas las reglas asociadas con la suscripción</span><span class="sxs-lookup"><span data-stu-id="a13be-133">Gets all rules associated with the subscription</span></span>
    syntax:
      content: function getRules()
      parameters: []
      return:
        type:
          - 'Promise<@azure/service-bus.RuleDescription[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="a13be-134">Un identificador único para este cliente.</span><span class="sxs-lookup"><span data-stu-id="a13be-134">A unique identifier for this client.</span></span>
    syntax:
      content: 'id: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peek'
    name: peek(undefined | number)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-135">Recupera el siguiente lote de mensajes activos (incluidos diferida, pero no deadlettered mensajes).</span><span class="sxs-lookup"><span data-stu-id="a13be-135">Fetches the next batch of active messages (including deferred but not deadlettered messages).</span></span>
      - <span data-ttu-id="a13be-136">La primera llamada a `peek()` captura el primer mensaje activo.</span><span class="sxs-lookup"><span data-stu-id="a13be-136">The first call to `peek()` fetches the first active message.</span></span> <span data-ttu-id="a13be-137">Cada llamada posterior realizada captura el mensaje subsiguiente.</span><span class="sxs-lookup"><span data-stu-id="a13be-137">Each subsequent call fetches the subsequent message.</span></span>
      - <span data-ttu-id="a13be-138">A diferencia de un `received` mensaje, `peeked` mensaje es una versión de solo lectura del mensaje.</span><span class="sxs-lookup"><span data-stu-id="a13be-138">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="a13be-139">No puede ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="a13be-139">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="a13be-140">No se puede renovar el bloqueo en él.</span><span class="sxs-lookup"><span data-stu-id="a13be-140">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peek(maxMessageCount?: undefined | number)'
      parameters:
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.peekBySequenceNumber'
    name: 'peekBySequenceNumber(Long, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-141">Busca el número deseado de mensajes activos (incluidos diferida, pero no los mensajes deadlettered) del número de secuencia especificado.</span><span class="sxs-lookup"><span data-stu-id="a13be-141">Peeks the desired number of active messages (including deferred but not deadlettered messages) from the specified sequence number.</span></span>
      - <span data-ttu-id="a13be-142">A diferencia de un `received` mensaje, `peeked` mensaje es una versión de solo lectura del mensaje.</span><span class="sxs-lookup"><span data-stu-id="a13be-142">Unlike a `received` message, `peeked` message is a read-only version of the message.</span></span>
      <span data-ttu-id="a13be-143">No puede ser `Completed/Abandoned/Deferred/Deadlettered`.</span><span class="sxs-lookup"><span data-stu-id="a13be-143">It cannot be `Completed/Abandoned/Deferred/Deadlettered`.</span></span> <span data-ttu-id="a13be-144">No se puede renovar el bloqueo en él.</span><span class="sxs-lookup"><span data-stu-id="a13be-144">The lock on it cannot be renewed.</span></span>
    syntax:
      content: 'function peekBySequenceNumber(fromSequenceNumber: Long, maxMessageCount?: undefined | number)'
      parameters:
        - id: fromSequenceNumber
          type:
            - Long
          description: <span data-ttu-id="a13be-145">El número de secuencia desde donde leer el mensaje.</span><span class="sxs-lookup"><span data-stu-id="a13be-145">The sequence number from where to read the message.</span></span>
        - id: maxMessageCount
          type:
            - undefined | number
          description: ''
          optional: true
      return:
        type:
          - 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.removeRule'
    name: removeRule(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="a13be-146">Quita la regla en la suscripción identificada por el nombre de regla determinada.</span><span class="sxs-lookup"><span data-stu-id="a13be-146">Removes the rule on the subscription identified by the given rule name.</span></span>
      <span data-ttu-id="a13be-147">**Precaución**: Si se quitan todas las reglas en una suscripción, la suscripción no recibirá más mensajes.</span><span class="sxs-lookup"><span data-stu-id="a13be-147">**Caution**: If all rules on a subscription are removed, then the subscription will not receive any more messages.</span></span>
    syntax:
      content: 'function removeRule(ruleName: string)'
      parameters:
        - id: ruleName
          type:
            - string
          description: |+

      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.subscriptionName'
    name: subscriptionName
    fullName: subscriptionName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="a13be-148">El nombre de la suscripción a Service Bus para el que se creó este cliente.</span><span class="sxs-lookup"><span data-stu-id="a13be-148">The name of the Service Bus Subscription for which this client is created.</span></span>
    syntax:
      content: 'subscriptionName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.SubscriptionClient.topicName'
    name: topicName
    fullName: topicName
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="a13be-149">El nombre de tema de Service Bus para cuya suscripción, se crea este cliente.</span><span class="sxs-lookup"><span data-stu-id="a13be-149">The name of the Service Bus Topic for whose Subscription, this client is created.</span></span>'
    syntax:
      content: 'topicName: string'
      return:
        type:
          - string
    package: '@azure/service-bus'
references:
  - uid: boolean | string | @azure/service-bus.CorrelationFilter
    name: CorrelationFilter
    spec.typeScript:
      - name: 'boolean | string | '
        fullName: 'boolean | string | '
      - name: CorrelationFilter
        fullName: CorrelationFilter
        uid: '@azure/service-bus.CorrelationFilter'
  - uid: '@azure/service-bus.ReceiveMode'
    name: ReceiveMode
    spec.typeScript:
      - name: ReceiveMode
        fullName: ReceiveMode
        uid: '@azure/service-bus.ReceiveMode'
  - uid: '@azure/service-bus.Receiver'
    name: Receiver
    spec.typeScript:
      - name: Receiver
        fullName: Receiver
        uid: '@azure/service-bus.Receiver'
  - uid: '@azure/service-bus.SessionReceiverOptions'
    name: SessionReceiverOptions
    spec.typeScript:
      - name: SessionReceiverOptions
        fullName: SessionReceiverOptions
        uid: '@azure/service-bus.SessionReceiverOptions'
  - uid: '@azure/service-bus.SessionReceiver'
    name: SessionReceiver
    spec.typeScript:
      - name: SessionReceiver
        fullName: SessionReceiver
        uid: '@azure/service-bus.SessionReceiver'
  - uid: 'Promise<@azure/service-bus.RuleDescription[]>'
    name: 'RuleDescription[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: RuleDescription
        fullName: RuleDescription
        uid: '@azure/service-bus.RuleDescription'
      - name: '[]>'
        fullName: '[]>'
  - uid: 'Promise<@azure/service-bus.ReceivedMessageInfo[]>'
    name: 'ReceivedMessageInfo[]>'
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: ReceivedMessageInfo
        fullName: ReceivedMessageInfo
        uid: '@azure/service-bus.ReceivedMessageInfo'
      - name: '[]>'
        fullName: '[]>'