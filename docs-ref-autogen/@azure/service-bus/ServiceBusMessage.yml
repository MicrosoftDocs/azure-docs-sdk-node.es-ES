### YamlMime:UniversalReference
items:
  - uid: '@azure/service-bus.ServiceBusMessage'
    name: ServiceBusMessage
    fullName: ServiceBusMessage
    children:
      - '@azure/service-bus.ServiceBusMessage.abandon'
      - '@azure/service-bus.ServiceBusMessage.body'
      - '@azure/service-bus.ServiceBusMessage.clone'
      - '@azure/service-bus.ServiceBusMessage.complete'
      - '@azure/service-bus.ServiceBusMessage.contentType'
      - '@azure/service-bus.ServiceBusMessage.correlationId'
      - '@azure/service-bus.ServiceBusMessage.deadLetter'
      - '@azure/service-bus.ServiceBusMessage.deadLetterSource'
      - '@azure/service-bus.ServiceBusMessage.defer'
      - '@azure/service-bus.ServiceBusMessage.delivery'
      - '@azure/service-bus.ServiceBusMessage.deliveryCount'
      - '@azure/service-bus.ServiceBusMessage.enqueuedSequenceNumber'
      - '@azure/service-bus.ServiceBusMessage.enqueuedTimeUtc'
      - '@azure/service-bus.ServiceBusMessage.expiresAtUtc'
      - '@azure/service-bus.ServiceBusMessage.isSettled'
      - '@azure/service-bus.ServiceBusMessage.label'
      - '@azure/service-bus.ServiceBusMessage.lockedUntilUtc'
      - '@azure/service-bus.ServiceBusMessage.lockToken'
      - '@azure/service-bus.ServiceBusMessage.messageId'
      - '@azure/service-bus.ServiceBusMessage.partitionKey'
      - '@azure/service-bus.ServiceBusMessage.replyTo'
      - '@azure/service-bus.ServiceBusMessage.replyToSessionId'
      - '@azure/service-bus.ServiceBusMessage.scheduledEnqueueTimeUtc'
      - '@azure/service-bus.ServiceBusMessage.sequenceNumber'
      - '@azure/service-bus.ServiceBusMessage.sessionId'
      - '@azure/service-bus.ServiceBusMessage.timeToLive'
      - '@azure/service-bus.ServiceBusMessage.to'
      - '@azure/service-bus.ServiceBusMessage.userProperties'
      - '@azure/service-bus.ServiceBusMessage.viaPartitionKey'
    langs:
      - typeScript
    type: class
    summary: Describe el mensaje recibido del Bus de servicio.
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.abandon'
    name: 'abandon(undefined | [key: string]: any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      El bloqueo mantenido en el mensaje por el receptor se suelte, hacer que el mensaje estén disponibles en Service Bus para otra operación de recepción.
      - Produce `SessionLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas) si el protocolo AMQP un vínculo con el que el mensaje fue recibido está ya no activo. Esto puede ocurrir porque el bloqueo en la sesión ha expirado o el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Produce `MessageLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas no) si el bloqueo en el mensaje ha expirado o el protocolo AMQP vincula con la que el mensaje fue recibido está ya no activo. Este último puede suceder si el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Se produce un error si el mensaje ya se ha liquidado. Para evitar este error de comprobación del `isSettled` propiedad en el mensaje si no estás seguro de si el mensaje se ha liquidado.
      - Produce un error si se usa en `ReceiveAndDelete` modo porque todos los mensajes reciban en este modo se previamente liquidadas. Para evitar este error, actualice el código para no liquidar un mensaje que se recibe en este modo.
      - Produce `ServiceUnavailableError` si Service Bus no reconoce la solicitud para cancelar el mensaje en el tiempo. El mensaje puede o es posible que no se han liquidado correctamente.
    syntax:
      content: 'function abandon(propertiesToModify?: undefined | [key: string]: any)'
      parameters:
        - id: propertiesToModify
          type:
            - 'undefined | [key: string]: any'
          description: |
            Las propiedades del mensaje para modificar al abandonar el mensaje.
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.body'
    name: body
    fullName: body
    children: []
    langs:
      - typeScript
    type: property
    summary: El cuerpo del mensaje que se debe enviar o recibe.
    syntax:
      content: 'body: any'
      return:
        type:
          - any
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.clone'
    name: clone()
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea un clon del mensaje actual para que pueda volver a enviarse a la cola
    syntax:
      content: function clone()
      parameters: []
      return:
        type:
          - '@azure/service-bus.SendableMessageInfo'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.complete'
    name: complete()
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Quita el mensaje de Service Bus.
      - Produce `SessionLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas) si el protocolo AMQP un vínculo con el que el mensaje fue recibido está ya no activo. Esto puede ocurrir porque el bloqueo en la sesión ha expirado o el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Produce `MessageLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas no) si el bloqueo en el mensaje ha expirado o el protocolo AMQP vincula con la que el mensaje fue recibido está ya no activo. Este último puede suceder si el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Se produce un error si el mensaje ya se ha liquidado. Para evitar este error de comprobación del `isSettled` propiedad en el mensaje si no estás seguro de si el mensaje se ha liquidado.
      - Produce un error si se usa en `ReceiveAndDelete` modo porque todos los mensajes reciban en este modo se previamente liquidadas. Para evitar este error, actualice el código para no liquidar un mensaje que se recibe en este modo.
      - Produce `ServiceUnavailableError` si Service Bus no reconoce la solicitud para cancelar el mensaje en el tiempo. El mensaje puede o es posible que no se han liquidado correctamente.
    syntax:
      content: function complete()
      parameters: []
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.contentType'
    name: contentType
    fullName: contentType
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El tipo de contenido del mensaje. Opcionalmente, describe la carga del mensaje, con un descriptor que obedece el formato de RFC2045, sección 5, por ejemplo "application/json".'
    optional: true
    syntax:
      content: 'contentType?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.correlationId'
    name: correlationId
    fullName: correlationId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      El identificador de correlación que permite que una aplicación especificar un contexto del mensaje para los fines de correlación, por ejemplo que refleja el MessageId de un mensaje que se ha respondido.
      Consulte [enrutamiento de mensajes y correlación](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    optional: true
    syntax:
      content: 'correlationId?: string | number | Buffer'
      return:
        type:
          - string | number | Buffer
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.deadLetter'
    name: deadLetter(DeadLetterOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Mueve el mensaje a la subcola de mensajes fallidos. Para recibir un mensaje deadletted, cree un nuevo QueueClient y SubscriptionClient mediante la ruta de acceso de la subcola de mensajes fallidos.
      - Produce `SessionLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas) si el protocolo AMQP un vínculo con el que el mensaje fue recibido está ya no activo. Esto puede ocurrir porque el bloqueo en la sesión ha expirado o el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Produce `MessageLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas no) si el bloqueo en el mensaje ha expirado o el protocolo AMQP vincula con la que el mensaje fue recibido está ya no activo. Este último puede suceder si el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Se produce un error si el mensaje ya se ha liquidado. Para evitar este error de comprobación del `isSettled` propiedad en el mensaje si no estás seguro de si el mensaje se ha liquidado.
      - Produce un error si se usa en `ReceiveAndDelete` modo porque todos los mensajes reciban en este modo se previamente liquidadas. Para evitar este error, actualice el código para no liquidar un mensaje que se recibe en este modo.
      - Produce `ServiceUnavailableError` si Service Bus no reconoce la solicitud para cancelar el mensaje en el tiempo. El mensaje puede o es posible que no se han liquidado correctamente.
    syntax:
      content: 'function deadLetter(options?: DeadLetterOptions)'
      parameters:
        - id: options
          type:
            - '@azure/service-bus.DeadLetterOptions'
          description: |
            Las opciones de mensajes fallidos que se pueden proporcionar al rechazar el mensaje.
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.deadLetterSource'
    name: deadLetterSource
    fullName: deadLetterSource
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El nombre de la cola o suscripción que este mensaje se pone en cola, antes, era deadlettered. Solo se establece en aquellos mensajes fallidos y posteriormente reenviados automáticamente de la cola de mensajes fallidos a otra entidad. Indica la entidad donde se encontraba el mensaje fallido.'
    optional: true
    syntax:
      content: 'deadLetterSource?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.defer'
    name: 'defer(undefined | [key: string]: any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Retrasa el procesamiento del mensaje. Guardar el `sequenceNumber` del mensaje, con el fin de recibirla mensaje nuevo en el futuro mediante el `receiveDeferredMessage` método.
      - Produce `SessionLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas) si el protocolo AMQP un vínculo con el que el mensaje fue recibido está ya no activo. Esto puede ocurrir porque el bloqueo en la sesión ha expirado o el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Produce `MessageLockLostError` (para mensajes de una cola o suscripción con sesiones habilitadas no) si el bloqueo en el mensaje ha expirado o el protocolo AMQP vincula con la que el mensaje fue recibido está ya no activo. Este último puede suceder si el receptor se ha cerrado explícitamente por el usuario o del vínculo AMQP tiene cerrado por la biblioteca debido a un error de servicio o la pérdida de red.
      - Se produce un error si el mensaje ya se ha liquidado. Para evitar este error de comprobación del `isSettled` propiedad en el mensaje si no estás seguro de si el mensaje se ha liquidado.
      - Produce un error si se usa en `ReceiveAndDelete` modo porque todos los mensajes reciban en este modo se previamente liquidadas. Para evitar este error, actualice el código para no liquidar un mensaje que se recibe en este modo.
      - Produce `ServiceUnavailableError` si Service Bus no reconoce la solicitud para cancelar el mensaje en el tiempo. El mensaje puede o es posible que no se han liquidado correctamente.
    syntax:
      content: 'function defer(propertiesToModify?: undefined | [key: string]: any)'
      parameters:
        - id: propertiesToModify
          type:
            - 'undefined | [key: string]: any'
          description: |
            Las propiedades del mensaje para modificar al aplazar el mensaje
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.delivery'
    name: delivery
    fullName: delivery
    children: []
    langs:
      - typeScript
    type: property
    summary: La entrega asociada del mensaje recibido.
    syntax:
      content: 'delivery: Delivery'
      return:
        type:
          - Delivery
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.deliveryCount'
    name: deliveryCount
    fullName: deliveryCount
    children: []
    langs:
      - typeScript
    type: property
    summary: Número de entregas que se han intentado para este mensaje. El recuento se incrementa cuando expira un bloqueo del mensaje o el mensaje lo abandona explícitamente mediante el `abandon()` método en el mensaje.
    optional: true
    syntax:
      content: 'deliveryCount?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.enqueuedSequenceNumber'
    name: enqueuedSequenceNumber
    fullName: enqueuedSequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El número de secuencia original del mensaje. Para los mensajes que se reenvían de manera automática, esta propiedad refleja el número de secuencia que primero se había asignado al mensaje en su momento del envío original.'
    optional: true
    syntax:
      content: 'enqueuedSequenceNumber?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.enqueuedTimeUtc'
    name: enqueuedTimeUtc
    fullName: enqueuedTimeUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: La hora UTC instantánea a la que aceptado y almacenado en el Bus de servicio el mensaje.
    optional: true
    syntax:
      content: 'enqueuedTimeUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.expiresAtUtc'
    name: expiresAtUtc
    fullName: expiresAtUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El instante en hora UTC en el que el mensaje se marca para su eliminación y ya no está disponible para la recuperación de la entidad debido a la expiración. Esta propiedad se calcula a partir de 2 otras propiedades en el mensaje: `enqueuedTimeUtc`  +  `timeToLive`.'
    optional: true
    syntax:
      content: 'expiresAtUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.isSettled'
    name: isSettled
    fullName: isSettled
    children: []
    langs:
      - typeScript
    type: property
    summary: Valor booleano que indica si el mensaje ya se ha liquidado.
    syntax:
      content: 'isSettled: boolean'
      return:
        type:
          - boolean
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.label'
    name: label
    fullName: label
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Etiqueta específica de la aplicación. Esta propiedad permite que la aplicación indicar el propósito del mensaje al receptor en un sistema estandarizado. modo, similar a una línea de asunto de correo electrónico. La propiedad asignada de AMQP es "asunto".'
    optional: true
    syntax:
      content: 'label?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.lockedUntilUtc'
    name: lockedUntilUtc
    fullName: lockedUntilUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      La instantánea de UTC hasta que el mensaje se mantiene bloqueada en la cola o suscripción.
      Cuando expira el bloqueo, el `deliveryCount` se incrementa y el mensaje vuelve a estar disponible para su recuperación.
      - No se aplica cuando se recibe el mensaje en `ReceiveMode.receiveAndDelete` modo.
    optional: true
    syntax:
      content: 'lockedUntilUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.lockToken'
    name: lockToken
    fullName: lockToken
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      El token de bloqueo es una referencia al bloqueo que se encuentra el agente en `ReceiveMode.PeekLock` modo. Los bloqueos se usan internamente liquidar los mensajes, como se explica en la [con más detalle la documentación del producto](https://docs.microsoft.com/azure/service-bus-messaging/message-transfers-locks-settlement)
      - No se aplica cuando se recibe el mensaje en `ReceiveMode.receiveAndDelete` modo.
    optional: true
    syntax:
      content: 'lockToken?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.messageId'
    name: messageId
    fullName: messageId
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El identificador del mensaje es un valor definido por la aplicación que identifica de forma única el mensaje y su carga. El identificador es una cadena de forma libre y puede reflejar un GUID o un identificador que se deriva del contexto de la aplicación. Si está habilitada, el [detección de duplicados](https://docs.microsoft.com/azure/service-bus-messaging/duplicate-detection) identifica y quita el segundo y siguientes envíos de mensajes con el mismo MessageId.'
    optional: true
    syntax:
      content: 'messageId?: string | number | Buffer'
      return:
        type:
          - string | number | Buffer
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.partitionKey'
    name: partitionKey
    fullName: partitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: 'La clave de partición para enviar un mensaje a una entidad con particiones. Longitud máxima es 128 caracteres. En el caso de [entidades con particiones](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-partitioning), la configuración de este valor permite asignar mensajes relacionados a la misma partición interna, por lo que el orden de la secuencia de envío se registra correctamente. La partición la elige una función hash sobre este valor y no se puede seleccionar directamente. Para entidades basadas en la sesión, el `sessionId` propiedad reemplaza este valor.'
    optional: true
    syntax:
      content: 'partitionKey?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.replyTo'
    name: replyTo
    fullName: replyTo
    children: []
    langs:
      - typeScript
    type: property
    summary: 'La dirección de una entidad para enviar respuestas a. Este valor opcional y definido por la aplicación es un método estándar de expresar una ruta de acceso de respuesta al receptor del mensaje. Cuando un remitente espera una respuesta, establece el valor en la ruta de acceso absoluta o relativa de la cola o tema al que espera que se envíe la respuesta. Consulte [enrutamiento de mensajes y correlación](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).'
    optional: true
    syntax:
      content: 'replyTo?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.replyToSessionId'
    name: replyToSessionId
    fullName: replyToSessionId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      El identificador de sesión aumentando el `replyTo` dirección.
      Longitud máxima es 128 caracteres. Este valor aumenta la información de ReplyTo y especifica que se debe establecer SessionId para la respuesta cuando se envían a la entidad de respuesta.
      Consulte [enrutamiento de mensajes y correlación](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-messages-payloads?#message-routing-and-correlation).
    optional: true
    syntax:
      content: 'replyToSessionId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.scheduledEnqueueTimeUtc'
    name: scheduledEnqueueTimeUtc
    fullName: scheduledEnqueueTimeUtc
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      La fecha y hora en UTC en que el mensaje será puestos en cola. Esta propiedad devuelve la hora en hora UTC; al establecer la propiedad, el valor DateTime proporcionado debe ser también en formato UTC. Este valor es el envío del mensaje demorado.
      Se utiliza para retrasar el envío a un momento específico en el futuro de los mensajes. Tiempo poniendo en cola de mensajes no significa que se enviará el mensaje al mismo tiempo. Obtendrá puestos en cola, pero el tiempo envío real depende de la carga de trabajo de la cola y su estado.
    optional: true
    syntax:
      content: 'scheduledEnqueueTimeUtc?: Date'
      return:
        type:
          - Date
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      El número único asignado a un mensaje por Service Bus.
      El número de secuencia es un entero de 64 bits único asignado a un mensaje cuando el agente lo acepta y lo almacena, y funciona como su verdadero identificador. Para entidades con particiones, los 16 bits superiores reflejan el identificador de la partición. Números de secuencia aumentan regularmente.
      Vuelven a 0 cuando se agota el intervalo de 48-64 bits.
    optional: true
    syntax:
      content: 'sequenceNumber?: Long'
      return:
        type:
          - Long
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.sessionId'
    name: sessionId
    fullName: sessionId
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      El identificador de sesión para una entidad en cuenta la sesión. Longitud máxima es 128 caracteres. Para entidades que tienen en cuenta la sesión, este valor definido por la aplicación especifica la afiliación de sesión del mensaje. Los mensajes con el mismo identificador de sesión están sujetas al bloqueo de resumen y habilitan el procesamiento en orden exacto y la desmultiplexación. Para las entidades que no tienen en cuenta la sesión, este valor se omite.
      [Sesiones de mensajes](https://docs.microsoft.com/azure/service-bus-messaging/message-sessions).
    optional: true
    syntax:
      content: 'sessionId?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.timeToLive'
    name: timeToLive
    fullName: timeToLive
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El período de vida. Este valor es la duración relativa tras el cual expira el mensaje, comenzando desde el momento en que el mensaje ha aceptado y almacenados por el agente, capturarse en `enqueuedTimeUtc`. Cuando no se establece explícitamente, el valor asumido es el DefaultTimeToLive para la cola o tema correspondiente. Nivel de mensaje `timeToLive` valor no puede ser mayor que la configuración de la entidad DefaultTimeToLive y se ajusta automáticamente si lo hace. Consulte [caducidad](https://docs.microsoft.com/azure/service-bus-messaging/message-expiration).'
    optional: true
    syntax:
      content: 'timeToLive?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.to'
    name: to
    fullName: to
    children: []
    langs:
      - typeScript
    type: property
    summary: 'La dirección "to". Esta propiedad está reservada para un uso futuro en escenarios de enrutamiento y actualmente la omite el propio agente. Las aplicaciones pueden usar este valor en controlados por reglas [encadenamiento de reenvío automático](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-auto-forwarding) escenarios para indicar el destino lógico previsto del mensaje.'
    optional: true
    syntax:
      content: 'to?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.userProperties'
    name: userProperties
    fullName: userProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: Las propiedades específicas de la aplicación.
    optional: true
    syntax:
      content: 'userProperties?: undefined | [key: string]: any'
      return:
        type:
          - 'undefined | [key: string]: any'
    package: '@azure/service-bus'
  - uid: '@azure/service-bus.ServiceBusMessage.viaPartitionKey'
    name: viaPartitionKey
    fullName: viaPartitionKey
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      La clave de partición para enviar un mensaje en una entidad a través de una cola de transferencia con particiones. Longitud máxima es 128 caracteres. Si se envía un mensaje a través de una cola de transferencia en el ámbito de una transacción, este valor selecciona la partición de la cola de transferencia: Esto es funcionalmente equivalente a `partitionKey` propiedad y se asegura de que los mensajes se mantienen juntos y en orden, tal como se transfieren.
      Consulte [transfiere y enviar a través de](https://docs.microsoft.com/azure/service-bus-messaging/service-bus-transactions#transfers-and-send-via).
    optional: true
    syntax:
      content: 'viaPartitionKey?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/service-bus'
references:
  - uid: '@azure/service-bus.SendableMessageInfo'
    name: SendableMessageInfo
    spec.typeScript:
      - name: SendableMessageInfo
        fullName: SendableMessageInfo
        uid: '@azure/service-bus.SendableMessageInfo'
  - uid: '@azure/service-bus.DeadLetterOptions'
    name: DeadLetterOptions
    spec.typeScript:
      - name: DeadLetterOptions
        fullName: DeadLetterOptions
        uid: '@azure/service-bus.DeadLetterOptions'