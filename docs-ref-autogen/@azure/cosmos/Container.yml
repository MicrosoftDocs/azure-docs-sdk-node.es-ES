### YamlMime:UniversalReference
ms.openlocfilehash: 8d085c8c928b40486992ef118d6155a39853015e
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/12/2018
ms.locfileid: "40073195"
items:
- uid: '@azure/cosmos.Container'
  name: Container
  fullName: Container
  children:
  - '@azure/cosmos.Container.conflict'
  - '@azure/cosmos.Container.database'
  - '@azure/cosmos.Container.delete'
  - '@azure/cosmos.Container.id'
  - '@azure/cosmos.Container.item'
  - '@azure/cosmos.Container.items'
  - '@azure/cosmos.Container.read'
  - '@azure/cosmos.Container.replace'
  - '@azure/cosmos.Container.storedProcedure'
  - '@azure/cosmos.Container.storedProcedures'
  - '@azure/cosmos.Container.trigger'
  - '@azure/cosmos.Container.triggers'
  - '@azure/cosmos.Container.url'
  - '@azure/cosmos.Container.userDefinedFunction'
  - '@azure/cosmos.Container.userDefinedFunctions'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="f0f7b-101">Operaciones para leer, reemplazar o eliminar un contenedor existente específico por id.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-101">Operations for reading, replacing, or deleting a specific, existing container by id.</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.conflict'
  name: conflict
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-102">Utilizado para leer, reemplazar o eliminar un determinado, existente <xref:Conflict> por identificador. Use `.conflicts` para crear nuevo entra en conflicto, o para realizar consultas o leer todos los conflictos.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-102">Used to read, replace, or delete a specific, existing <xref:Conflict> by id. Use `.conflicts` for creating new conflicts, or querying/reading all conflicts.</span></span>
  syntax:
    content: 'function conflict(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="f0f7b-103">El identificador de la <xref:Conflict>.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-103">The id of the <xref:Conflict>.</span></span>
    return:
      type:
      - '@azure/cosmos.Conflict'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.database'
  name: database
  fullName: database
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'database: Database'
    return:
      type:
      - '@azure/cosmos.Database'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.delete'
  name: delete
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-104">Eliminación del contenedor</span><span class="sxs-lookup"><span data-stu-id="f0f7b-104">Delete the container</span></span>
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.item'
  name: item
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="f0f7b-105">Utilizado para leer, reemplazar o eliminar un determinado, existente <xref:Item> por identificador. Use `.items` para crear nuevos elementos, o para realizar consultas o leer todos los elementos.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-105">Used to read, replace, or delete a specific, existing <xref:Item> by id. Use `.items` for creating new items, or querying/reading all items.</span></span>
  syntax:
    content: 'function item(id: string, partitionKey?: string)'
    parameters:
    - id: id
      type:
      - string
      description: <span data-ttu-id="f0f7b-106">El identificador de la <xref:Item>.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-106">The id of the <xref:Item>.</span></span>
    - id: partitionKey
      type:
      - string
      description: <span data-ttu-id="f0f7b-107">La clave de partición de la <xref:Item>.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-107">The partition key of the <xref:Item>.</span></span> <span data-ttu-id="f0f7b-108">(Obligatorio para contenedores con particiones).</span><span class="sxs-lookup"><span data-stu-id="f0f7b-108">(Required for partitioned containers).</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.Item'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.items'
  name: items
  fullName: items
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="f0f7b-109">Operaciones para crear nuevos elementos y leer o consultar todos los elementos para leer, reemplazar o eliminar un elemento existente, usan `.item(id)`.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-109">Operations for creating new items, and reading/querying all items For reading, replacing, or deleting an existing item, use `.item(id)`.</span></span>
  syntax:
    content: 'items: Items'
    return:
      type:
      - '@azure/cosmos.Items'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.read'
  name: read
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-110">Leer definición del contenedor</span><span class="sxs-lookup"><span data-stu-id="f0f7b-110">Read the container's definition</span></span>
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.replace'
  name: replace
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-111">Reemplace la definición del contenedor</span><span class="sxs-lookup"><span data-stu-id="f0f7b-111">Replace the container's definition</span></span>
  syntax:
    content: 'function replace(body: ContainerDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.ContainerDefinition'
      description: ''
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.ContainerResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.storedProcedure'
  name: storedProcedure
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-112">Utilizado para leer, reemplazar o eliminar un determinado, existente <xref:StoredProcedure> por identificador. Use `.storedProcedures` para crear nuevos procedimientos almacenados o consultas o leer todos los procedimientos almacenados.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-112">Used to read, replace, or delete a specific, existing <xref:StoredProcedure> by id. Use `.storedProcedures` for creating new stored procedures, or querying/reading all stored procedures.</span></span>
  syntax:
    content: 'function storedProcedure(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="f0f7b-113">El identificador de la <xref:StoredProcedure>.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-113">The id of the <xref:StoredProcedure>.</span></span>
    return:
      type:
      - '@azure/cosmos.StoredProcedure'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.storedProcedures'
  name: storedProcedures
  fullName: storedProcedures
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="f0f7b-114">Operaciones para crear nuevos procedimientos almacenados y leer o consultar todos los procedimientos almacenados.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-114">Operations for creating new stored procedures, and reading/querying all stored procedures.</span></span>

    <span data-ttu-id="f0f7b-115">Para leer, reemplazar o eliminar un procedimiento almacenado existente, use `.storedProcedure(id)`.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-115">For reading, replacing, or deleting an existing stored procedure, use `.storedProcedure(id)`.</span></span>
  syntax:
    content: 'storedProcedures: StoredProcedures'
    return:
      type:
      - '@azure/cosmos.StoredProcedures'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.trigger'
  name: trigger
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-116">Utilizado para leer, reemplazar o eliminar un determinado, existente <xref:Trigger> por identificador. Use `.triggers` para crear desencadenadores nuevos, o para realizar consultas o leer todos los desencadenadores.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-116">Used to read, replace, or delete a specific, existing <xref:Trigger> by id. Use `.triggers` for creating new triggers, or querying/reading all triggers.</span></span>
  syntax:
    content: 'function trigger(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="f0f7b-117">El identificador de la <xref:Trigger>.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-117">The id of the <xref:Trigger>.</span></span>
    return:
      type:
      - '@azure/cosmos.Trigger'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.triggers'
  name: triggers
  fullName: triggers
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="f0f7b-118">Operaciones para crear desencadenadores nuevos y leer o consultar todos los desencadenadores.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-118">Operations for creating new triggers, and reading/querying all triggers.</span></span>

    <span data-ttu-id="f0f7b-119">Para leer, reemplazar o eliminar un desencadenador existente, use `.trigger(id)`.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-119">For reading, replacing, or deleting an existing trigger, use `.trigger(id)`.</span></span>
  syntax:
    content: 'triggers: Triggers'
    return:
      type:
      - '@azure/cosmos.Triggers'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="f0f7b-120">Devuelve una dirección URL de la referencia al recurso.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-120">Returns a reference URL to the resource.</span></span> <span data-ttu-id="f0f7b-121">Se utiliza para la vinculación de permisos.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-121">Used for linking in Permissions.</span></span>
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.userDefinedFunction'
  name: userDefinedFunction
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="f0f7b-122">Utilizado para leer, reemplazar o eliminar un determinado, existente <xref:UserDefinedFunction> por identificador. Use `.userDefinedFunctions` para crear nuevas funciones definidas por el usuario, o para realizar consultas o leer todas las funciones definidas por el usuario.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-122">Used to read, replace, or delete a specific, existing <xref:UserDefinedFunction> by id. Use `.userDefinedFunctions` for creating new user defined functions, or querying/reading all user defined functions.</span></span>
  syntax:
    content: 'function userDefinedFunction(id: string)'
    parameters:
    - id: id
      type:
      - string
      description: >
        <span data-ttu-id="f0f7b-123">El identificador de la <xref:UserDefinedFunction>.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-123">The id of the <xref:UserDefinedFunction>.</span></span>
    return:
      type:
      - '@azure/cosmos.UserDefinedFunction'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Container.userDefinedFunctions'
  name: userDefinedFunctions
  fullName: userDefinedFunctions
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    <span data-ttu-id="f0f7b-124">Las funciones definidas por operaciones para crear nuevo usuario y lectura/consulta de todos los usuarios de las funciones definidas por.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-124">Operations for creating new user defined functions, and reading/querying all user defined functions.</span></span>

    <span data-ttu-id="f0f7b-125">Para leer, reemplazar o eliminar una función definida por el usuario existente, use `.userDefinedFunction(id)`.</span><span class="sxs-lookup"><span data-stu-id="f0f7b-125">For reading, replacing, or deleting an existing user defined function, use `.userDefinedFunction(id)`.</span></span>
  syntax:
    content: 'userDefinedFunctions: UserDefinedFunctions'
    return:
      type:
      - '@azure/cosmos.UserDefinedFunctions'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Database'
  spec.typeScript:
  - name: Database
    fullName: Database
    uid: '@azure/cosmos.Database'
- uid: '@azure/cosmos.Items'
  spec.typeScript:
  - name: Items
    fullName: Items
    uid: '@azure/cosmos.Items'
- uid: '@azure/cosmos.StoredProcedures'
  spec.typeScript:
  - name: StoredProcedures
    fullName: StoredProcedures
    uid: '@azure/cosmos.StoredProcedures'
- uid: '@azure/cosmos.Triggers'
  spec.typeScript:
  - name: Triggers
    fullName: Triggers
    uid: '@azure/cosmos.Triggers'
- uid: '@azure/cosmos.UserDefinedFunctions'
  spec.typeScript:
  - name: UserDefinedFunctions
    fullName: UserDefinedFunctions
    uid: '@azure/cosmos.UserDefinedFunctions'
- uid: '@azure/cosmos.Conflict'
  spec.typeScript:
  - name: Conflict
    fullName: Conflict
    uid: '@azure/cosmos.Conflict'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.ContainerResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ContainerResponse
    fullName: ContainerResponse
    uid: '@azure/cosmos.ContainerResponse'
  - name: '>'
    fullName: '>'
- uid: '@azure/cosmos.Item'
  spec.typeScript:
  - name: Item
    fullName: Item
    uid: '@azure/cosmos.Item'
- uid: '@azure/cosmos.ContainerDefinition'
  spec.typeScript:
  - name: ContainerDefinition
    fullName: ContainerDefinition
    uid: '@azure/cosmos.ContainerDefinition'
- uid: '@azure/cosmos.StoredProcedure'
  spec.typeScript:
  - name: StoredProcedure
    fullName: StoredProcedure
    uid: '@azure/cosmos.StoredProcedure'
- uid: '@azure/cosmos.Trigger'
  spec.typeScript:
  - name: Trigger
    fullName: Trigger
    uid: '@azure/cosmos.Trigger'
- uid: '@azure/cosmos.UserDefinedFunction'
  spec.typeScript:
  - name: UserDefinedFunction
    fullName: UserDefinedFunction
    uid: '@azure/cosmos.UserDefinedFunction'
