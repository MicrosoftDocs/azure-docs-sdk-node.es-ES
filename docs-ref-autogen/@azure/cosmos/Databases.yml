### YamlMime:UniversalReference
ms.openlocfilehash: e9c942e1c15d221260137950bb93d6df02a16008
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/12/2018
ms.locfileid: "40073190"
items:
- uid: '@azure/cosmos.Databases'
  name: Databases
  fullName: Databases
  children:
  - '@azure/cosmos.Databases.create'
  - '@azure/cosmos.Databases.createIfNotExists'
  - '@azure/cosmos.Databases.constructor'
  - '@azure/cosmos.Databases.query'
  - '@azure/cosmos.Databases.readAll'
  langs:
  - typeScript
  type: class
  summary: <span data-ttu-id="dfe09-101">Operaciones para crear nuevas bases de datos y todas las bases de datos de lectura/consulta</span><span class="sxs-lookup"><span data-stu-id="dfe09-101">Operations for creating new databases, and reading/querying all databases</span></span>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.create'
  name: create
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="dfe09-102">Envíe una solicitud para crear una base de datos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-102">Send a request for creating a database.</span></span>

    <span data-ttu-id="dfe09-103">Una base de datos administra los usuarios, permisos y un conjunto de contenedores.</span><span class="sxs-lookup"><span data-stu-id="dfe09-103">A database manages users, permissions and a set of containers.</span></span>

    <span data-ttu-id="dfe09-104">Cada cuenta de base de datos de Azure Cosmos DB es capaz de admitir varias independientes con el nombre de las bases de datos, con la base de datos que se va a un contenedor lógico para los datos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-104">Each Azure Cosmos DB Database Account is able to support multiple independent named databases, with the database being the logical container for data.</span></span>


    <span data-ttu-id="dfe09-105">Cada base de datos consta de uno o varios contenedores, cada uno de los cuales a su vez contienen uno o varios documentos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-105">Each Database consists of one or more containers, each of which in turn contain one or more documents.</span></span> <span data-ttu-id="dfe09-106">Puesto que las bases de datos son un un recurso administrativo, la clave maestra de servicio será necesaria con el fin de obtener acceso y completar correctamente todas las acciones mediante las API de usuario.</span><span class="sxs-lookup"><span data-stu-id="dfe09-106">Since databases are an an administrative resource, the Service Master Key will be required in order to access and successfully complete any action using the User APIs.</span></span>
  syntax:
    content: 'function create(body: DatabaseDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.DatabaseDefinition'
      description: <span data-ttu-id="dfe09-107">El <xref:DatabaseDefinition> que representa el <xref:Database> a crearse.</span><span class="sxs-lookup"><span data-stu-id="dfe09-107">The <xref:DatabaseDefinition> that represents the <xref:Database> to be created.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        <span data-ttu-id="dfe09-108">Use esta opción para establecer opciones como el tamaño de página de respuesta, los tokens de continuación, etcetera.</span><span class="sxs-lookup"><span data-stu-id="dfe09-108">Use to set options like response page size, continuation tokens, etc.</span></span>
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.createIfNotExists'
  name: createIfNotExists
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="dfe09-109">Compruebe si existe una base de datos, y si no, crearla.</span><span class="sxs-lookup"><span data-stu-id="dfe09-109">Check if a database exists, and if it doesn't, create it.</span></span>

    <span data-ttu-id="dfe09-110">Esto hará que una operación de lectura en función del identificador en el `body`, a continuación, si no se encuentra, una operación de creación.</span><span class="sxs-lookup"><span data-stu-id="dfe09-110">This will make a read operation based on the id in the `body`, then if it is not found, a create operation.</span></span>

    <span data-ttu-id="dfe09-111">Una base de datos administra los usuarios, permisos y un conjunto de contenedores.</span><span class="sxs-lookup"><span data-stu-id="dfe09-111">A database manages users, permissions and a set of containers.</span></span>

    <span data-ttu-id="dfe09-112">Cada cuenta de base de datos de Azure Cosmos DB es capaz de admitir varias independientes con el nombre de las bases de datos, con la base de datos que se va a un contenedor lógico para los datos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-112">Each Azure Cosmos DB Database Account is able to support multiple independent named databases, with the database being the logical container for data.</span></span>


    <span data-ttu-id="dfe09-113">Cada base de datos consta de uno o varios contenedores, cada uno de los cuales a su vez contienen uno o varios documentos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-113">Each Database consists of one or more containers, each of which in turn contain one or more documents.</span></span> <span data-ttu-id="dfe09-114">Puesto que las bases de datos son un un recurso administrativo, la clave maestra de servicio será necesaria con el fin de obtener acceso y completar correctamente todas las acciones mediante las API de usuario.</span><span class="sxs-lookup"><span data-stu-id="dfe09-114">Since databases are an an administrative resource, the Service Master Key will be required in order to access and successfully complete any action using the User APIs.</span></span>
  syntax:
    content: 'function createIfNotExists(body: DatabaseDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.DatabaseDefinition'
      description: <span data-ttu-id="dfe09-115">El <xref:DatabaseDefinition> que representa el <xref:Database> a crearse.</span><span class="sxs-lookup"><span data-stu-id="dfe09-115">The <xref:DatabaseDefinition> that represents the <xref:Database> to be created.</span></span>
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.DatabaseResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.constructor'
  name: Databases
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new Databases(client: CosmosClient)'
    parameters:
    - id: client
      type:
      - '@azure/cosmos.CosmosClient'
      description: ''
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.query'
  name: query
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="dfe09-116">Consulta todas las bases de datos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-116">Queries all databases.</span></span>
  syntax:
    content: 'function query(query: string | SqlQuerySpec, options?: FeedOptions)'
    parameters:
    - id: query
      type:
      - string | @azure/cosmos.SqlQuerySpec
      description: <span data-ttu-id="dfe09-117">Configuración de consulta de la operación.</span><span class="sxs-lookup"><span data-stu-id="dfe09-117">Query configuration for the operation.</span></span> <span data-ttu-id="dfe09-118">Consulte <xref:SqlQuerySpec> para obtener más información sobre cómo configurar una consulta.</span><span class="sxs-lookup"><span data-stu-id="dfe09-118">See <xref:SqlQuerySpec> for more info on how to configure a query.</span></span>
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: <span data-ttu-id="dfe09-119">Use esta opción para establecer opciones como el tamaño de página de respuesta, los tokens de continuación, etcetera.</span><span class="sxs-lookup"><span data-stu-id="dfe09-119">Use to set options like response page size, continuation tokens, etc.</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.DatabaseDefinition>'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.Databases.readAll'
  name: readAll
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="dfe09-120">Lee todas las bases de datos.</span><span class="sxs-lookup"><span data-stu-id="dfe09-120">Reads all databases.</span></span>
  syntax:
    content: 'function readAll(options?: FeedOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.FeedOptions'
      description: <span data-ttu-id="dfe09-121">Use esta opción para establecer opciones como el tamaño de página de respuesta, los tokens de continuación, etcetera.</span><span class="sxs-lookup"><span data-stu-id="dfe09-121">Use to set options like response page size, continuation tokens, etc.</span></span>
      optional: true
    return:
      type:
      - '@azure/cosmos.QueryIterator<@azure/cosmos.DatabaseDefinition>'
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.CosmosClient'
  spec.typeScript:
  - name: CosmosClient
    fullName: CosmosClient
    uid: '@azure/cosmos.CosmosClient'
- uid: '@azure/cosmos.DatabaseDefinition'
  spec.typeScript:
  - name: DatabaseDefinition
    fullName: DatabaseDefinition
    uid: '@azure/cosmos.DatabaseDefinition'
- uid: '@azure/cosmos.RequestOptions'
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.DatabaseResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DatabaseResponse
    fullName: DatabaseResponse
    uid: '@azure/cosmos.DatabaseResponse'
  - name: '>'
    fullName: '>'
- uid: string | @azure/cosmos.SqlQuerySpec
  spec.typeScript:
  - name: 'string | '
    fullName: 'string | '
  - name: SqlQuerySpec
    fullName: SqlQuerySpec
    uid: '@azure/cosmos.SqlQuerySpec'
- uid: '@azure/cosmos.FeedOptions'
  spec.typeScript:
  - name: FeedOptions
    fullName: FeedOptions
    uid: '@azure/cosmos.FeedOptions'
- uid: '@azure/cosmos.QueryIterator<@azure/cosmos.DatabaseDefinition>'
  spec.typeScript:
  - name: QueryIterator
    fullName: QueryIterator
    uid: '@azure/cosmos.QueryIterator'
  - name: <
    fullName: <
  - name: DatabaseDefinition
    fullName: DatabaseDefinition
    uid: '@azure/cosmos.DatabaseDefinition'
  - name: '>'
    fullName: '>'
