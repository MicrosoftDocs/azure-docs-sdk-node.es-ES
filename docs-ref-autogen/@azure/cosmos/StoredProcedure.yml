### YamlMime:UniversalReference
ms.openlocfilehash: 9571cdeab6ad6fdbb2367549bf1e42167cc9deac
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52029332"
items:
- uid: '@azure/cosmos.StoredProcedure'
  name: StoredProcedure
  fullName: StoredProcedure
  children:
  - '@azure/cosmos.StoredProcedure.container'
  - '@azure/cosmos.StoredProcedure.delete'
  - '@azure/cosmos.StoredProcedure.execute'
  - '@azure/cosmos.StoredProcedure.execute_1'
  - '@azure/cosmos.StoredProcedure.id'
  - '@azure/cosmos.StoredProcedure.read'
  - '@azure/cosmos.StoredProcedure.replace'
  - '@azure/cosmos.StoredProcedure.url'
  langs:
  - typeScript
  type: class
  summary: >
    Operaciones para leer, reemplazar, eliminar o ejecutar un procedimiento almacenado existente, específico por Id. de. Para las operaciones de creación, upsert, lea todos o consultar los procedimientos almacenados,
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.container'
  name: container
  fullName: container
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'container: Container'
    return:
      type:
      - '@azure/cosmos.Container'
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.delete'
  name: delete(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Eliminar el determinado <xref:StoredProcedure>.
  syntax:
    content: 'function delete(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.StoredProcedureResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.execute'
  name: execute(any[], RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Ejecute el determinado <xref:StoredProcedure>.
  syntax:
    content: 'function execute(params?: any[], options?: RequestOptions)'
    parameters:
    - id: params
      type:
      - any[]
      description: Matriz de parámetros que se pasan como argumentos para el determinado <xref:StoredProcedure>.
      optional: true
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Opciones adicionales, como la clave de partición para invocar el <xref:StoredProcedure> en.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<any, @azure/cosmos.StoredProcedure>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.execute_1'
  name: execute(any[], RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Ejecute el determinado <xref:StoredProcedure>.

    El tipo especificado, T, no se aplica por el cliente.

    Asegúrese de validar la respuesta de las coincidencias de procedimiento almacenado, el tipo de T, proporciona.
  syntax:
    content: 'function execute<T>(params?: any[], options?: RequestOptions)'
    parameters:
    - id: params
      type:
      - any[]
      description: Matriz de parámetros que se pasan como argumentos para el determinado <xref:StoredProcedure>.
      optional: true
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: >
        Opciones adicionales, como la clave de partición para invocar el <xref:StoredProcedure> en.
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.CosmosResponse<T, @azure/cosmos.StoredProcedure>>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.id'
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.read'
  name: read(RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Leer el <xref:StoredProcedureDefinition> para la dada <xref:StoredProcedure>.
  syntax:
    content: 'function read(options?: RequestOptions)'
    parameters:
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.StoredProcedureResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.replace'
  name: replace(StoredProcedureDefinition, RequestOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Reemplace el determinado <xref:StoredProcedure> con los valores especificados <xref:StoredProcedureDefinition>.
  syntax:
    content: 'function replace(body: StoredProcedureDefinition, options?: RequestOptions)'
    parameters:
    - id: body
      type:
      - '@azure/cosmos.StoredProcedureDefinition'
      description: Especificado <xref:StoredProcedureDefinition> para reemplazar la definición existente.
    - id: options
      type:
      - '@azure/cosmos.RequestOptions'
      description: "\n"
      optional: true
    return:
      type:
      - Promise<@azure/cosmos.StoredProcedureResponse>
  package: '@azure/cosmos'
- uid: '@azure/cosmos.StoredProcedure.url'
  name: url
  fullName: url
  children: []
  langs:
  - typeScript
  type: property
  summary: Devuelve una dirección URL de la referencia al recurso. Se utiliza para la vinculación de permisos.
  syntax:
    content: 'url: string'
    return:
      type:
      - string
  package: '@azure/cosmos'
references:
- uid: '@azure/cosmos.Container'
  name: Container
  spec.typeScript:
  - name: Container
    fullName: Container
    uid: '@azure/cosmos.Container'
- uid: '@azure/cosmos.RequestOptions'
  name: RequestOptions
  spec.typeScript:
  - name: RequestOptions
    fullName: RequestOptions
    uid: '@azure/cosmos.RequestOptions'
- uid: Promise<@azure/cosmos.StoredProcedureResponse>
  name: StoredProcedureResponse>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: StoredProcedureResponse
    fullName: StoredProcedureResponse
    uid: '@azure/cosmos.StoredProcedureResponse'
  - name: '>'
    fullName: '>'
- uid: Promise<@azure/cosmos.CosmosResponse<any, @azure/cosmos.StoredProcedure>>
  name: StoredProcedure>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: '<any, '
    fullName: '<any, '
  - name: StoredProcedure
    fullName: StoredProcedure
    uid: '@azure/cosmos.StoredProcedure'
  - name: '>>'
    fullName: '>>'
- uid: Promise<@azure/cosmos.CosmosResponse<T, @azure/cosmos.StoredProcedure>>
  name: StoredProcedure>>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CosmosResponse
    fullName: CosmosResponse
    uid: '@azure/cosmos.CosmosResponse'
  - name: '<T, '
    fullName: '<T, '
  - name: StoredProcedure
    fullName: StoredProcedure
    uid: '@azure/cosmos.StoredProcedure'
  - name: '>>'
    fullName: '>>'
- uid: '@azure/cosmos.StoredProcedureDefinition'
  name: StoredProcedureDefinition
  spec.typeScript:
  - name: StoredProcedureDefinition
    fullName: StoredProcedureDefinition
    uid: '@azure/cosmos.StoredProcedureDefinition'
