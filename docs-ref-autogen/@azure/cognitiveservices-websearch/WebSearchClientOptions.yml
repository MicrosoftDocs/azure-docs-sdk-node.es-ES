### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions'
    name: WebSearchClientOptions
    fullName: WebSearchClientOptions
    children:
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.clientRequestIdHeaderName'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.deserializationContentTypes'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.endpoint'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.generateClientRequestIdHeader'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.httpClient'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.httpPipelineLogger'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.noRetryPolicy'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.proxySettings'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.requestPolicyFactories'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.rpRegistrationRetryTimeout'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.userAgent'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.userAgentHeaderName'
      - '@azure/cognitiveservices-websearch.WebSearchClientOptions.withCredentials'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: ServiceClientOptions
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.clientRequestIdHeaderName'
    name: clientRequestIdHeaderName
    fullName: clientRequestIdHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Si se especifica, se agregará un GenerateRequestIdPolicy a la canalización HTTP que se agregará un encabezado a todas las solicitudes salientes con este nombre de encabezado y un UUID aleatorio como el identificador de solicitud.'
    optional: true
    syntax:
      content: 'clientRequestIdHeaderName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.deserializationContentTypes'
    name: deserializationContentTypes
    fullName: deserializationContentTypes
    children: []
    langs:
      - typeScript
    type: property
    summary: Los tipos de contenido que se asociarán con la serialización de JSON o XML.
    optional: true
    syntax:
      content: 'deserializationContentTypes?: DeserializationContentTypes'
      return:
        type:
          - DeserializationContentTypes
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'endpoint?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.generateClientRequestIdHeader'
    name: generateClientRequestIdHeader
    fullName: generateClientRequestIdHeader
    children: []
    langs:
      - typeScript
    type: property
    summary: Si se debe o no generar a un cliente solicitar el encabezado de Id. para cada solicitud HTTP.
    optional: true
    syntax:
      content: 'generateClientRequestIdHeader?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.httpClient'
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: HttpClient que se usará para enviar solicitudes HTTP.
    optional: true
    syntax:
      content: 'httpClient?: HttpClient'
      return:
        type:
          - HttpClient
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.httpPipelineLogger'
    name: httpPipelineLogger
    fullName: httpPipelineLogger
    children: []
    langs:
      - typeScript
    type: property
    summary: HttpPipelineLogger en el que se puede usar para depurar RequestPolicies dentro de la canalización HTTP.
    optional: true
    syntax:
      content: 'httpPipelineLogger?: HttpPipelineLogger'
      return:
        type:
          - HttpPipelineLogger
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.noRetryPolicy'
    name: noRetryPolicy
    fullName: noRetryPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Si establece en true, desactive la directiva de reintento de forma predeterminada.'
    optional: true
    syntax:
      content: 'noRetryPolicy?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.proxySettings'
    name: proxySettings
    fullName: proxySettings
    children: []
    langs:
      - typeScript
    type: property
    summary: Configuración de proxy que se usará para cada solicitud HTTP (sólo en Node.js).
    optional: true
    syntax:
      content: 'proxySettings?: ProxySettings'
      return:
        type:
          - ProxySettings
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.requestPolicyFactories'
    name: requestPolicyFactories
    fullName: requestPolicyFactories
    children: []
    langs:
      - typeScript
    type: property
    summary: Una matriz de los generadores que se llama para crear la canalización de RequestPolicy usada para enviar una solicitud HTTP en la conexión o una función que toma el defaultRequestPolicyFactories y devuelve el requestPolicyFactories que va a utilizar.
    optional: true
    syntax:
      content: 'requestPolicyFactories?: RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
      return:
        type:
          - 'RequestPolicyFactory[] | (defaultRequestPolicyFactories: RequestPolicyFactory[]) => void | Object[]'
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.rpRegistrationRetryTimeout'
    name: rpRegistrationRetryTimeout
    fullName: rpRegistrationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: Obtiene o establece el tiempo de espera de reintento en segundos para AutomaticRPRegistration. El valor predeterminado es 30.
    optional: true
    syntax:
      content: 'rpRegistrationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.userAgent'
    name: userAgent
    fullName: userAgent
    children: []
    langs:
      - typeScript
    type: property
    summary: La cadena debe establecerse en el encabezado de telemetría al enviar la solicitud o una función que toma la cadena de agente de usuario predeterminada y devuelve la cadena user-agent que se usará.
    optional: true
    syntax:
      content: 'userAgent?: string | (defaultUserAgent: string) => string'
      return:
        type:
          - 'string | (defaultUserAgent: string) => string'
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.userAgentHeaderName'
    name: userAgentHeaderName
    fullName: userAgentHeaderName
    children: []
    langs:
      - typeScript
    type: property
    summary: 'El nombre del encabezado que se usará para el encabezado de telemetría al enviar la solicitud. Si no se especifica, se usará "User-Agent" cuando se ejecuta en Node.js y "x-ms-command-name" se usará cuando se ejecuta en un explorador.'
    optional: true
    syntax:
      content: 'userAgentHeaderName?: string | (defaultUserAgentHeaderName: string) => string'
      return:
        type:
          - 'string | (defaultUserAgentHeaderName: string) => string'
    package: '@azure/cognitiveservices-websearch'
  - uid: '@azure/cognitiveservices-websearch.WebSearchClientOptions.withCredentials'
    name: withCredentials
    fullName: withCredentials
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Si se debe incluir las credenciales en las solicitudes CORS en el explorador.
      Vea https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials para obtener más información.
    optional: true
    syntax:
      content: 'withCredentials?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/cognitiveservices-websearch'