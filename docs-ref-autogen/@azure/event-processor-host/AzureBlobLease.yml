### YamlMime:UniversalReference
items:
  - uid: '@azure/event-processor-host.AzureBlobLease'
    name: AzureBlobLease
    fullName: AzureBlobLease
    children:
      - '@azure/event-processor-host.AzureBlobLease.constructor'
      - '@azure/event-processor-host.AzureBlobLease.blob'
      - '@azure/event-processor-host.AzureBlobLease.createFromPartitionId'
      - '@azure/event-processor-host.AzureBlobLease.epoch'
      - '@azure/event-processor-host.AzureBlobLease.getInfo'
      - '@azure/event-processor-host.AzureBlobLease.incrementEpoch'
      - '@azure/event-processor-host.AzureBlobLease.isOwned'
      - '@azure/event-processor-host.AzureBlobLease.isOwnedBy'
      - '@azure/event-processor-host.AzureBlobLease.offset'
      - '@azure/event-processor-host.AzureBlobLease.owner'
      - '@azure/event-processor-host.AzureBlobLease.partitionId'
      - '@azure/event-processor-host.AzureBlobLease.sequenceNumber'
      - '@azure/event-processor-host.AzureBlobLease.serialize'
      - '@azure/event-processor-host.AzureBlobLease.token'
    langs:
      - typeScript
    type: class
    summary: Describe la concesión que se usa con un Blob de Azure para almacenar la información de punto de comprobación.
    extends:
      name: '@azure/event-processor-host.CompleteLease'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.constructor'
    name: AzureBlobLease(AzureBlobLeaseInfo)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new AzureBlobLease(info: AzureBlobLeaseInfo)'
      parameters:
        - id: info
          type:
            - '@azure/event-processor-host.AzureBlobLeaseInfo'
          description: ''
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.blob'
    name: blob
    fullName: blob
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Blob {AzureBlob} referencia al blob de azure.'
    syntax:
      content: 'blob: AzureBlob'
      return:
        type:
          - AzureBlob
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.createFromPartitionId'
    name: 'createFromPartitionId(string, AzureBlob)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crea una concesión para el valor de partitionId determinado.
    syntax:
      content: 'static function createFromPartitionId(id: string, blob: AzureBlob)'
      parameters:
        - id: id
          type:
            - string
          description: El valor de partitionId para el que debe crearse la concesión.
        - id: blob
          type:
            - AzureBlob
          description: La referencia de blob de azure
      return:
        type:
          - '@azure/event-processor-host.AzureBlobLease'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.epoch'
    name: epoch
    fullName: epoch
    children: []
    langs:
      - typeScript
    type: property
    summary: 'época {number} el epoch(time) de la concesión, que es un valor que se puede usar para determinar el propietario de una partición entre los nodos de competencia más reciente.'
    syntax:
      content: 'epoch: number'
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.getInfo'
    name: getInfo()
    children: []
    type: method
    langs:
      - typeScript
    summary: Obtiene la información de concesión.
    syntax:
      content: function getInfo()
      parameters: []
      return:
        type:
          - '@azure/event-processor-host.LeaseInfo'
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.incrementEpoch'
    name: incrementEpoch()
    children: []
    type: method
    langs:
      - typeScript
    summary: El valor de tiempo se incrementa en 1.
    syntax:
      content: function incrementEpoch()
      parameters: []
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.isOwned'
    name: isOwned
    fullName: isOwned
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Si se va a isOwned {booleano} indica que es propiedad de la concesión. `true` Si es propiedad de alguien; `false` en caso contrario.'
    syntax:
      content: 'isOwned: boolean'
      return:
        type:
          - boolean
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.isOwnedBy'
    name: isOwnedBy(string)
    children: []
    type: method
    langs:
      - typeScript
    summary: Compara possibleOwner con this.owner
    syntax:
      content: 'function isOwnedBy(possibleOwner: string)'
      parameters:
        - id: possibleOwner
          type:
            - string
          description: Para comprobar el nombre del propietario.
      return:
        type:
          - boolean
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.offset'
    name: offset
    fullName: offset
    children: []
    langs:
      - typeScript
    type: property
    summary: '{cadena} desplazamiento el desplazamiento del evento que se comprobará.'
    optional: true
    syntax:
      content: 'offset?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.owner'
    name: owner
    fullName: owner
    children: []
    langs:
      - typeScript
    type: property
    summary: 'propietario de {cadena} el propietario del host para la partición.'
    syntax:
      content: 'owner: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.partitionId'
    name: partitionId
    fullName: partitionId
    children: []
    langs:
      - typeScript
    type: property
    summary: '{cadena} partitionId el partitionId asociado para que se mantiene la concesión.'
    syntax:
      content: 'partitionId: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.sequenceNumber'
    name: sequenceNumber
    fullName: sequenceNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: '{cadena} sequenceNumber del evento que se comprobará el número de secuencia.'
    syntax:
      content: 'sequenceNumber: number'
      return:
        type:
          - number
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.serialize'
    name: serialize()
    children: []
    type: method
    langs:
      - typeScript
    summary: Serializa la información de concesión.
    syntax:
      content: function serialize()
      parameters: []
      return:
        type:
          - string
    package: '@azure/event-processor-host'
  - uid: '@azure/event-processor-host.AzureBlobLease.token'
    name: token
    fullName: token
    children: []
    langs:
      - typeScript
    type: property
    summary: 'token {cadena} el token de concesión que administra la simultaneidad entre hosts. Puede usar este token para garantizar el acceso solo a cualquier recurso que necesita la EPH.'
    syntax:
      content: 'token: string'
      return:
        type:
          - string
    package: '@azure/event-processor-host'
references:
  - uid: '@azure/event-processor-host.CompleteLease'
    name: CompleteLease
    spec.typeScript:
      - name: CompleteLease
        fullName: CompleteLease
        uid: '@azure/event-processor-host.CompleteLease'
  - uid: '@azure/event-processor-host.AzureBlobLeaseInfo'
    name: AzureBlobLeaseInfo
    spec.typeScript:
      - name: AzureBlobLeaseInfo
        fullName: AzureBlobLeaseInfo
        uid: '@azure/event-processor-host.AzureBlobLeaseInfo'
  - uid: '@azure/event-processor-host.LeaseInfo'
    name: LeaseInfo
    spec.typeScript:
      - name: LeaseInfo
        fullName: LeaseInfo
        uid: '@azure/event-processor-host.LeaseInfo'
  - uid: '@azure/event-processor-host.AzureBlobLease'
    name: AzureBlobLease
    spec.typeScript:
      - name: AzureBlobLease
        fullName: AzureBlobLease
        uid: '@azure/event-processor-host.AzureBlobLease'