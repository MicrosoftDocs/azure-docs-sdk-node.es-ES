### YamlMime:UniversalReference
ms.openlocfilehash: 6ba5ac3c693177f8af42e6a22afe2d7805016620
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52095630"
items:
- uid: '@azure/event-processor-host.EventProcessorHost'
  name: EventProcessorHost
  fullName: EventProcessorHost
  children:
  - '@azure/event-processor-host.EventProcessorHost.consumerGroup'
  - '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentials'
  - '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createFromConnectionString'
  - '@azure/event-processor-host.EventProcessorHost.createFromConnectionStringWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionString'
  - '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createFromTokenProvider'
  - '@azure/event-processor-host.EventProcessorHost.createFromTokenProviderWithCustomCheckpointAndLeaseManager'
  - '@azure/event-processor-host.EventProcessorHost.createHostName'
  - '@azure/event-processor-host.EventProcessorHost.constructor'
  - '@azure/event-processor-host.EventProcessorHost.getHubRuntimeInformation'
  - '@azure/event-processor-host.EventProcessorHost.getPartitionIds'
  - '@azure/event-processor-host.EventProcessorHost.getPartitionInformation'
  - '@azure/event-processor-host.EventProcessorHost.hostName'
  - '@azure/event-processor-host.EventProcessorHost.receivingFromPartitions'
  - '@azure/event-processor-host.EventProcessorHost.start'
  - '@azure/event-processor-host.EventProcessorHost.stop'
  langs:
  - typeScript
  type: class
  summary: Describe al Host del procesador de eventos para procesar los eventos desde un centro de eventos.
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.consumerGroup'
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: Proporciona al consumidor en nombre de grupo para el host del procesador de eventos.
  syntax:
    content: 'consumerGroup: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentials'
  name: createFromAadTokenCredentials(string, string, string, string, string, ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost de credenciales de token de AAD.
  syntax:
    content: 'static function createFromAadTokenCredentials(hostName: string, storageConnectionString: string, storageContainerName: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadena de conexión a la cuenta de almacenamiento de Azure usada para las concesiones y los puntos de comprobación. Ejemplo DefaultEndpointsProtocol = https; AccountName = < nombre de cuenta >; AccountKey = < clave de cuenta >; EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: Nombre de contenedor de Azure Storage para su uso por el Administrador de concesión y el punto de comprobación integrado.
    - id: namespace
      type:
      - string
      description: >-
        Nombre de dominio completo para Event Hubs.

        Ejemplo: "{your-sb-espacio de nombres}. servicebus.windows .net"
    - id: eventHubPath
      type:
      - string
      description: El nombre del centro de eventos.
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: 'Las credenciales de Token de AAD. Puede ser uno de los siguientes: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.'
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager'
  name: createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager(string, string, string, ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, CheckpointManager, LeaseManager, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost de credenciales de token de AAD con el Administrador de punto de control especificado y el Administrador de concesiones.
  syntax:
    content: 'static function createFromAadTokenCredentialsWithCustomCheckpointAndLeaseManager(hostName: string, namespace: string, eventHubPath: string, credentials: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: namespace
      type:
      - string
      description: >-
        Nombre de dominio completo para Event Hubs.

        Ejemplo: "{your-sb-espacio de nombres}. servicebus.windows .net"
    - id: eventHubPath
      type:
      - string
      description: El nombre del centro de eventos.
    - id: credentials
      type:
      - ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials
      description: 'Las credenciales de Token de AAD. Puede ser uno de los siguientes: ApplicationTokenCredentials | UserTokenCredentials | DeviceTokenCredentials | MSITokenCredentials.'
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: Un administrador para administrar los puntos de control.
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: Un administrador para administrar las concesiones.
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromConnectionString'
  name: createFromConnectionString(string, string, string, string, FromConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost desde la cadena de conexión del centro de eventos.
  syntax:
    content: 'static function createFromConnectionString(hostName: string, storageConnectionString: string, storageContainerName: string, eventHubConnectionString: string, options?: FromConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadena de conexión a la cuenta de almacenamiento de Azure usada para las concesiones y los puntos de comprobación. Ejemplo DefaultEndpointsProtocol = https; AccountName = < nombre de cuenta >; AccountKey = < clave de cuenta >; EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: Nombre de contenedor de Azure Storage para su uso por el Administrador de concesión y el punto de comprobación integrado.
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        Cadena de conexión para recibir desde el centro de eventos.

        Ejemplo: ' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'
    - id: options
      type:
      - '@azure/event-processor-host.FromConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromConnectionStringWithCustomCheckpointAndLeaseManager'
  name: createFromConnectionStringWithCustomCheckpointAndLeaseManager(string, string, CheckpointManager, LeaseManager, FromConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost desde la cadena de conexión del centro de eventos con el Administrador de punto de control proporcionados y el Administrador de concesiones.
  syntax:
    content: 'static function createFromConnectionStringWithCustomCheckpointAndLeaseManager(hostName: string, eventHubConnectionString: string, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: eventHubConnectionString
      type:
      - string
      description: >-
        Cadena de conexión para recibir desde el centro de eventos.

        Ejemplo: ' Endpoint=sb://my-servicebus-namespace.servicebus.windows.net/; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: Un administrador para administrar los puntos de control.
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: Un administrador para administrar las concesiones.
    - id: options
      type:
      - '@azure/event-processor-host.FromConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionString'
  name: createFromIotHubConnectionString(string, string, string, string, FromIotHubConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost desde la cadena de conexión de IotHub.
  syntax:
    content: 'static function createFromIotHubConnectionString(hostName: string, storageConnectionString: string, storageContainerName: string, iotHubConnectionString: string, options?: FromIotHubConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadena de conexión a la cuenta de almacenamiento de Azure usada para las concesiones y los puntos de comprobación. Ejemplo DefaultEndpointsProtocol = https; AccountName = < nombre de cuenta >; AccountKey = < clave de cuenta >; EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: Nombre de contenedor de Azure Storage para su uso por el Administrador de concesión y el punto de comprobación integrado.
    - id: iotHubConnectionString
      type:
      - string
      description: >-
        Cadena de conexión de IotHub.

        Ejemplo: ' Punto de conexión = iot-host-name; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'
    - id: options
      type:
      - '@azure/event-processor-host.FromIotHubConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-processor-host.EventProcessorHost>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager'
  name: createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager(string, string, CheckpointManager, LeaseManager, FromIotHubConnectionStringOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost desde la cadena de conexión de IotHub con el Administrador de punto de control especificado y el Administrador de concesiones.
  syntax:
    content: 'static function createFromIotHubConnectionStringWithCustomCheckpointAndLeaseManager(hostName: string, iotHubConnectionString: string, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromIotHubConnectionStringOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: iotHubConnectionString
      type:
      - string
      description: >-
        Cadena de conexión de IotHub.

        Ejemplo: ' Punto de conexión = iot-host-name; SharedAccessKeyName = my-SA-name; SharedAccessKey = my-SA-key'
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: Un administrador para administrar los puntos de control.
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: Un administrador para administrar las concesiones.
    - id: options
      type:
      - '@azure/event-processor-host.FromIotHubConnectionStringOptions'
      description: ''
      optional: true
    return:
      type:
      - Promise<@azure/event-processor-host.EventProcessorHost>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromTokenProvider'
  name: createFromTokenProvider(string, string, string, string, string, TokenProvider, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost desde un TokenProvider.
  syntax:
    content: 'static function createFromTokenProvider(hostName: string, storageConnectionString: string, storageContainerName: string, namespace: string, eventHubPath: string, tokenProvider: TokenProvider, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: storageConnectionString
      type:
      - string
      description: Cadena de conexión a la cuenta de almacenamiento de Azure usada para las concesiones y los puntos de comprobación. Ejemplo DefaultEndpointsProtocol = https; AccountName = < nombre de cuenta >; AccountKey = < clave de cuenta >; EndpointSuffix=core.windows.net
    - id: storageContainerName
      type:
      - string
      description: Nombre de contenedor de Azure Storage para su uso por el Administrador de concesión y el punto de comprobación integrado.
    - id: namespace
      type:
      - string
      description: >-
        Nombre de dominio completo para Event Hubs.

        Ejemplo: "{your-sb-espacio de nombres}. servicebus.windows .net"
    - id: eventHubPath
      type:
      - string
      description: El nombre del centro de eventos.
    - id: tokenProvider
      type:
      - TokenProvider
      description: El proveedor de tokens que implementa la interfaz TokenProvider.
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createFromTokenProviderWithCustomCheckpointAndLeaseManager'
  name: createFromTokenProviderWithCustomCheckpointAndLeaseManager(string, string, string, TokenProvider, CheckpointManager, LeaseManager, FromTokenProviderOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea una instancia de EventProcessorHost desde un TokenProvider con el Administrador de punto de control proporcionados y el Administrador de concesiones.
  syntax:
    content: 'static function createFromTokenProviderWithCustomCheckpointAndLeaseManager(hostName: string, namespace: string, eventHubPath: string, tokenProvider: TokenProvider, checkpointManager: CheckpointManager, leaseManager: LeaseManager, options?: FromTokenProviderOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: namespace
      type:
      - string
      description: >-
        Nombre de dominio completo para Event Hubs.

        Ejemplo: "{your-sb-espacio de nombres}. servicebus.windows .net"
    - id: eventHubPath
      type:
      - string
      description: El nombre del centro de eventos.
    - id: tokenProvider
      type:
      - TokenProvider
      description: El proveedor de tokens que implementa la interfaz TokenProvider.
    - id: checkpointManager
      type:
      - '@azure/event-processor-host.CheckpointManager'
      description: Un administrador para administrar los puntos de control.
    - id: leaseManager
      type:
      - '@azure/event-processor-host.LeaseManager'
      description: Un administrador para administrar las concesiones.
    - id: options
      type:
      - '@azure/event-processor-host.FromTokenProviderOptions'
      description: ''
      optional: true
    return:
      type:
      - '@azure/event-processor-host.EventProcessorHost'
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.createHostName'
  name: createHostName(undefined | string)
  children: []
  type: method
  langs:
  - typeScript
  summary: Método de conveniencia para generar el nombre de host único.
  syntax:
    content: 'static function createHostName(prefix?: undefined | string)'
    parameters:
    - id: prefix
      type:
      - undefined | string
      description: ''
      optional: true
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.constructor'
  name: EventProcessorHost(string, EventProcessorHostOptions)
  children: []
  type: constructor
  langs:
  - typeScript
  summary: Crea un nuevo host para procesar eventos desde un centro de eventos.
  syntax:
    content: 'new EventProcessorHost(hostName: string, options?: EventProcessorHostOptions)'
    parameters:
    - id: hostName
      type:
      - string
      description: >-
        Nombre del host de procesador. DEBE SER ÚNICO.

        Recomienda incluyendo un Guid o un prefijo con un guid para garantizar la unicidad. Puede usar `EventProcessorHost.createHostName("your-prefix")`; Valor predeterminado: `js-host-${uuid()}`.
    - id: options
      type:
      - '@azure/event-processor-host.EventProcessorHostOptions'
      description: ''
      optional: true
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.getHubRuntimeInformation'
  name: getHubRuntimeInformation()
  children: []
  type: method
  langs:
  - typeScript
  summary: Proporciona la información de tiempo de ejecución de eventhub.
  syntax:
    content: function getHubRuntimeInformation()
    parameters: []
    return:
      type:
      - Promise<EventHubRuntimeInformation>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.getPartitionIds'
  name: getPartitionIds()
  children: []
  type: method
  langs:
  - typeScript
  summary: Proporciona una matriz de partitionIds.
  syntax:
    content: function getPartitionIds()
    parameters: []
    return:
      type:
      - Promise<string[]>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.getPartitionInformation'
  name: getPartitionInformation(string | number)
  children: []
  type: method
  langs:
  - typeScript
  summary: Proporciona información acerca de la partición especificada.
  syntax:
    content: 'function getPartitionInformation(partitionId: string | number)'
    parameters:
    - id: partitionId
      type:
      - string | number
      description: >
        Id. de partición para la partición que la información es necesaria.
    return:
      type:
      - Promise<EventHubPartitionRuntimeInformation>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.hostName'
  name: hostName
  fullName: hostName
  children: []
  langs:
  - typeScript
  type: property
  summary: Proporciona el nombre de host para el host de procesador de eventos.
  syntax:
    content: 'hostName: string'
    return:
      type:
      - string
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.receivingFromPartitions'
  name: receivingFromPartitions
  fullName: receivingFromPartitions
  children: []
  langs:
  - typeScript
  type: property
  summary: >
    Proporciona una lista de particiones de que el EPH actualmente está recibiendo mensajes.

    El EPH intentará obtener concesiones para varias particiones durante cada análisis que se produce una vez cada concesión (configurado) renovar a segundos. El número de instancias EPH que se ejecutan al mismo tiempo para recibir mensajes del mismo grupo de consumidores dentro de un centro de eventos también influye en el número de particiones que esta instancia de EPH reciba activamente los mensajes de.
  syntax:
    content: 'receivingFromPartitions: string[]'
    return:
      type:
      - string[]
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.start'
  name: start(OnReceivedMessage, OnReceivedError)
  children: []
  type: method
  langs:
  - typeScript
  summary: Event processor host, obtener la lista de particiones, se inicia e intentar captar las concesiones para cada concesión correcta, se obtienen los detalles del blob e iniciar un receptor en el punto donde la dejó.
  syntax:
    content: 'function start(onMessage: OnReceivedMessage, onError: OnReceivedError)'
    parameters:
    - id: onMessage
      type:
      - '@azure/event-processor-host.OnReceivedMessage'
      description: ''
    - id: onError
      type:
      - '@azure/event-processor-host.OnReceivedError'
      description: ''
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.EventProcessorHost.stop'
  name: stop()
  children: []
  type: method
  langs:
  - typeScript
  summary: Detiene el EventProcessorHost del procesamiento de mensajes.
  syntax:
    content: function stop()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
references:
- uid: '@azure/event-processor-host.EventProcessorHostOptions'
  name: EventProcessorHostOptions
  spec.typeScript:
  - name: EventProcessorHostOptions
    fullName: EventProcessorHostOptions
    uid: '@azure/event-processor-host.EventProcessorHostOptions'
- uid: '@azure/event-processor-host.OnReceivedMessage'
  name: OnReceivedMessage
  spec.typeScript:
  - name: OnReceivedMessage
    fullName: OnReceivedMessage
    uid: '@azure/event-processor-host.OnReceivedMessage'
- uid: '@azure/event-processor-host.OnReceivedError'
  name: OnReceivedError
  spec.typeScript:
  - name: OnReceivedError
    fullName: OnReceivedError
    uid: '@azure/event-processor-host.OnReceivedError'
- uid: '@azure/event-processor-host.FromTokenProviderOptions'
  name: FromTokenProviderOptions
  spec.typeScript:
  - name: FromTokenProviderOptions
    fullName: FromTokenProviderOptions
    uid: '@azure/event-processor-host.FromTokenProviderOptions'
- uid: '@azure/event-processor-host.EventProcessorHost'
  name: EventProcessorHost
  spec.typeScript:
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: '@azure/event-processor-host.EventProcessorHost'
- uid: '@azure/event-processor-host.CheckpointManager'
  name: CheckpointManager
  spec.typeScript:
  - name: CheckpointManager
    fullName: CheckpointManager
    uid: '@azure/event-processor-host.CheckpointManager'
- uid: '@azure/event-processor-host.LeaseManager'
  name: LeaseManager
  spec.typeScript:
  - name: LeaseManager
    fullName: LeaseManager
    uid: '@azure/event-processor-host.LeaseManager'
- uid: '@azure/event-processor-host.FromConnectionStringOptions'
  name: FromConnectionStringOptions
  spec.typeScript:
  - name: FromConnectionStringOptions
    fullName: FromConnectionStringOptions
    uid: '@azure/event-processor-host.FromConnectionStringOptions'
- uid: '@azure/event-processor-host.FromIotHubConnectionStringOptions'
  name: FromIotHubConnectionStringOptions
  spec.typeScript:
  - name: FromIotHubConnectionStringOptions
    fullName: FromIotHubConnectionStringOptions
    uid: '@azure/event-processor-host.FromIotHubConnectionStringOptions'
- uid: Promise<@azure/event-processor-host.EventProcessorHost>
  name: EventProcessorHost>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: EventProcessorHost
    fullName: EventProcessorHost
    uid: '@azure/event-processor-host.EventProcessorHost'
  - name: '>'
    fullName: '>'
