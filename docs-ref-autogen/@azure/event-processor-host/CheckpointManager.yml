### YamlMime:UniversalReference
ms.openlocfilehash: a00377b11a0a4f5c6d2453d40f079b28cb2f6aff
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52121123"
items:
- uid: '@azure/event-processor-host.CheckpointManager'
  name: CheckpointManager
  fullName: CheckpointManager
  children:
  - '@azure/event-processor-host.CheckpointManager.checkpointStoreExists'
  - '@azure/event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists'
  - '@azure/event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists'
  - '@azure/event-processor-host.CheckpointManager.deleteCheckpoint'
  - '@azure/event-processor-host.CheckpointManager.deleteCheckpointStore'
  - '@azure/event-processor-host.CheckpointManager.getCheckpoint'
  - '@azure/event-processor-host.CheckpointManager.updateCheckpoint'
  langs:
  - typeScript
  type: interface
  summary: ''
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.checkpointStoreExists'
  name: checkpointStoreExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4615a-101">¿Existe el almacén de punto de control?</span><span class="sxs-lookup"><span data-stu-id="4615a-101">Does the checkpoint store exist?</span></span>
  syntax:
    content: function checkpointStoreExists()
    parameters: []
    return:
      type:
      - Promise<boolean>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.createAllCheckpointsIfNotExists'
  name: createAllCheckpointsIfNotExists(string[])
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    <span data-ttu-id="4615a-102">Crea el punto de comprobación los titulares de las particiones determinadas.</span><span class="sxs-lookup"><span data-stu-id="4615a-102">Creates the checkpoint HOLDERs for the given partitions.</span></span> <span data-ttu-id="4615a-103">No hace nada para cualquier punto de control de los titulares de que ya existen.</span><span class="sxs-lookup"><span data-stu-id="4615a-103">Does nothing for any checkpoint HOLDERs that already exist.</span></span>

    <span data-ttu-id="4615a-104">La semántica de esto es complicada porque es posible usar el mismo almacén para las concesiones y puntos de control (la implementación de Azure Storage no lo) y es necesario tener una concesión para cada partición, pero no es necesario tener un punto de control para una partición.</span><span class="sxs-lookup"><span data-stu-id="4615a-104">The semantics of this are complicated because it is possible to use the same store for both leases and checkpoints (the Azure Storage implementation does so) and it is required to have a lease for every partition but it is not required to have a checkpoint for a partition.</span></span>

    <span data-ttu-id="4615a-105">Es un escenario válido utilizar nunca puntos de control, por lo que es importante para la tienda distinguir entre la creación de la estructura que contenga un punto de control y crear realmente un punto de control (que almacena un par de números de secuencia o de desplazamiento en la estructura).</span><span class="sxs-lookup"><span data-stu-id="4615a-105">It is a valid scenario to never use checkpoints at all, so it is important for the store to distinguish between creating the structure(s) that will hold a checkpoint and actually creating a checkpoint (storing an offset/sequence number pair in the structure).</span></span>
  syntax:
    content: 'function createAllCheckpointsIfNotExists(partitionIds: string[])'
    parameters:
    - id: partitionIds
      type:
      - string[]
      description: <span data-ttu-id="4615a-106">Lista de particiones para crear marcadores de punto de comprobación para.</span><span class="sxs-lookup"><span data-stu-id="4615a-106">List of partitions to create checkpoint HOLDERs for.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.createCheckpointStoreIfNotExists'
  name: createCheckpointStoreIfNotExists()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4615a-107">Crear el almacén de punto de comprobación si no existe.</span><span class="sxs-lookup"><span data-stu-id="4615a-107">Create the checkpoint store if it doesn't exist.</span></span> <span data-ttu-id="4615a-108">No hace nada si existe.</span><span class="sxs-lookup"><span data-stu-id="4615a-108">Does nothing if it exists.</span></span>
  syntax:
    content: function createCheckpointStoreIfNotExists()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.deleteCheckpoint'
  name: deleteCheckpoint(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4615a-109">Eliminar el punto de control almacenado para la partición especificada.</span><span class="sxs-lookup"><span data-stu-id="4615a-109">Delete the stored checkpoint for the given partition.</span></span> <span data-ttu-id="4615a-110">Si no hay ningún punto de control almacenado para la partición especificada, que se trata como correcta.</span><span class="sxs-lookup"><span data-stu-id="4615a-110">If there is no stored checkpoint for the given partition, that is treated as success.</span></span> <span data-ttu-id="4615a-111">Eliminando el punto de control titular está permitido pero no es necesario; la implementación está libre para hacer que sea más cómodo.</span><span class="sxs-lookup"><span data-stu-id="4615a-111">Deleting the checkpoint HOLDER is allowed but not required; your implementation is free to do whichever is more convenient.</span></span>
  syntax:
    content: 'function deleteCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="4615a-112">El valor de partitionId para eliminar el punto de control de la tienda.</span><span class="sxs-lookup"><span data-stu-id="4615a-112">The partitionId to delete the checkpoint from the store.</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.deleteCheckpointStore'
  name: deleteCheckpointStore()
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4615a-113">Elimina el almacén de punto de comprobación.</span><span class="sxs-lookup"><span data-stu-id="4615a-113">Deletes the checkpoint store.</span></span>
  syntax:
    content: function deleteCheckpointStore()
    parameters: []
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.getCheckpoint'
  name: getCheckpoint(string)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4615a-114">Obtiene la información de punto de control asociada con la partición especificada.</span><span class="sxs-lookup"><span data-stu-id="4615a-114">Gets the checkpoint info associated with the given partition.</span></span> <span data-ttu-id="4615a-115">Podría devolver indefinido si no se ha creado ningún punto de comprobación para esa partición.</span><span class="sxs-lookup"><span data-stu-id="4615a-115">Could return undefined if no checkpoint has been created for that partition.</span></span>
  syntax:
    content: 'function getCheckpoint(partitionId: string)'
    parameters:
    - id: partitionId
      type:
      - string
      description: <span data-ttu-id="4615a-116">El valor de partitionId para obtener la información de punto de comprobación de.</span><span class="sxs-lookup"><span data-stu-id="4615a-116">The partitionId to get the checkpoint info for.</span></span>
    return:
      type:
      - Promise<@azure/event-processor-host.CheckpointInfo | undefined>
  package: '@azure/event-processor-host'
- uid: '@azure/event-processor-host.CheckpointManager.updateCheckpoint'
  name: updateCheckpoint(CompleteLease, CheckpointInfo)
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="4615a-117">Actualice el punto de control en el almacén con el desplazamiento/sequenceNumber en el punto de control proporcionado.</span><span class="sxs-lookup"><span data-stu-id="4615a-117">Update the checkpoint in the store with the offset/sequenceNumber in the provided checkpoint.</span></span>
  syntax:
    content: 'function updateCheckpoint(lease: CompleteLease, checkpoint: CheckpointInfo)'
    parameters:
    - id: lease
      type:
      - '@azure/event-processor-host.CompleteLease'
      description: <span data-ttu-id="4615a-118">Información de la partición en la que se va a realizar un punto de control.</span><span class="sxs-lookup"><span data-stu-id="4615a-118">Partition information against which to perform a checkpoint.</span></span>
    - id: checkpoint
      type:
      - '@azure/event-processor-host.CheckpointInfo'
      description: <span data-ttu-id="4615a-119">desplazamiento/sequeceNumber para actualizar el almacén con</span><span class="sxs-lookup"><span data-stu-id="4615a-119">offset/sequeceNumber to update the store with</span></span>
    return:
      type:
      - Promise<void>
  package: '@azure/event-processor-host'
references:
- uid: Promise<@azure/event-processor-host.CheckpointInfo | undefined>
  name: CheckpointInfo | undefined>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: '@azure/event-processor-host.CheckpointInfo'
  - name: " | undefined>"
    fullName: " | undefined>"
- uid: '@azure/event-processor-host.CompleteLease'
  name: CompleteLease
  spec.typeScript:
  - name: CompleteLease
    fullName: CompleteLease
    uid: '@azure/event-processor-host.CompleteLease'
- uid: '@azure/event-processor-host.CheckpointInfo'
  name: CheckpointInfo
  spec.typeScript:
  - name: CheckpointInfo
    fullName: CheckpointInfo
    uid: '@azure/event-processor-host.CheckpointInfo'
