### YamlMime:UniversalReference
items:
  - uid: '@azure/keyvault-secrets.SecretsClient'
    name: SecretsClient
    fullName: SecretsClient
    children:
      - '@azure/keyvault-secrets.SecretsClient.backupSecret'
      - '@azure/keyvault-secrets.SecretsClient.deleteSecret'
      - '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
      - '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.getSecret'
      - '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecrets'
      - '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
      - '@azure/keyvault-secrets.SecretsClient.pipeline'
      - '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
      - '@azure/keyvault-secrets.SecretsClient.restoreSecret'
      - '@azure/keyvault-secrets.SecretsClient.constructor'
      - '@azure/keyvault-secrets.SecretsClient.setSecret'
      - '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
      - '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="dccc5-101">El cliente para interactuar con la funcionalidad de los secretos de KeyVault</span><span class="sxs-lookup"><span data-stu-id="dccc5-101">The client to interact with the KeyVault secrets functionality</span></span>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.backupSecret'
    name: 'backupSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-102">Solicitudes que se ha descargado una copia de seguridad del secreto especificado al cliente.</span><span class="sxs-lookup"><span data-stu-id="dccc5-102">Requests that a backup of the specified secret be downloaded to the client.</span></span> <span data-ttu-id="dccc5-103">Se descargarán todas las versiones del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-103">All versions of the secret will be downloaded.</span></span> <span data-ttu-id="dccc5-104">Esta operación requiere el permiso de copia de seguridad o los secretos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-104">This operation requires the secrets/backup permission.</span></span>
      <span data-ttu-id="dccc5-105">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-105">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let backupResult = await client.backupSecret("MySecretName");
      ```
    syntax:
      content: 'function backupSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-106">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-106">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Uint8Array>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.deleteSecret'
    name: 'deleteSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-107">La operación de eliminación se aplica a cualquier secreto almacenado en Azure Key Vault.</span><span class="sxs-lookup"><span data-stu-id="dccc5-107">The DELETE operation applies to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="dccc5-108">DELETE no se puede aplicar a una versión individual de un secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-108">DELETE cannot be applied to an individual version of a secret.</span></span> <span data-ttu-id="dccc5-109">Esta operación requiere el permiso secrets/delete.</span><span class="sxs-lookup"><span data-stu-id="dccc5-109">This operation requires the secrets/delete permission.</span></span>
      <span data-ttu-id="dccc5-110">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-110">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      ```
    syntax:
      content: 'function deleteSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-111">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-111">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDefaultPipeline'
    name: 'getDefaultPipeline(ServiceClientCredentials | TokenCredential, NewPipelineOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="dccc5-112">Un método estático que se utiliza para crear un nuevo objeto de canalización con la credencial proporcionada.</span><span class="sxs-lookup"><span data-stu-id="dccc5-112">A static method used to create a new Pipeline object with the provided Credential.</span></span>
    syntax:
      content: 'static function getDefaultPipeline(credential: ServiceClientCredentials | TokenCredential, pipelineOptions?: NewPipelineOptions)'
      parameters:
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOptions
          type:
            - '@azure/keyvault-secrets.NewPipelineOptions'
          description: ''
          optional: true
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getDeletedSecret'
    name: 'getDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-113">La operación de obtener el secreto eliminado devuelve el secreto especificado se eliminó junto con sus atributos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-113">The Get Deleted Secret operation returns the specified deleted secret along with its attributes.</span></span>
      <span data-ttu-id="dccc5-114">Esta operación requiere el permiso secrets/get.</span><span class="sxs-lookup"><span data-stu-id="dccc5-114">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="dccc5-115">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-115">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.getDeletedSecret("MyDeletedSecret");
      ```
    syntax:
      content: 'function getDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-116">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-116">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.DeletedSecret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.getSecret'
    name: 'getSecret(string, GetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-117">La operación GET es aplicable a cualquier secreto almacenado en Azure Key Vault.</span><span class="sxs-lookup"><span data-stu-id="dccc5-117">The GET operation is applicable to any secret stored in Azure Key Vault.</span></span> <span data-ttu-id="dccc5-118">Esta operación requiere el permiso secrets/get.</span><span class="sxs-lookup"><span data-stu-id="dccc5-118">This operation requires the secrets/get permission.</span></span>
      <span data-ttu-id="dccc5-119">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-119">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret("MySecretName");
      ```
    syntax:
      content: 'function getSecret(secretName: string, options?: GetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-120">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-120">The name of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listDeletedSecrets'
    name: listDeletedSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-121">Recorre en iteración los secretos eliminados en el almacén.</span><span class="sxs-lookup"><span data-stu-id="dccc5-121">Iterates the deleted secrets in the vault.</span></span>  <span data-ttu-id="dccc5-122">El identificador de secreto completo y los atributos se proporcionan en la respuesta.</span><span class="sxs-lookup"><span data-stu-id="dccc5-122">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="dccc5-123">Se devuelve ningún valor para los secretos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-123">No values are returned for the secrets.</span></span> <span data-ttu-id="dccc5-124">Esta operación requiere el permiso secrets/list.</span><span class="sxs-lookup"><span data-stu-id="dccc5-124">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="dccc5-125">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-125">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listDeletedSecrets()) {
        const deletedSecret = await client.getSecret(secretAttr.name);
        console.log("deleted secret: ", deletedSecret);
      }
      ```
    syntax:
      content: 'function listDeletedSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecrets'
    name: listSecrets(GetSecretsOptions)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-126">Recorre en iteración la versión más reciente de todos los secretos en el almacén.</span><span class="sxs-lookup"><span data-stu-id="dccc5-126">Iterates the latest version of all secrets in the vault.</span></span>  <span data-ttu-id="dccc5-127">El identificador de secreto completo y los atributos se proporcionan en la respuesta.</span><span class="sxs-lookup"><span data-stu-id="dccc5-127">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="dccc5-128">Se devuelve ningún valor para los secretos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-128">No values are returned for the secrets.</span></span> <span data-ttu-id="dccc5-129">Esta operación requiere el permiso secrets/list.</span><span class="sxs-lookup"><span data-stu-id="dccc5-129">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="dccc5-130">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-130">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecrets()) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret: ", secret);
      }
      ```
    syntax:
      content: 'function listSecrets(options?: GetSecretsOptions)'
      parameters:
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.listSecretVersions'
    name: 'listSecretVersions(string, GetSecretsOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-131">Recorre en iteración todas las versiones del secreto en el almacén especificado.</span><span class="sxs-lookup"><span data-stu-id="dccc5-131">Iterates all versions of the given secret in the vault.</span></span> <span data-ttu-id="dccc5-132">El identificador de secreto completo y los atributos se proporcionan en la respuesta.</span><span class="sxs-lookup"><span data-stu-id="dccc5-132">The full secret identifier and attributes are provided in the response.</span></span> <span data-ttu-id="dccc5-133">Se devuelve ningún valor para los secretos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-133">No values are returned for the secrets.</span></span> <span data-ttu-id="dccc5-134">Esta operación requiere el permiso secrets/list.</span><span class="sxs-lookup"><span data-stu-id="dccc5-134">This operations requires the secrets/list permission.</span></span>
      <span data-ttu-id="dccc5-135">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-135">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      for await (const secretAttr of client.listSecretVersions("MySecretName")) {
        const secret = await client.getSecret(secretAttr.name);
        console.log("secret version: ", secret);
      }
      ```
    syntax:
      content: 'function listSecretVersions(secretName: string, options?: GetSecretsOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-136">Nombre del secreto para capturar las versiones de</span><span class="sxs-lookup"><span data-stu-id="dccc5-136">Name of the secret to fetch versions for</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.GetSecretsOptions'
          description: ''
          optional: true
      return:
        type:
          - 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.pipeline'
    name: pipeline
    fullName: pipeline
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dccc5-137">Las opciones para crear la conexión al servicio</span><span class="sxs-lookup"><span data-stu-id="dccc5-137">The options to create the connection to the service</span></span>
    syntax:
      content: 'pipeline: ServiceClientOptions'
      return:
        type:
          - ServiceClientOptions
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.purgeDeletedSecret'
    name: 'purgeDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-138">La operación de purga eliminado secreta quita el secreto permanentemente, sin la posibilidad de recuperación.</span><span class="sxs-lookup"><span data-stu-id="dccc5-138">The purge deleted secret operation removes the secret permanently, without the possibility of recovery.</span></span> <span data-ttu-id="dccc5-139">Esta operación solo puede habilitarse en un almacén de eliminación temporal habilitado.</span><span class="sxs-lookup"><span data-stu-id="dccc5-139">This operation can only be enabled on a soft-delete enabled vault.</span></span> <span data-ttu-id="dccc5-140">Esta operación requiere el permiso o purgar los secretos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-140">This operation requires the secrets/purge permission.</span></span>
      <span data-ttu-id="dccc5-141">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-141">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.purgeDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function purgeDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-142">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-142">The name of the secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<void>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.recoverDeletedSecret'
    name: 'recoverDeletedSecret(string, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-143">Recupera el secreto se eliminó en el almacén especificado.</span><span class="sxs-lookup"><span data-stu-id="dccc5-143">Recovers the deleted secret in the specified vault.</span></span> <span data-ttu-id="dccc5-144">Esta operación solo puede realizarse en un almacén de eliminación temporal habilitado.</span><span class="sxs-lookup"><span data-stu-id="dccc5-144">This operation can only be performed on a soft-delete enabled vault.</span></span> <span data-ttu-id="dccc5-145">Esta operación requiere el permiso o recuperar los secretos.</span><span class="sxs-lookup"><span data-stu-id="dccc5-145">This operation requires the secrets/recover permission.</span></span>
      <span data-ttu-id="dccc5-146">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-146">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.deleteSecret("MySecretName");
      await client.recoverDeletedSecret("MySecretName");
      ```
    syntax:
      content: 'function recoverDeletedSecret(secretName: string, options?: RequestOptionsBase)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-147">El nombre del secreto eliminado.</span><span class="sxs-lookup"><span data-stu-id="dccc5-147">The name of the deleted secret.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.restoreSecret'
    name: 'restoreSecret(Uint8Array, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-148">Restaura un copia de seguridad de secreto y todas sus versiones, en un almacén.</span><span class="sxs-lookup"><span data-stu-id="dccc5-148">Restores a backed up secret, and all its versions, to a vault.</span></span> <span data-ttu-id="dccc5-149">Esta operación requiere el permiso de secretos y restauración.</span><span class="sxs-lookup"><span data-stu-id="dccc5-149">This operation requires the secrets/restore permission.</span></span>
      <span data-ttu-id="dccc5-150">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-150">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      let mySecretBundle = await client.backupSecret("MySecretName");
      // ...
      await client.restoreSecret(mySecretBundle);
      ```
    syntax:
      content: 'function restoreSecret(secretBundleBackup: Uint8Array, options?: RequestOptionsBase)'
      parameters:
        - id: secretBundleBackup
          type:
            - Uint8Array
          description: <span data-ttu-id="dccc5-151">El blob de copia de seguridad asociado con un paquete de secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-151">The backup blob associated with a secret bundle.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.constructor'
    name: 'SecretsClient(string, ServiceClientCredentials | TokenCredential, ServiceClientOptions | NewPipelineOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-152">Crea una instancia de SecretsClient.</span><span class="sxs-lookup"><span data-stu-id="dccc5-152">Creates an instance of SecretsClient.</span></span>
      <span data-ttu-id="dccc5-153">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-153">Example usage:</span></span>
      ```ts
      import { SecretsClient } from "@azure/keyvault-secrets";
      import { EnvironmentCredential } from "@azure/identity";

      let url = `https://<MY KEYVAULT HERE>.vault.azure.net`;
      let credentials = new EnvironmentCredential();

      let client = new SecretsClient(url, credentials);
      ```
    syntax:
      content: 'new SecretsClient(url: string, credential: ServiceClientCredentials | TokenCredential, pipelineOrOptions?: ServiceClientOptions | NewPipelineOptions)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="dccc5-154">la dirección url base para el almacén de claves.</span><span class="sxs-lookup"><span data-stu-id="dccc5-154">the base url to the key vault.</span></span>
        - id: credential
          type:
            - ServiceClientCredentials | TokenCredential
          description: ''
        - id: pipelineOrOptions
          type:
            - ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
          description: ''
          optional: true
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.setSecret'
    name: 'setSecret(string, string, SetSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-155">La operación de establecimiento agrega un secreto al almacén de claves de Azure.</span><span class="sxs-lookup"><span data-stu-id="dccc5-155">The SET operation adds a secret to the Azure Key Vault.</span></span> <span data-ttu-id="dccc5-156">Si el secreto con ese nombre ya existe, Azure Key Vault crea una nueva versión del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-156">If the named secret already exists, Azure Key Vault creates a new version of that secret.</span></span> <span data-ttu-id="dccc5-157">Esta operación requiere el permiso secrets/Set.</span><span class="sxs-lookup"><span data-stu-id="dccc5-157">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="dccc5-158">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-158">Example usage:</span></span>
      ```ts
      let client = new SecretsClient(url, credentials);
      await client.setSecret("MySecretName", "ABC123");
      ```
    syntax:
      content: 'function setSecret(secretName: string, value: string, options?: SetSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-159">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-159">The name of the secret.</span></span>
        - id: value
          type:
            - string
          description: <span data-ttu-id="dccc5-160">El valor del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-160">The value of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.SetSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.updateSecretAttributes'
    name: 'updateSecretAttributes(string, string, UpdateSecretOptions)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="dccc5-161">La operación UPDATE cambia atributos específicos de un secreto almacenado existente.</span><span class="sxs-lookup"><span data-stu-id="dccc5-161">The UPDATE operation changes specified attributes of an existing stored secret.</span></span> <span data-ttu-id="dccc5-162">Los atributos que no se especifican en la solicitud se dejan sin cambios.</span><span class="sxs-lookup"><span data-stu-id="dccc5-162">Attributes that are not specified in the request are left unchanged.</span></span> <span data-ttu-id="dccc5-163">No se puede cambiar el valor de un propio secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-163">The value of a secret itself cannot be changed.</span></span> <span data-ttu-id="dccc5-164">Esta operación requiere el permiso secrets/Set.</span><span class="sxs-lookup"><span data-stu-id="dccc5-164">This operation requires the secrets/set permission.</span></span>
      <span data-ttu-id="dccc5-165">Ejemplo de uso:</span><span class="sxs-lookup"><span data-stu-id="dccc5-165">Example usage:</span></span>
      ```ts
      let secretName = "MySecretName";
      let client = new SecretsClient(url, credentials);
      let secret = await client.getSecret(secretName);
      await client.updateSecret(secretName, secret.version, { enabled: false });
      ```
    syntax:
      content: 'function updateSecretAttributes(secretName: string, secretVersion: string, options?: UpdateSecretOptions)'
      parameters:
        - id: secretName
          type:
            - string
          description: <span data-ttu-id="dccc5-166">Nombre del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-166">The name of the secret.</span></span>
        - id: secretVersion
          type:
            - string
          description: <span data-ttu-id="dccc5-167">La versión del secreto.</span><span class="sxs-lookup"><span data-stu-id="dccc5-167">The version of the secret.</span></span>
        - id: options
          type:
            - '@azure/keyvault-secrets.UpdateSecretOptions'
          description: ''
          optional: true
      return:
        type:
          - Promise<@azure/keyvault-secrets.Secret>
    package: '@azure/keyvault-secrets'
  - uid: '@azure/keyvault-secrets.SecretsClient.vaultBaseUrl'
    name: vaultBaseUrl
    fullName: vaultBaseUrl
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="dccc5-168">La dirección URL base para el almacén</span><span class="sxs-lookup"><span data-stu-id="dccc5-168">The base URL to the vault</span></span>
    syntax:
      content: 'vaultBaseUrl: string'
      return:
        type:
          - string
    package: '@azure/keyvault-secrets'
references:
  - uid: ServiceClientOptions | @azure/keyvault-secrets.NewPipelineOptions
    name: NewPipelineOptions
    spec.typeScript:
      - name: 'ServiceClientOptions | '
        fullName: 'ServiceClientOptions | '
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'
  - uid: Promise<@azure/keyvault-secrets.DeletedSecret>
    name: DeletedSecret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: DeletedSecret
        fullName: DeletedSecret
        uid: '@azure/keyvault-secrets.DeletedSecret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretOptions'
    name: GetSecretOptions
    spec.typeScript:
      - name: GetSecretOptions
        fullName: GetSecretOptions
        uid: '@azure/keyvault-secrets.GetSecretOptions'
  - uid: Promise<@azure/keyvault-secrets.Secret>
    name: Secret>
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Secret
        fullName: Secret
        uid: '@azure/keyvault-secrets.Secret'
      - name: '>'
        fullName: '>'
  - uid: '@azure/keyvault-secrets.GetSecretsOptions'
    name: GetSecretsOptions
    spec.typeScript:
      - name: GetSecretsOptions
        fullName: GetSecretsOptions
        uid: '@azure/keyvault-secrets.GetSecretsOptions'
  - uid: 'PagedAsyncIterableIterator<@azure/keyvault-secrets.SecretAttributes, @azure/keyvault-secrets.SecretAttributes[]>'
    name: 'SecretAttributes[]>'
    spec.typeScript:
      - name: PagedAsyncIterableIterator<
        fullName: PagedAsyncIterableIterator<
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: ', '
        fullName: ', '
      - name: SecretAttributes
        fullName: SecretAttributes
        uid: '@azure/keyvault-secrets.SecretAttributes'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/keyvault-secrets.SetSecretOptions'
    name: SetSecretOptions
    spec.typeScript:
      - name: SetSecretOptions
        fullName: SetSecretOptions
        uid: '@azure/keyvault-secrets.SetSecretOptions'
  - uid: '@azure/keyvault-secrets.UpdateSecretOptions'
    name: UpdateSecretOptions
    spec.typeScript:
      - name: UpdateSecretOptions
        fullName: UpdateSecretOptions
        uid: '@azure/keyvault-secrets.UpdateSecretOptions'
  - uid: '@azure/keyvault-secrets.NewPipelineOptions'
    name: NewPipelineOptions
    spec.typeScript:
      - name: NewPipelineOptions
        fullName: NewPipelineOptions
        uid: '@azure/keyvault-secrets.NewPipelineOptions'