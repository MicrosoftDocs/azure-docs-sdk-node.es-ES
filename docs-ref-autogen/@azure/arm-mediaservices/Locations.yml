### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-mediaservices.Locations'
    name: Locations
    fullName: Locations
    children:
      - '@azure/arm-mediaservices.Locations.checkNameAvailability'
      - '@azure/arm-mediaservices.Locations.checkNameAvailability_2'
      - '@azure/arm-mediaservices.Locations.checkNameAvailability_1'
      - '@azure/arm-mediaservices.Locations.constructor'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="c529e-101">Clase que representa una ubicación.</span><span class="sxs-lookup"><span data-stu-id="c529e-101">Class representing a Locations.</span></span>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.Locations.checkNameAvailability'
    name: 'checkNameAvailability(string, CheckNameAvailabilityInput, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="c529e-102">Comprueba si el nombre del recurso de Media Services está disponible.</span><span class="sxs-lookup"><span data-stu-id="c529e-102">Checks whether the Media Service resource name is available.</span></span>
    syntax:
      content: 'function checkNameAvailability(locationName: string, parameters: CheckNameAvailabilityInput, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: locationName
          type:
            - string
          description: <span data-ttu-id="c529e-103">El nombre de la ubicación</span><span class="sxs-lookup"><span data-stu-id="c529e-103">The name of the location</span></span>
        - id: parameters
          type:
            - '@azure/arm-mediaservices.CheckNameAvailabilityInput'
          description: <span data-ttu-id="c529e-104">Los parámetros de solicitud</span><span class="sxs-lookup"><span data-stu-id="c529e-104">The request parameters</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LocationsCheckNameAvailabilityResponse>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.Locations.checkNameAvailability_2'
    name: 'checkNameAvailability(string, CheckNameAvailabilityInput, RequestOptionsBase, ServiceCallback<EntityNameAvailabilityCheckOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(locationName: string, parameters: CheckNameAvailabilityInput, options: RequestOptionsBase, callback: ServiceCallback<EntityNameAvailabilityCheckOutput>)'
      parameters:
        - id: locationName
          type:
            - string
          description: <span data-ttu-id="c529e-105">El nombre de la ubicación</span><span class="sxs-lookup"><span data-stu-id="c529e-105">The name of the location</span></span>
        - id: parameters
          type:
            - '@azure/arm-mediaservices.CheckNameAvailabilityInput'
          description: <span data-ttu-id="c529e-106">Los parámetros de solicitud</span><span class="sxs-lookup"><span data-stu-id="c529e-106">The request parameters</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="c529e-107">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="c529e-107">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mediaservices.EntityNameAvailabilityCheckOutput>
          description: |
            <span data-ttu-id="c529e-108">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="c529e-108">The callback</span></span>
      return:
        type:
          - Promise<Models.LocationsCheckNameAvailabilityResponse>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.Locations.checkNameAvailability_1'
    name: 'checkNameAvailability(string, CheckNameAvailabilityInput, ServiceCallback<EntityNameAvailabilityCheckOutput>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function checkNameAvailability(locationName: string, parameters: CheckNameAvailabilityInput, callback: ServiceCallback<EntityNameAvailabilityCheckOutput>)'
      parameters:
        - id: locationName
          type:
            - string
          description: <span data-ttu-id="c529e-109">El nombre de la ubicación</span><span class="sxs-lookup"><span data-stu-id="c529e-109">The name of the location</span></span>
        - id: parameters
          type:
            - '@azure/arm-mediaservices.CheckNameAvailabilityInput'
          description: <span data-ttu-id="c529e-110">Los parámetros de solicitud</span><span class="sxs-lookup"><span data-stu-id="c529e-110">The request parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/arm-mediaservices.EntityNameAvailabilityCheckOutput>
          description: |
            <span data-ttu-id="c529e-111">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="c529e-111">The callback</span></span>
      return:
        type:
          - Promise<Models.LocationsCheckNameAvailabilityResponse>
    package: '@azure/arm-mediaservices'
  - uid: '@azure/arm-mediaservices.Locations.constructor'
    name: Locations(AzureMediaServicesContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="c529e-112">Crear una ubicación.</span><span class="sxs-lookup"><span data-stu-id="c529e-112">Create a Locations.</span></span>
    syntax:
      content: 'new Locations(client: AzureMediaServicesContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-mediaservices.AzureMediaServicesContext'
          description: |
            <span data-ttu-id="c529e-113">Referencia para el cliente del servicio.</span><span class="sxs-lookup"><span data-stu-id="c529e-113">Reference to the service client.</span></span>
    package: '@azure/arm-mediaservices'
references:
  - uid: '@azure/arm-mediaservices.AzureMediaServicesContext'
    name: AzureMediaServicesContext
    spec.typeScript:
      - name: AzureMediaServicesContext
        fullName: AzureMediaServicesContext
        uid: '@azure/arm-mediaservices.AzureMediaServicesContext'
  - uid: '@azure/arm-mediaservices.CheckNameAvailabilityInput'
    name: CheckNameAvailabilityInput
    spec.typeScript:
      - name: CheckNameAvailabilityInput
        fullName: CheckNameAvailabilityInput
        uid: '@azure/arm-mediaservices.CheckNameAvailabilityInput'
  - uid: ServiceCallback<@azure/arm-mediaservices.EntityNameAvailabilityCheckOutput>
    name: EntityNameAvailabilityCheckOutput>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EntityNameAvailabilityCheckOutput
        fullName: EntityNameAvailabilityCheckOutput
        uid: '@azure/arm-mediaservices.EntityNameAvailabilityCheckOutput'
      - name: '>'
        fullName: '>'