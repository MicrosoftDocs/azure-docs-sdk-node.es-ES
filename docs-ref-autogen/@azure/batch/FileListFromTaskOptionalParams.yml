### YamlMime:UniversalReference
items:
  - uid: '@azure/batch.FileListFromTaskOptionalParams'
    name: FileListFromTaskOptionalParams
    fullName: FileListFromTaskOptionalParams
    children:
      - '@azure/batch.FileListFromTaskOptionalParams.abortSignal'
      - '@azure/batch.FileListFromTaskOptionalParams.customHeaders'
      - '@azure/batch.FileListFromTaskOptionalParams.fileListFromTaskOptions'
      - '@azure/batch.FileListFromTaskOptionalParams.onDownloadProgress'
      - '@azure/batch.FileListFromTaskOptionalParams.onUploadProgress'
      - '@azure/batch.FileListFromTaskOptionalParams.recursive'
      - '@azure/batch.FileListFromTaskOptionalParams.timeout'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="59b93-101">Parámetros opcionales.</span><span class="sxs-lookup"><span data-stu-id="59b93-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="59b93-102">La señal que se puede usar para anular las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="59b93-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="59b93-103">objeto de {} [customHeaders] Encabezados de solicitud personalizado que se aplicará antes de enviar la solicitud definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="59b93-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.fileListFromTaskOptions'
    name: fileListFromTaskOptions
    fullName: fileListFromTaskOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="59b93-104">Parámetros adicionales para la operación</span><span class="sxs-lookup"><span data-stu-id="59b93-104">Additional parameters for the operation</span></span>
    optional: true
    syntax:
      content: 'fileListFromTaskOptions?: FileListFromTaskOptions'
      return:
        type:
          - '@azure/batch.FileListFromTaskOptions'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="59b93-105">Devolución de llamada que se desencadena al progreso de la descarga.</span><span class="sxs-lookup"><span data-stu-id="59b93-105">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="59b93-106">Devolución de llamada que se desencadena al progreso de carga.</span><span class="sxs-lookup"><span data-stu-id="59b93-106">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.recursive'
    name: recursive
    fullName: recursive
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="59b93-107">Si desea mostrar los elementos secundarios del directorio de tareas.</span><span class="sxs-lookup"><span data-stu-id="59b93-107">Whether to list children of the task directory.</span></span> <span data-ttu-id="59b93-108">Este parámetro puede usarse en combinación con el parámetro de filtro para mostrar el tipo específico de archivos.</span><span class="sxs-lookup"><span data-stu-id="59b93-108">This parameter can be used in combination with the filter parameter to list specific type of files.</span></span>
    optional: true
    syntax:
      content: 'recursive?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/batch'
  - uid: '@azure/batch.FileListFromTaskOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="59b93-109">El número de milisegundos que una solicitud puede tomar antes de finalizar automáticamente.</span><span class="sxs-lookup"><span data-stu-id="59b93-109">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/batch'
references:
  - uid: '@azure/batch.FileListFromTaskOptions'
    name: FileListFromTaskOptions
    spec.typeScript:
      - name: FileListFromTaskOptions
        fullName: FileListFromTaskOptions
        uid: '@azure/batch.FileListFromTaskOptions'