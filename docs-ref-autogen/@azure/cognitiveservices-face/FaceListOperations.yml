### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceListOperations'
    name: FaceListOperations
    fullName: FaceListOperations
    children:
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
      - '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.FaceListOperations.create_2'
      - '@azure/cognitiveservices-face.FaceListOperations.create'
      - '@azure/cognitiveservices-face.FaceListOperations.create_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.FaceListOperations.constructor'
      - '@azure/cognitiveservices-face.FaceListOperations.get_2'
      - '@azure/cognitiveservices-face.FaceListOperations.get'
      - '@azure/cognitiveservices-face.FaceListOperations.get_1'
      - '@azure/cognitiveservices-face.FaceListOperations.list_2'
      - '@azure/cognitiveservices-face.FaceListOperations.list'
      - '@azure/cognitiveservices-face.FaceListOperations.list_1'
      - '@azure/cognitiveservices-face.FaceListOperations.update_2'
      - '@azure/cognitiveservices-face.FaceListOperations.update'
      - '@azure/cognitiveservices-face.FaceListOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="db2da-101">Clase que representa un FaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="db2da-101">Class representing a FaceListOperations.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_2'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, FaceListAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options: FaceListAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-102">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-102">Id referencing a particular face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="db2da-103">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="db2da-103">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
          description: <span data-ttu-id="db2da-104">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-104">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="db2da-105">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-105">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, Models.FaceListAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="db2da-106">Agregar una cara a una lista de caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-106">Add a face to a face list.</span></span> <span data-ttu-id="db2da-107">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="db2da-107">The input face is specified as an image with a targetFace rectangle.</span></span>
      <span data-ttu-id="db2da-108">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="db2da-108">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, options?: Models.FaceListAddFaceFromStreamOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-109">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-109">Id referencing a particular face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="db2da-110">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="db2da-110">An image stream.</span></span>
        - id: options
          type:
            - Models.FaceListAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromStream_1'
    name: 'addFaceFromStream(string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(faceListId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-111">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-111">Id referencing a particular face list.</span></span>
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="db2da-112">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="db2da-112">An image stream.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="db2da-113">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-113">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, FaceListAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options: FaceListAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-114">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-114">Id referencing a particular face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="db2da-115">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="db2da-115">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
          description: <span data-ttu-id="db2da-116">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-116">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="db2da-117">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-117">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, Models.FaceListAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="db2da-118">Agregar una cara a una lista de caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-118">Add a face to a face list.</span></span> <span data-ttu-id="db2da-119">La cara de entrada se especifica como una imagen con un rectángulo targetFace.</span><span class="sxs-lookup"><span data-stu-id="db2da-119">The input face is specified as an image with a targetFace rectangle.</span></span>
      <span data-ttu-id="db2da-120">Devuelve un persistedFaceId que representa la imagen se ha agregado y persistedFaceId no caducará.</span><span class="sxs-lookup"><span data-stu-id="db2da-120">It returns a persistedFaceId representing the added face, and persistedFaceId will not expire.</span></span>
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, options?: Models.FaceListAddFaceFromUrlOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-121">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-121">Id referencing a particular face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="db2da-122">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="db2da-122">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.FaceListAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(faceListId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-123">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-123">Id referencing a particular face list.</span></span>
        - id: url
          type:
            - string
          description: <span data-ttu-id="db2da-124">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="db2da-124">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            <span data-ttu-id="db2da-125">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-125">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_2'
    name: 'create(string, FaceListCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, options: FaceListCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-126">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-126">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
          description: <span data-ttu-id="db2da-127">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-127">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-128">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-128">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create'
    name: 'create(string, Models.FaceListCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="db2da-129">Crear una lista de caras vacío con faceListId especificado por el usuario, el nombre, un recognitionModel y userData opcional.</span><span class="sxs-lookup"><span data-stu-id="db2da-129">Create an empty face list with user-specified faceListId, name, an optional userData and recognitionModel.</span></span> <span data-ttu-id="db2da-130">Las listas se permiten hasta 64 caras en una suscripción.</span><span class="sxs-lookup"><span data-stu-id="db2da-130">Up to 64 face lists are allowed in one subscription.</span></span>
      <br /> <span data-ttu-id="db2da-131">Lista de caras es una lista de caras, hasta 1000 caras y usa [cara - buscar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="db2da-131">Face list is a list of faces, up to 1,000 faces, and used by [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span>
      <br /> <span data-ttu-id="db2da-132">Después de la creación, el usuario debe usar [FaceList - agregar cara](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250) para importar las caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-132">After creation, user should use [FaceList - Add Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395250) to import the faces.</span></span> <span data-ttu-id="db2da-133">Caras se almacenan en el servidor hasta que [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) se llama.</span><span class="sxs-lookup"><span data-stu-id="db2da-133">Faces are stored on server until [FaceList - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524f) is called.</span></span>
      <br /> <span data-ttu-id="db2da-134">Buscar que similar se utiliza para el escenario como encontrar caras similar a celebridades, caras similares filtrado, o como una luz cierto enfrenta identificación.</span><span class="sxs-lookup"><span data-stu-id="db2da-134">Find Similar is used for scenario like finding celebrity-like faces, similar face filtering, or as a light way face identification.</span></span> <span data-ttu-id="db2da-135">Pero si es el uso real para identificar la persona, use [grupo de personas](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) y [enfrentan: identificación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span><span class="sxs-lookup"><span data-stu-id="db2da-135">But if the actual use is to identify person, please use [PersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244) /
      [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d) and [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).</span></span>
      <br /> <span data-ttu-id="db2da-136">Considere la posibilidad de [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) cuando el número de caras es grande.</span><span class="sxs-lookup"><span data-stu-id="db2da-136">Please consider [LargeFaceList](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) when the face number is large.</span></span> <span data-ttu-id="db2da-137">Puede admitir hasta 1 000 000 caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-137">It can support up to 1,000,000 faces.</span></span> <span data-ttu-id="db2da-138">'recognitionModel' debe especificarse para asociar a esta lista de caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-138">'recognitionModel' should be specified to associate with this face list.</span></span> <span data-ttu-id="db2da-139">El valor predeterminado de 'recognitionModel' es 'recognition_01', si el modelo más reciente es necesario, especifique explícitamente el modelo que necesita en este parámetro.</span><span class="sxs-lookup"><span data-stu-id="db2da-139">The default value for 'recognitionModel' is 'recognition_01', if the latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="db2da-140">Las caras nuevas que se agregan a una lista de caras existente usará el modelo de reconocimiento que ya está asociado con la colección.</span><span class="sxs-lookup"><span data-stu-id="db2da-140">New faces that are added to an existing face list will use the recognition model that's already associated with the collection.</span></span> <span data-ttu-id="db2da-141">No se puede actualizar las características existentes de cara en una lista de cara a las características extraídas por otra versión del modelo de reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="db2da-141">Existing face features in a face list can't be updated to features extracted by another version of recognition model.</span></span>
    syntax:
      content: 'function create(faceListId: string, options?: Models.FaceListCreateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-142">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-142">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - Models.FaceListCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-143">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-143">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-144">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-144">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace'
    name: 'deleteFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="db2da-145">Eliminar una imagen existente de una lista de caras (proporcionada por un persistedFaceId y un faceListId).</span><span class="sxs-lookup"><span data-stu-id="db2da-145">Delete an existing face from a face list (given by a persistedFaceId and a faceListId).</span></span>
      <span data-ttu-id="db2da-146">También se eliminará la imagen permanente relacionados con la cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-146">Persisted image related to the face will also be deleted.</span></span>
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-147">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-147">Id referencing a particular face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="db2da-148">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="db2da-148">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_2'
    name: 'deleteFace(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-149">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-149">Id referencing a particular face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="db2da-150">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="db2da-150">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="db2da-151">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-151">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-152">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-152">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteFace_1'
    name: 'deleteFace(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(faceListId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-153">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-153">Id referencing a particular face list.</span></span>
        - id: persistedFaceId
          type:
            - string
          description: <span data-ttu-id="db2da-154">Id. que hacen referencia a un persistedFaceId determinado de una cara existente.</span><span class="sxs-lookup"><span data-stu-id="db2da-154">Id referencing a particular persistedFaceId of an existing face.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-155">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-155">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="db2da-156">Eliminar una lista de caras existente según faceListId.</span><span class="sxs-lookup"><span data-stu-id="db2da-156">Delete an existing face list according to faceListId.</span></span> <span data-ttu-id="db2da-157">Conserva la cara también se eliminarán las imágenes de la lista de caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-157">Persisted face images in the face list will also be deleted.</span></span>
    syntax:
      content: 'function deleteMethod(faceListId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-158">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-158">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-159">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-159">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="db2da-160">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-160">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-161">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-161">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-162">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-162">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-163">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-163">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.constructor'
    name: FaceListOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="db2da-164">Crear un FaceListOperations.</span><span class="sxs-lookup"><span data-stu-id="db2da-164">Create a FaceListOperations.</span></span>
    syntax:
      content: 'new FaceListOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="db2da-165">Referencia para el cliente del servicio.</span><span class="sxs-lookup"><span data-stu-id="db2da-165">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_2'
    name: 'get(string, FaceListGetOptionalParams, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, options: FaceListGetOptionalParams, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-166">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-166">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListGetOptionalParams'
          description: <span data-ttu-id="db2da-167">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-167">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            <span data-ttu-id="db2da-168">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-168">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get'
    name: 'get(string, Models.FaceListGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="db2da-169">Recuperar una lista de caras faceListId, nombre, userData, recognitionModel y caras en la lista de caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-169">Retrieve a face list’s faceListId, name, userData, recognitionModel and faces in the face list.</span></span>'
    syntax:
      content: 'function get(faceListId: string, options?: Models.FaceListGetOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-170">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-170">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - Models.FaceListGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.get_1'
    name: 'get(string, ServiceCallback<FaceList>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(faceListId: string, callback: ServiceCallback<FaceList>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-171">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-171">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.FaceList>
          description: |
            <span data-ttu-id="db2da-172">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-172">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_2'
    name: 'list(FaceListListOptionalParams, ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: FaceListListOptionalParams, callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListListOptionalParams'
          description: <span data-ttu-id="db2da-173">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-173">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            <span data-ttu-id="db2da-174">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-174">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list'
    name: list(Models.FaceListListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="db2da-175">Lista de las listas de caras faceListId, nombre, userData y recognitionModel.</span><span class="sxs-lookup"><span data-stu-id="db2da-175">List face lists’ faceListId, name, userData and recognitionModel.</span></span> <br />
      <span data-ttu-id="db2da-176">Para obtener información de cara dentro de uso faceList [FaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)</span><span class="sxs-lookup"><span data-stu-id="db2da-176">To get face information inside faceList use [FaceList - Get](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524c)</span></span>
    syntax:
      content: 'function list(options?: Models.FaceListListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.FaceListListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.list_1'
    name: 'list(ServiceCallback<FaceList[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<FaceList[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
          description: |
            <span data-ttu-id="db2da-177">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-177">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceListListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_2'
    name: 'update(string, FaceListUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, options: FaceListUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-178">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-178">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
          description: <span data-ttu-id="db2da-179">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="db2da-179">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-180">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-180">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update'
    name: 'update(string, Models.FaceListUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="db2da-181">Actualizar la información de una lista de caras.</span><span class="sxs-lookup"><span data-stu-id="db2da-181">Update information of a face list.</span></span>
    syntax:
      content: 'function update(faceListId: string, options?: Models.FaceListUpdateOptionalParams)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-182">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-182">Id referencing a particular face list.</span></span>
        - id: options
          type:
            - Models.FaceListUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(faceListId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: faceListId
          type:
            - string
          description: <span data-ttu-id="db2da-183">Id. de referencia a una lista determinada de cara.</span><span class="sxs-lookup"><span data-stu-id="db2da-183">Id referencing a particular face list.</span></span>
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            <span data-ttu-id="db2da-184">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="db2da-184">The callback</span></span>
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
    name: FaceListAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromStreamOptionalParams
        fullName: FaceListAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
    name: FaceListAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: FaceListAddFaceFromUrlOptionalParams
        fullName: FaceListAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListAddFaceFromUrlOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
    name: FaceListCreateOptionalParams
    spec.typeScript:
      - name: FaceListCreateOptionalParams
        fullName: FaceListCreateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.FaceList>
    name: FaceList>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
    name: FaceListGetOptionalParams
    spec.typeScript:
      - name: FaceListGetOptionalParams
        fullName: FaceListGetOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListGetOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.FaceList[]>'
    name: 'FaceList[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: FaceList
        fullName: FaceList
        uid: '@azure/cognitiveservices-face.FaceList'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
    name: FaceListListOptionalParams
    spec.typeScript:
      - name: FaceListListOptionalParams
        fullName: FaceListListOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListListOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'
    name: FaceListUpdateOptionalParams
    spec.typeScript:
      - name: FaceListUpdateOptionalParams
        fullName: FaceListUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.FaceListUpdateOptionalParams'