### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.FaceClient'
    name: FaceClient
    fullName: FaceClient
    children:
      - '@azure/cognitiveservices-face.FaceClient.credentials'
      - '@azure/cognitiveservices-face.FaceClient.endpoint'
      - '@azure/cognitiveservices-face.FaceClient.face'
      - '@azure/cognitiveservices-face.FaceClient.constructor'
      - '@azure/cognitiveservices-face.FaceClient.faceList'
      - '@azure/cognitiveservices-face.FaceClient.largeFaceList'
      - '@azure/cognitiveservices-face.FaceClient.largePersonGroup'
      - '@azure/cognitiveservices-face.FaceClient.largePersonGroupPerson'
      - '@azure/cognitiveservices-face.FaceClient.personGroup'
      - '@azure/cognitiveservices-face.FaceClient.personGroupPerson'
      - '@azure/cognitiveservices-face.FaceClient.sendOperationRequest'
      - '@azure/cognitiveservices-face.FaceClient.sendRequest'
      - '@azure/cognitiveservices-face.FaceClient.snapshot'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-face.FaceClientContext'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.face'
    name: face
    fullName: face
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'face: Face'
      return:
        type:
          - '@azure/cognitiveservices-face.Face'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.constructor'
    name: 'FaceClient(ServiceClientCredentials, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inicializa una nueva instancia de la clase FaceClient.
    syntax:
      content: 'new FaceClient(credentials: ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenciales de suscripción que identifican la suscripción de cliente.
        - id: endpoint
          type:
            - string
          description: 'Admite puntos de conexión de servicios cognitivos (protocolo y el nombre de host, por ejemplo: https://westus.api.cognitive.microsoft.com).'
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.faceList'
    name: faceList
    fullName: faceList
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'faceList: FaceListOperations'
      return:
        type:
          - '@azure/cognitiveservices-face.FaceListOperations'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.largeFaceList'
    name: largeFaceList
    fullName: largeFaceList
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'largeFaceList: LargeFaceListOperations'
      return:
        type:
          - '@azure/cognitiveservices-face.LargeFaceListOperations'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.largePersonGroup'
    name: largePersonGroup
    fullName: largePersonGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'largePersonGroup: LargePersonGroupOperations'
      return:
        type:
          - '@azure/cognitiveservices-face.LargePersonGroupOperations'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.largePersonGroupPerson'
    name: largePersonGroupPerson
    fullName: largePersonGroupPerson
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'largePersonGroupPerson: LargePersonGroupPerson'
      return:
        type:
          - '@azure/cognitiveservices-face.LargePersonGroupPerson'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.personGroup'
    name: personGroup
    fullName: personGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'personGroup: PersonGroupOperations'
      return:
        type:
          - '@azure/cognitiveservices-face.PersonGroupOperations'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.personGroupPerson'
    name: personGroupPerson
    fullName: personGroupPerson
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'personGroupPerson: PersonGroupPerson'
      return:
        type:
          - '@azure/cognitiveservices-face.PersonGroupPerson'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar una solicitud HTTP que se rellena con el OperationSpec proporcionado.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Los argumentos que se rellenarán los valores de la solicitud HTTP con plantillas de.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec debe usar para rellenar la solicitud HTTP.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            La devolución de llamada cuando se recibe la respuesta.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar la solicitud HTTP proporcionada.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.FaceClient.snapshot'
    name: snapshot
    fullName: snapshot
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'snapshot: SnapshotOperations'
      return:
        type:
          - '@azure/cognitiveservices-face.SnapshotOperations'
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.Face'
    name: Face
    spec.typeScript:
      - name: Face
        fullName: Face
        uid: '@azure/cognitiveservices-face.Face'
  - uid: '@azure/cognitiveservices-face.FaceListOperations'
    name: FaceListOperations
    spec.typeScript:
      - name: FaceListOperations
        fullName: FaceListOperations
        uid: '@azure/cognitiveservices-face.FaceListOperations'
  - uid: '@azure/cognitiveservices-face.LargeFaceListOperations'
    name: LargeFaceListOperations
    spec.typeScript:
      - name: LargeFaceListOperations
        fullName: LargeFaceListOperations
        uid: '@azure/cognitiveservices-face.LargeFaceListOperations'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupOperations'
    name: LargePersonGroupOperations
    spec.typeScript:
      - name: LargePersonGroupOperations
        fullName: LargePersonGroupOperations
        uid: '@azure/cognitiveservices-face.LargePersonGroupOperations'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
    name: LargePersonGroupPerson
    spec.typeScript:
      - name: LargePersonGroupPerson
        fullName: LargePersonGroupPerson
        uid: '@azure/cognitiveservices-face.LargePersonGroupPerson'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations'
    name: PersonGroupOperations
    spec.typeScript:
      - name: PersonGroupOperations
        fullName: PersonGroupOperations
        uid: '@azure/cognitiveservices-face.PersonGroupOperations'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    spec.typeScript:
      - name: PersonGroupPerson
        fullName: PersonGroupPerson
        uid: '@azure/cognitiveservices-face.PersonGroupPerson'
  - uid: '@azure/cognitiveservices-face.SnapshotOperations'
    name: SnapshotOperations
    spec.typeScript:
      - name: SnapshotOperations
        fullName: SnapshotOperations
        uid: '@azure/cognitiveservices-face.SnapshotOperations'