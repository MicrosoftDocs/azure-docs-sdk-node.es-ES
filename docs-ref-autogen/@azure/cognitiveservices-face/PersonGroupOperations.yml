### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations'
    name: PersonGroupOperations
    fullName: PersonGroupOperations
    children:
      - '@azure/cognitiveservices-face.PersonGroupOperations.create'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
      - '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    langs:
      - typeScript
    type: class
    summary: Clase que representa un PersonGroupOperations.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create'
    name: 'create(string, Models.PersonGroupCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Crear un nuevo grupo de persona con personGroupId especificado, el nombre y recognitionModel, userData proporcionado por el usuario.
      <br /> Una persona del grupo es el contenedor de los datos de la persona cargados, incluidas las características de reconocimiento de caras.
      <br /> Después de crear, usar [crear grupo de personas persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523c) agregar personas al grupo y, a continuación, llamar a [grupo de personas - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) para estar preparado para este grupo [enfrentan: identificación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239).
      <br /> No hay ninguna imagen se almacenará. Solo la persona extraídos características faciales y userData se almacenarán en el servidor hasta que [eliminar grupo de personas persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) o [grupo de personas - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) se llama.
      <br/>Para asociar a esta persona, grupo, se debe especificar 'recognitionModel'. El valor predeterminado de 'recognitionModel' es 'recognition_01', si el modelo más reciente es necesario, especifique explícitamente el modelo que necesita en este parámetro. Las caras nuevas que se agregan a un grupo existente de la persona que utilizará el modelo de reconocimiento que ya está asociado con la colección. No se puede actualizar las características existentes de cara de un grupo de la persona a las características extraídas por otra versión del modelo de reconocimiento.
      * 'recognition_01': El modelo de reconocimiento de forma predeterminada para [grupo de personas - crear](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395244). Todos esos grupos de personas creados antes de marzo de 2019 están enlazados con este modelo de reconocimiento.
      * 'recognition_02': Modelo de reconocimiento que se lanzó en marzo de 2019. se recomienda 'recognition_02' porque su precisión global se ha mejorado en comparación con 'recognition_01'.
      Cuota de grupo de persona:
      * Cuota de suscripción del nivel gratuito: 1.000 grupos de personas. Cada una contiene a hasta 1000 personas.
      * Cuota de suscripción del nivel s0: 1 000 000 grupos de personas. Cada una contiene a hasta 10 000 personas.
      * para controlar el problema de identificación de caras de escala más grande, considere la posibilidad de usar [LargePersonGroup](/docs/services/563879b61984550e40cbbe8d/operations/599acdee6ac60f11b48b5a9d).
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - Models.PersonGroupCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_2'
    name: 'create(string, PersonGroupCreateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupCreateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.create_1'
    name: 'create(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod'
    name: 'deleteMethod(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Eliminar un grupo existente de la persona. Conserva la cara también se eliminarán las características de todas las personas en el grupo de persona.
    syntax:
      content: 'function deleteMethod(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_2'
    name: 'deleteMethod(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.deleteMethod_1'
    name: 'deleteMethod(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get'
    name: 'get(string, Models.PersonGroupGetOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recuperar recognitionModel, userData y nombre del grupo de persona. Para obtener información de la persona en este grupo de personas, use [persona del grupo de personas - lista](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395241).'
    syntax:
      content: 'function get(personGroupId: string, options?: Models.PersonGroupGetOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - Models.PersonGroupGetOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_2'
    name: 'get(string, PersonGroupGetOptionalParams, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, options: PersonGroupGetOptionalParams, callback: ServiceCallback<PersonGroup>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.get_1'
    name: 'get(string, ServiceCallback<PersonGroup>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, callback: ServiceCallback<PersonGroup>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus'
    name: 'getTrainingStatus(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Recuperar el estado de entrenamiento de un grupo de la persona (completado o en curso).
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_2'
    name: 'getTrainingStatus(string, RequestOptionsBase, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.getTrainingStatus_1'
    name: 'getTrainingStatus(string, ServiceCallback<TrainingStatus>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getTrainingStatus(personGroupId: string, callback: ServiceCallback<TrainingStatus>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupGetTrainingStatusResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list'
    name: list(Models.PersonGroupListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Lista de grupos de personas personGroupId, nombre, userData y recognitionModel.<br />
      * Grupos de personas se almacenan en orden alfabético de personGroupId.
      * parámetro "start" (cadena, opcional) es un valor de personGroupId proporcionado por el usuario que devuelven las entradas tienen identificadores mayor mediante la comparación de cadenas. "start" establecido en vacío para indicar si la devolución desde el primer elemento.
      * parámetro "top" (int, opcional) especifica el número de entradas que se devolverá. En una llamada, se puede devolver un máximo de 1000 entradas. Para capturar más, puede especificar "start" con el Id. de la entrada devuelta último de la llamada actual.
      <br />
      Por ejemplo, total de 5 grupos de personas: "group1",..., "Grupo5".
      <br /> "empezar = & principales =" devolverá todos los grupos de 5.
      <br /> "empezar = & top = 2" devolverá "group1", "group2".
      <br /> "empezar = group2 & superior = 3" devolverá "Grupo3", "grupo 4", "Grupo5".
    syntax:
      content: 'function list(options?: Models.PersonGroupListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.PersonGroupListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_2'
    name: 'list(PersonGroupListOptionalParams, ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: PersonGroupListOptionalParams, callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.list_1'
    name: 'list(ServiceCallback<PersonGroup[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<PersonGroup[]>)'
      parameters:
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.constructor'
    name: PersonGroupOperations(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crear un PersonGroupOperations.
    syntax:
      content: 'new PersonGroupOperations(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Referencia para el cliente del servicio.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train'
    name: 'train(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Poner en cola una tarea de aprendizaje del grupo de persona, puede que no se inicie inmediatamente la tarea de aprendizaje.'
    syntax:
      content: 'function train(personGroupId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_2'
    name: 'train(string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.train_1'
    name: 'train(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function train(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update'
    name: 'update(string, Models.PersonGroupUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Actualice el nombre para mostrar de un grupo existente: persona y userData. No se actualizará las propiedades que no aparece en el cuerpo de la solicitud.'
    syntax:
      content: 'function update(personGroupId: string, options?: Models.PersonGroupUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - Models.PersonGroupUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_2'
    name: 'update(string, PersonGroupUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, options: PersonGroupUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupOperations.update_1'
    name: 'update(string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
    name: PersonGroupCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupCreateOptionalParams
        fullName: PersonGroupCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupCreateOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersonGroup>
    name: PersonGroup>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
    name: PersonGroupGetOptionalParams
    spec.typeScript:
      - name: PersonGroupGetOptionalParams
        fullName: PersonGroupGetOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupGetOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.TrainingStatus>
    name: TrainingStatus>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: TrainingStatus
        fullName: TrainingStatus
        uid: '@azure/cognitiveservices-face.TrainingStatus'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.PersonGroup[]>'
    name: 'PersonGroup[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersonGroup
        fullName: PersonGroup
        uid: '@azure/cognitiveservices-face.PersonGroup'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
    name: PersonGroupListOptionalParams
    spec.typeScript:
      - name: PersonGroupListOptionalParams
        fullName: PersonGroupListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'
    name: PersonGroupUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupUpdateOptionalParams
        fullName: PersonGroupUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupUpdateOptionalParams'