### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.Face'
    name: Face
    fullName: Face
    children:
      - '@azure/cognitiveservices-face.Face.detectWithStream_2'
      - '@azure/cognitiveservices-face.Face.detectWithStream'
      - '@azure/cognitiveservices-face.Face.detectWithStream_1'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_2'
      - '@azure/cognitiveservices-face.Face.detectWithUrl'
      - '@azure/cognitiveservices-face.Face.detectWithUrl_1'
      - '@azure/cognitiveservices-face.Face.constructor'
      - '@azure/cognitiveservices-face.Face.findSimilar_2'
      - '@azure/cognitiveservices-face.Face.findSimilar'
      - '@azure/cognitiveservices-face.Face.findSimilar_1'
      - '@azure/cognitiveservices-face.Face.group'
      - '@azure/cognitiveservices-face.Face.group_2'
      - '@azure/cognitiveservices-face.Face.group_1'
      - '@azure/cognitiveservices-face.Face.identify_2'
      - '@azure/cognitiveservices-face.Face.identify'
      - '@azure/cognitiveservices-face.Face.identify_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
      - '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    langs:
      - typeScript
    type: class
    summary: <span data-ttu-id="aabbc-101">Clase que representa una cara.</span><span class="sxs-lookup"><span data-stu-id="aabbc-101">Class representing a Face.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_2'
    name: 'detectWithStream(msRest.HttpRequestBody, FaceDetectWithStreamOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options: FaceDetectWithStreamOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="aabbc-102">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="aabbc-102">An image stream.</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
          description: <span data-ttu-id="aabbc-103">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-103">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="aabbc-104">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-104">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream'
    name: 'detectWithStream(msRest.HttpRequestBody, Models.FaceDetectWithStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="aabbc-105">Detecte caras humanas en una imagen, los rectángulos de caras devuelto y opcionalmente con faceIds, puntos de referencia y atributos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-105">Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.</span></span><br />
      * <span data-ttu-id="aabbc-106">No hay ninguna imagen se almacenará.</span><span class="sxs-lookup"><span data-stu-id="aabbc-106">No image will be stored.</span></span> <span data-ttu-id="aabbc-107">Solo la característica de cara extraídos se almacenarán en el servidor.</span><span class="sxs-lookup"><span data-stu-id="aabbc-107">Only the extracted face feature will be stored on server.</span></span> <span data-ttu-id="aabbc-108">El faceId es un identificador de la característica de cara y se usará en [enfrentan: identificación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [enfrentan: comprobación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)y [cara</span><span class="sxs-lookup"><span data-stu-id="aabbc-108">The faceId is an identifier of the face feature and will be used in [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>
      - <span data-ttu-id="aabbc-109">Buscar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="aabbc-109">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span>
      <span data-ttu-id="aabbc-110">Las características de cara almacenado expirarán y se eliminarán las 24 horas después de la llamada original de detección.</span><span class="sxs-lookup"><span data-stu-id="aabbc-110">The stored face feature(s) will expire and be deleted 24 hours after the original detection call.</span></span>
      * <span data-ttu-id="aabbc-111">Parámetros opcionales son faceId, puntos de referencia y atributos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-111">Optional parameters include faceId, landmarks, and attributes.</span></span> <span data-ttu-id="aabbc-112">Atributos incluyen la edad, sexo, headPose, sonrisa, facialHair, gafas, emotion, pelo, composición, oclusión, Accesorios, desenfoque, exposición y ruido.</span><span class="sxs-lookup"><span data-stu-id="aabbc-112">Attributes include age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise.</span></span> <span data-ttu-id="aabbc-113">Algunos de los resultados devueltos para atributos específicos no pueden ser muy precisos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-113">Some of the results returned for specific attributes may not be highly accurate.</span></span>
      * <span data-ttu-id="aabbc-114">Se admiten JPEG, PNG, GIF (el primer fotograma) y el formato BMP.</span><span class="sxs-lookup"><span data-stu-id="aabbc-114">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="aabbc-115">El tamaño del archivo de imagen permitido es de 1KB a 6MB.</span><span class="sxs-lookup"><span data-stu-id="aabbc-115">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="aabbc-116">Hasta 100 caras se pueden devolver para una imagen.</span><span class="sxs-lookup"><span data-stu-id="aabbc-116">Up to 100 faces can be returned for an image.</span></span> <span data-ttu-id="aabbc-117">Caras se clasifican según el tamaño del rectángulo de cara de grande a pequeño.</span><span class="sxs-lookup"><span data-stu-id="aabbc-117">Faces are ranked by face rectangle size from large to small.</span></span>
      * <span data-ttu-id="aabbc-118">Para obtener resultados óptimos al consultar [enfrentan: identificación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [enfrentan: comprobación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)y [cara</span><span class="sxs-lookup"><span data-stu-id="aabbc-118">For optimal results when querying [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>
      - <span data-ttu-id="aabbc-119">Buscar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) ('returnFaceId' es true), use las caras que son: frontal, claro y con un tamaño mínimo de 200 x 200 píxeles (100 píxeles entre los ojos).</span><span class="sxs-lookup"><span data-stu-id="aabbc-119">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).</span></span>
      * <span data-ttu-id="aabbc-120">El tamaño mínimo de cara detectable es 36 x 36 píxeles en una imagen no superior a 1920 x 1080 píxeles.</span><span class="sxs-lookup"><span data-stu-id="aabbc-120">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="aabbc-121">Las imágenes con dimensiones superiores a 1920 x 1080 píxeles tendrá un tamaño mínimo de cara proporcionalmente mayor.</span><span class="sxs-lookup"><span data-stu-id="aabbc-121">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="aabbc-122">Se pueden proporcionar valores diferentes 'detectionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-122">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="aabbc-123">Para usar y comparar los modelos de detección diferente, consulte [cómo especificar un modelo de detección](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="aabbc-123">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="aabbc-124">Modelo</span><span class="sxs-lookup"><span data-stu-id="aabbc-124">Model</span></span> | <span data-ttu-id="aabbc-125">Uso recomendado-case(s)</span><span class="sxs-lookup"><span data-stu-id="aabbc-125">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="aabbc-126">'detection_01':</span><span class="sxs-lookup"><span data-stu-id="aabbc-126">'detection_01':</span></span> | <span data-ttu-id="aabbc-127">El modelo de detección predeterminado para [cara:</span><span class="sxs-lookup"><span data-stu-id="aabbc-127">The default detection model for [Face -</span></span>
      <span data-ttu-id="aabbc-128">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="aabbc-128">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span> <span data-ttu-id="aabbc-129">Se recomienda para cerca de la detección de caras frontales.</span><span class="sxs-lookup"><span data-stu-id="aabbc-129">Recommend for near frontal face detection.</span></span> <span data-ttu-id="aabbc-130">Para escenarios con caras de ángulo excepcionalmente grandes (poses), caras ocluidas u orientación de la imagen incorrecta, no se pueden detectar las caras en estos casos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-130">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="aabbc-131">| | 'detection_02': | Es posible que un modelo de detección publicada en 2019 con una mayor precisión, especialmente en las caras pequeñas, en paralelo y borrosas.</span><span class="sxs-lookup"><span data-stu-id="aabbc-131">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> |
      * <span data-ttu-id="aabbc-132">Se proporcionan valores diferentes 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-132">Different 'recognitionModel' values are provided.</span></span> <span data-ttu-id="aabbc-133">Si las operaciones de seguimiento como Verify, identificar, buscar similares son necesarios, especifique el modelo de reconocimiento con el parámetro 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-133">If follow-up operations like Verify, Identify, Find Similar are needed, please specify the recognition model with 'recognitionModel' parameter.</span></span> <span data-ttu-id="aabbc-134">El valor predeterminado de 'recognitionModel' es 'recognition_01', si el modelo más reciente es necesario, especifique explícitamente el modelo que necesita en este parámetro.</span><span class="sxs-lookup"><span data-stu-id="aabbc-134">The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="aabbc-135">Una vez que se especifica, se asociará el faceIds detectado con el modelo de reconocimiento especificado.</span><span class="sxs-lookup"><span data-stu-id="aabbc-135">Once specified, the detected faceIds will be associated with the specified recognition model.</span></span> <span data-ttu-id="aabbc-136">Obtener más información, consulte [cómo especificar un modelo de reconocimiento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span><span class="sxs-lookup"><span data-stu-id="aabbc-136">More details, please refer to [How to specify a recognition model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span></span>
      | <span data-ttu-id="aabbc-137">Modelo</span><span class="sxs-lookup"><span data-stu-id="aabbc-137">Model</span></span> | <span data-ttu-id="aabbc-138">Uso recomendado-case(s)</span><span class="sxs-lookup"><span data-stu-id="aabbc-138">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="aabbc-139">'recognition_01':</span><span class="sxs-lookup"><span data-stu-id="aabbc-139">'recognition_01':</span></span> | <span data-ttu-id="aabbc-140">El modelo de reconocimiento predeterminado para [cara:</span><span class="sxs-lookup"><span data-stu-id="aabbc-140">The default recognition model for [Face -</span></span>
      <span data-ttu-id="aabbc-141">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="aabbc-141">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span> <span data-ttu-id="aabbc-142">Todas esas faceIds creadas antes de marzo de 2019 están enlazados con este modelo de reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="aabbc-142">All those faceIds created before 2019 March are bonded with this recognition model.</span></span> <span data-ttu-id="aabbc-143">| | 'recognition_02': | Modelo de reconocimiento que se lanzó en marzo de 2019.</span><span class="sxs-lookup"><span data-stu-id="aabbc-143">| | 'recognition_02': | Recognition model released in 2019 March.</span></span> <span data-ttu-id="aabbc-144">se recomienda 'recognition_02' porque su precisión global se ha mejorado en comparación con 'recognition_01'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-144">'recognition_02' is recommended since its overall accuracy is improved compared with 'recognition_01'.</span></span> |
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, options?: Models.FaceDetectWithStreamOptionalParams)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="aabbc-145">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="aabbc-145">An image stream.</span></span>
        - id: options
          type:
            - Models.FaceDetectWithStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithStream_1'
    name: 'detectWithStream(msRest.HttpRequestBody, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithStream(image: msRest.HttpRequestBody, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: image
          type:
            - msRest.HttpRequestBody
          description: <span data-ttu-id="aabbc-146">Una secuencia de imagen.</span><span class="sxs-lookup"><span data-stu-id="aabbc-146">An image stream.</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="aabbc-147">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-147">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_2'
    name: 'detectWithUrl(string, FaceDetectWithUrlOptionalParams, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, options: FaceDetectWithUrlOptionalParams, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="aabbc-148">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="aabbc-148">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
          description: <span data-ttu-id="aabbc-149">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-149">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="aabbc-150">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-150">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl'
    name: 'detectWithUrl(string, Models.FaceDetectWithUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="aabbc-151">Detecte caras humanas en una imagen, los rectángulos de caras devuelto y opcionalmente con faceIds, puntos de referencia y atributos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-151">Detect human faces in an image, return face rectangles, and optionally with faceIds, landmarks, and attributes.</span></span><br />
      * <span data-ttu-id="aabbc-152">No hay ninguna imagen se almacenará.</span><span class="sxs-lookup"><span data-stu-id="aabbc-152">No image will be stored.</span></span> <span data-ttu-id="aabbc-153">Solo la característica de cara extraídos se almacenarán en el servidor.</span><span class="sxs-lookup"><span data-stu-id="aabbc-153">Only the extracted face feature will be stored on server.</span></span> <span data-ttu-id="aabbc-154">El faceId es un identificador de la característica de cara y se usará en [enfrentan: identificación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [enfrentan: comprobación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)y [cara</span><span class="sxs-lookup"><span data-stu-id="aabbc-154">The faceId is an identifier of the face feature and will be used in [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>
      - <span data-ttu-id="aabbc-155">Buscar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span><span class="sxs-lookup"><span data-stu-id="aabbc-155">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237).</span></span>
      <span data-ttu-id="aabbc-156">Las características de cara almacenado expirarán y se eliminarán las 24 horas después de la llamada original de detección.</span><span class="sxs-lookup"><span data-stu-id="aabbc-156">The stored face feature(s) will expire and be deleted 24 hours after the original detection call.</span></span>
      * <span data-ttu-id="aabbc-157">Parámetros opcionales son faceId, puntos de referencia y atributos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-157">Optional parameters include faceId, landmarks, and attributes.</span></span> <span data-ttu-id="aabbc-158">Atributos incluyen la edad, sexo, headPose, sonrisa, facialHair, gafas, emotion, pelo, composición, oclusión, Accesorios, desenfoque, exposición y ruido.</span><span class="sxs-lookup"><span data-stu-id="aabbc-158">Attributes include age, gender, headPose, smile, facialHair, glasses, emotion, hair, makeup, occlusion, accessories, blur, exposure and noise.</span></span> <span data-ttu-id="aabbc-159">Algunos de los resultados devueltos para atributos específicos no pueden ser muy precisos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-159">Some of the results returned for specific attributes may not be highly accurate.</span></span>
      * <span data-ttu-id="aabbc-160">Se admiten JPEG, PNG, GIF (el primer fotograma) y el formato BMP.</span><span class="sxs-lookup"><span data-stu-id="aabbc-160">JPEG, PNG, GIF (the first frame), and BMP format are supported.</span></span> <span data-ttu-id="aabbc-161">El tamaño del archivo de imagen permitido es de 1KB a 6MB.</span><span class="sxs-lookup"><span data-stu-id="aabbc-161">The allowed image file size is from 1KB to 6MB.</span></span>
      * <span data-ttu-id="aabbc-162">Hasta 100 caras se pueden devolver para una imagen.</span><span class="sxs-lookup"><span data-stu-id="aabbc-162">Up to 100 faces can be returned for an image.</span></span> <span data-ttu-id="aabbc-163">Caras se clasifican según el tamaño del rectángulo de cara de grande a pequeño.</span><span class="sxs-lookup"><span data-stu-id="aabbc-163">Faces are ranked by face rectangle size from large to small.</span></span>
      * <span data-ttu-id="aabbc-164">Para obtener resultados óptimos al consultar [enfrentan: identificación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [enfrentan: comprobación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a)y [cara</span><span class="sxs-lookup"><span data-stu-id="aabbc-164">For optimal results when querying [Face - Identify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395239), [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a), and [Face</span></span>
      - <span data-ttu-id="aabbc-165">Buscar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) ('returnFaceId' es true), use las caras que son: frontal, claro y con un tamaño mínimo de 200 x 200 píxeles (100 píxeles entre los ojos).</span><span class="sxs-lookup"><span data-stu-id="aabbc-165">Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) ('returnFaceId' is true), please use faces that are: frontal, clear, and with a minimum size of 200x200 pixels (100 pixels between eyes).</span></span>
      * <span data-ttu-id="aabbc-166">El tamaño mínimo de cara detectable es 36 x 36 píxeles en una imagen no superior a 1920 x 1080 píxeles.</span><span class="sxs-lookup"><span data-stu-id="aabbc-166">The minimum detectable face size is 36x36 pixels in an image no larger than 1920x1080 pixels.</span></span>
      <span data-ttu-id="aabbc-167">Las imágenes con dimensiones superiores a 1920 x 1080 píxeles tendrá un tamaño mínimo de cara proporcionalmente mayor.</span><span class="sxs-lookup"><span data-stu-id="aabbc-167">Images with dimensions higher than 1920x1080 pixels will need a proportionally larger minimum face size.</span></span>
      * <span data-ttu-id="aabbc-168">Se pueden proporcionar valores diferentes 'detectionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-168">Different 'detectionModel' values can be provided.</span></span> <span data-ttu-id="aabbc-169">Para usar y comparar los modelos de detección diferente, consulte [cómo especificar un modelo de detección](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span><span class="sxs-lookup"><span data-stu-id="aabbc-169">To use and compare different detection models, please refer to [How to specify a detection model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)</span></span>
      | <span data-ttu-id="aabbc-170">Modelo</span><span class="sxs-lookup"><span data-stu-id="aabbc-170">Model</span></span> | <span data-ttu-id="aabbc-171">Uso recomendado-case(s)</span><span class="sxs-lookup"><span data-stu-id="aabbc-171">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="aabbc-172">'detection_01':</span><span class="sxs-lookup"><span data-stu-id="aabbc-172">'detection_01':</span></span> | <span data-ttu-id="aabbc-173">El modelo de detección predeterminado para [cara:</span><span class="sxs-lookup"><span data-stu-id="aabbc-173">The default detection model for [Face -</span></span>
      <span data-ttu-id="aabbc-174">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="aabbc-174">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span> <span data-ttu-id="aabbc-175">Se recomienda para cerca de la detección de caras frontales.</span><span class="sxs-lookup"><span data-stu-id="aabbc-175">Recommend for near frontal face detection.</span></span> <span data-ttu-id="aabbc-176">Para escenarios con caras de ángulo excepcionalmente grandes (poses), caras ocluidas u orientación de la imagen incorrecta, no se pueden detectar las caras en estos casos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-176">For scenarios with exceptionally large angle (head-pose) faces, occluded faces or wrong image orientation, the faces in such cases may not be detected.</span></span> <span data-ttu-id="aabbc-177">| | 'detection_02': | Es posible que un modelo de detección publicada en 2019 con una mayor precisión, especialmente en las caras pequeñas, en paralelo y borrosas.</span><span class="sxs-lookup"><span data-stu-id="aabbc-177">| | 'detection_02': | Detection model released in 2019 May with improved accuracy especially on small, side and blurry faces.</span></span> |
      * <span data-ttu-id="aabbc-178">Se proporcionan valores diferentes 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-178">Different 'recognitionModel' values are provided.</span></span> <span data-ttu-id="aabbc-179">Si las operaciones de seguimiento como Verify, identificar, buscar similares son necesarios, especifique el modelo de reconocimiento con el parámetro 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-179">If follow-up operations like Verify, Identify, Find Similar are needed, please specify the recognition model with 'recognitionModel' parameter.</span></span> <span data-ttu-id="aabbc-180">El valor predeterminado de 'recognitionModel' es 'recognition_01', si el modelo más reciente es necesario, especifique explícitamente el modelo que necesita en este parámetro.</span><span class="sxs-lookup"><span data-stu-id="aabbc-180">The default value for 'recognitionModel' is 'recognition_01', if latest model needed, please explicitly specify the model you need in this parameter.</span></span> <span data-ttu-id="aabbc-181">Una vez que se especifica, se asociará el faceIds detectado con el modelo de reconocimiento especificado.</span><span class="sxs-lookup"><span data-stu-id="aabbc-181">Once specified, the detected faceIds will be associated with the specified recognition model.</span></span> <span data-ttu-id="aabbc-182">Obtener más información, consulte [cómo especificar un modelo de reconocimiento](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span><span class="sxs-lookup"><span data-stu-id="aabbc-182">More details, please refer to [How to specify a recognition model](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-recognition-model)</span></span>
      | <span data-ttu-id="aabbc-183">Modelo</span><span class="sxs-lookup"><span data-stu-id="aabbc-183">Model</span></span> | <span data-ttu-id="aabbc-184">Uso recomendado-case(s)</span><span class="sxs-lookup"><span data-stu-id="aabbc-184">Recommended use-case(s)</span></span> |
      | ---------- | -------- |
      | <span data-ttu-id="aabbc-185">'recognition_01':</span><span class="sxs-lookup"><span data-stu-id="aabbc-185">'recognition_01':</span></span> | <span data-ttu-id="aabbc-186">El modelo de reconocimiento predeterminado para [cara:</span><span class="sxs-lookup"><span data-stu-id="aabbc-186">The default recognition model for [Face -</span></span>
      <span data-ttu-id="aabbc-187">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span><span class="sxs-lookup"><span data-stu-id="aabbc-187">Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).</span></span> <span data-ttu-id="aabbc-188">Todas esas faceIds creadas antes de marzo de 2019 están enlazados con este modelo de reconocimiento.</span><span class="sxs-lookup"><span data-stu-id="aabbc-188">All those faceIds created before 2019 March are bonded with this recognition model.</span></span> <span data-ttu-id="aabbc-189">| | 'recognition_02': | Modelo de reconocimiento que se lanzó en marzo de 2019.</span><span class="sxs-lookup"><span data-stu-id="aabbc-189">| | 'recognition_02': | Recognition model released in 2019 March.</span></span> <span data-ttu-id="aabbc-190">se recomienda 'recognition_02' porque su precisión global se ha mejorado en comparación con 'recognition_01'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-190">'recognition_02' is recommended since its overall accuracy is improved compared with 'recognition_01'.</span></span> |
    syntax:
      content: 'function detectWithUrl(url: string, options?: Models.FaceDetectWithUrlOptionalParams)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="aabbc-191">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="aabbc-191">Publicly reachable URL of an image</span></span>
        - id: options
          type:
            - Models.FaceDetectWithUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.detectWithUrl_1'
    name: 'detectWithUrl(string, ServiceCallback<DetectedFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function detectWithUrl(url: string, callback: ServiceCallback<DetectedFace[]>)'
      parameters:
        - id: url
          type:
            - string
          description: <span data-ttu-id="aabbc-192">Dirección URL accesible públicamente de una imagen</span><span class="sxs-lookup"><span data-stu-id="aabbc-192">Publicly reachable URL of an image</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
          description: |
            <span data-ttu-id="aabbc-193">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-193">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceDetectWithUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.constructor'
    name: Face(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="aabbc-194">Creación de una cara.</span><span class="sxs-lookup"><span data-stu-id="aabbc-194">Create a Face.</span></span>
    syntax:
      content: 'new Face(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            <span data-ttu-id="aabbc-195">Referencia para el cliente del servicio.</span><span class="sxs-lookup"><span data-stu-id="aabbc-195">Reference to the service client.</span></span>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_2'
    name: 'findSimilar(string, FaceFindSimilarOptionalParams, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, options: FaceFindSimilarOptionalParams, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="aabbc-196">FaceId de la cara de la consulta.</span><span class="sxs-lookup"><span data-stu-id="aabbc-196">FaceId of the query face.</span></span> <span data-ttu-id="aabbc-197">Usuario debe llamar a Face: detectar primero para obtener un faceId válido.</span><span class="sxs-lookup"><span data-stu-id="aabbc-197">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="aabbc-198">Tenga en cuenta que este faceId no se conserva y expirará en 24 horas después de la llamada de detección</span><span class="sxs-lookup"><span data-stu-id="aabbc-198">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
          description: <span data-ttu-id="aabbc-199">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-199">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="aabbc-200">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-200">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar'
    name: 'findSimilar(string, Models.FaceFindSimilarOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="aabbc-201">Dado faceId de cara de la consulta, para buscar las caras parecidas desde una matriz faceId, una lista de caras o una lista de caras de gran tamaño.</span><span class="sxs-lookup"><span data-stu-id="aabbc-201">Given query face's faceId, to search the similar-looking faces from a faceId array, a face list or a large face list.</span></span> <span data-ttu-id="aabbc-202">faceId matriz contiene las caras creadas por [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), que caducará 24 horas después de su creación.</span><span class="sxs-lookup"><span data-stu-id="aabbc-202">faceId array contains the faces created by [Face - Detect](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), which will expire 24 hours after creation.</span></span> <span data-ttu-id="aabbc-203">Crea un "faceListId" [FaceList - crear](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) que contiene persistedFaceIds que no caduca.</span><span class="sxs-lookup"><span data-stu-id="aabbc-203">A "faceListId" is created by [FaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039524b) containing persistedFaceIds that will not expire.</span></span> <span data-ttu-id="aabbc-204">Y lo crea un "largeFaceListId" [LargeFaceList - crear](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) que contiene persistedFaceIds que también no caduca.</span><span class="sxs-lookup"><span data-stu-id="aabbc-204">And a "largeFaceListId" is created by [LargeFaceList - Create](/docs/services/563879b61984550e40cbbe8d/operations/5a157b68d2de3616c086f2cc) containing persistedFaceIds that will also not expire.</span></span> <span data-ttu-id="aabbc-205">Dependiendo de la entrada de la lista de caras similares devuelta contiene faceIds o persistedFaceIds clasificados por similitud.</span><span class="sxs-lookup"><span data-stu-id="aabbc-205">Depending on the input the returned similar faces list contains faceIds or persistedFaceIds ranked by similarity.</span></span>
      <br/><span data-ttu-id="aabbc-206">Buscar similar tiene dos modos de funcionamiento, "matchPerson" y "matchFace".</span><span class="sxs-lookup"><span data-stu-id="aabbc-206">Find similar has two working modes, "matchPerson" and "matchFace".</span></span> <span data-ttu-id="aabbc-207">"matchPerson" es el modo predeterminado que intenta encontrar caras de la misma persona como sea posible mediante el uso internos umbrales de la misma persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-207">"matchPerson" is the default mode that it tries to find faces of the same person as possible by using internal same-person thresholds.</span></span> <span data-ttu-id="aabbc-208">Es útil buscar un conocido otras fotografías de la persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-208">It is useful to find a known person's other photos.</span></span> <span data-ttu-id="aabbc-209">Tenga en cuenta que se devolverá una lista vacía si ninguna de las caras superan los umbrales internos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-209">Note that an empty list will be returned if no faces pass the internal thresholds.</span></span> <span data-ttu-id="aabbc-210">modo de "matchFace" omite los umbrales de la misma persona y devuelve clasificados caras similares de todos modos, incluso la similitud es baja.</span><span class="sxs-lookup"><span data-stu-id="aabbc-210">"matchFace" mode ignores same-person thresholds and returns ranked similar faces anyway, even the similarity is low.</span></span> <span data-ttu-id="aabbc-211">Se puede usar en los casos, como la búsqueda de caras busca de famosos.</span><span class="sxs-lookup"><span data-stu-id="aabbc-211">It can be used in the cases like searching celebrity-looking faces.</span></span>
      <br/><span data-ttu-id="aabbc-212">Asociado con faceId de la cara consulta 'recognitionModel' debe ser el mismo que el utilizado por la matriz de destino faceId, lista de caras o cara grandes 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-212">The 'recognitionModel' associated with the query face's faceId should be the same as the 'recognitionModel' used by the target faceId array, face list or large face list.</span></span>
    syntax:
      content: 'function findSimilar(faceId: string, options?: Models.FaceFindSimilarOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="aabbc-213">FaceId de la cara de la consulta.</span><span class="sxs-lookup"><span data-stu-id="aabbc-213">FaceId of the query face.</span></span> <span data-ttu-id="aabbc-214">Usuario debe llamar a Face: detectar primero para obtener un faceId válido.</span><span class="sxs-lookup"><span data-stu-id="aabbc-214">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="aabbc-215">Tenga en cuenta que este faceId no se conserva y expirará en 24 horas después de la llamada de detección</span><span class="sxs-lookup"><span data-stu-id="aabbc-215">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>'
        - id: options
          type:
            - Models.FaceFindSimilarOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.findSimilar_1'
    name: 'findSimilar(string, ServiceCallback<SimilarFace[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function findSimilar(faceId: string, callback: ServiceCallback<SimilarFace[]>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="aabbc-216">FaceId de la cara de la consulta.</span><span class="sxs-lookup"><span data-stu-id="aabbc-216">FaceId of the query face.</span></span> <span data-ttu-id="aabbc-217">Usuario debe llamar a Face: detectar primero para obtener un faceId válido.</span><span class="sxs-lookup"><span data-stu-id="aabbc-217">User needs to call Face - Detect first to get a valid faceId.</span></span> <span data-ttu-id="aabbc-218">Tenga en cuenta que este faceId no se conserva y expirará en 24 horas después de la llamada de detección</span><span class="sxs-lookup"><span data-stu-id="aabbc-218">Note that this faceId is not persisted and will expire 24 hours after the detection call</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
          description: |
            <span data-ttu-id="aabbc-219">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-219">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceFindSimilarResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group'
    name: 'group(string[], msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="aabbc-220">Dividir las caras de candidato en grupos en función de similitud de cara.</span><span class="sxs-lookup"><span data-stu-id="aabbc-220">Divide candidate faces into groups based on face similarity.</span></span><br />
      * <span data-ttu-id="aabbc-221">El resultado es un messyGroup y uno o más grupos separados.</span><span class="sxs-lookup"><span data-stu-id="aabbc-221">The output is one or more disjointed face groups and a messyGroup.</span></span> <span data-ttu-id="aabbc-222">Un grupo de caras contiene las caras que tienen similar examinar, a menudo de la misma persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-222">A face group contains faces that have similar looking, often of the same person.</span></span> <span data-ttu-id="aabbc-223">Grupos se clasifican según el tamaño del grupo, es decir, el número de caras.</span><span class="sxs-lookup"><span data-stu-id="aabbc-223">Face groups are ranked by group size, i.e. number of faces.</span></span> <span data-ttu-id="aabbc-224">Tenga en cuenta que las caras que pertenecen a una misma persona podrían dividirse en varios grupos en el resultado.</span><span class="sxs-lookup"><span data-stu-id="aabbc-224">Notice that faces belonging to a same person might be split into several groups in the result.</span></span>
      * <span data-ttu-id="aabbc-225">MessyGroup es un grupo de caras especial que contiene las caras que no se pueden encontrar ninguna cara homólogo similar de caras originales.</span><span class="sxs-lookup"><span data-stu-id="aabbc-225">MessyGroup is a special face group containing faces that cannot find any similar counterpart face from original faces.</span></span> <span data-ttu-id="aabbc-226">El messyGroup no aparecerá en el resultado si sus homólogos no encuentra todas las caras.</span><span class="sxs-lookup"><span data-stu-id="aabbc-226">The messyGroup will not appear in the result if all faces found their counterparts.</span></span>
      * <span data-ttu-id="aabbc-227">API del grupo necesita al menos 2 caras de candidato y 1000 como máximo.</span><span class="sxs-lookup"><span data-stu-id="aabbc-227">Group API needs at least 2 candidate faces and 1000 at most.</span></span> <span data-ttu-id="aabbc-228">Se recomienda para probar [enfrentan: comprobación de](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) cuando solo tiene 2 caras de candidato.</span><span class="sxs-lookup"><span data-stu-id="aabbc-228">We suggest to try [Face - Verify](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523a) when you only have 2 candidate faces.</span></span>
      * <span data-ttu-id="aabbc-229">El asociado faceIds las caras de la consulta 'recognitionModel' debe ser el mismo.</span><span class="sxs-lookup"><span data-stu-id="aabbc-229">The 'recognitionModel' associated with the query faces' faceIds should be the same.</span></span>
    syntax:
      content: 'function group(faceIds: string[], options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="aabbc-230">Matriz de candidato faceId creado por cara: detectar.</span><span class="sxs-lookup"><span data-stu-id="aabbc-230">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="aabbc-231">El valor máximo es 1000 caras</span><span class="sxs-lookup"><span data-stu-id="aabbc-231">The maximum is 1000 faces</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_2'
    name: 'group(string[], RequestOptionsBase, ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], options: RequestOptionsBase, callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="aabbc-232">Matriz de candidato faceId creado por cara: detectar.</span><span class="sxs-lookup"><span data-stu-id="aabbc-232">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="aabbc-233">El valor máximo es 1000 caras</span><span class="sxs-lookup"><span data-stu-id="aabbc-233">The maximum is 1000 faces</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="aabbc-234">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-234">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="aabbc-235">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-235">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.group_1'
    name: 'group(string[], ServiceCallback<GroupResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function group(faceIds: string[], callback: ServiceCallback<GroupResult>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="aabbc-236">Matriz de candidato faceId creado por cara: detectar.</span><span class="sxs-lookup"><span data-stu-id="aabbc-236">Array of candidate faceId created by Face - Detect.</span></span> <span data-ttu-id="aabbc-237">El valor máximo es 1000 caras</span><span class="sxs-lookup"><span data-stu-id="aabbc-237">The maximum is 1000 faces</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.GroupResult>
          description: |
            <span data-ttu-id="aabbc-238">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-238">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceGroupResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_2'
    name: 'identify(string[], FaceIdentifyOptionalParams, ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], options: FaceIdentifyOptionalParams, callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="aabbc-239">Matriz de consulta enfrenta a faceIds, creado por la cara: detectar.</span><span class="sxs-lookup"><span data-stu-id="aabbc-239">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="aabbc-240">Cada una de las caras se identifican de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="aabbc-240">Each of the faces are identified independently.</span></span> <span data-ttu-id="aabbc-241">El número de faceIds válido está comprendido entre [1, 10].</span><span class="sxs-lookup"><span data-stu-id="aabbc-241">The valid number of faceIds is between [1, 10].</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
          description: <span data-ttu-id="aabbc-242">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-242">The optional parameters</span></span>
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="aabbc-243">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-243">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify'
    name: 'identify(string[], Models.FaceIdentifyOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="aabbc-244">identificación de 1 a varios para encontrar a las coincidencias más cercano de la cara de la persona consulta específica de un grupo de persona o grupo grande de person.</span><span class="sxs-lookup"><span data-stu-id="aabbc-244">1-to-many identification to find the closest matches of the specific query person face from a person group or large person group.</span></span>
      <br/> <span data-ttu-id="aabbc-245">Para cada cara de la matriz faceIds, identifique caras calculará similitudes entre la cara de la consulta y todas las caras en el grupo de la persona (proporcionada por personGroupId) o persona grande agrupar (determinado por largePersonGroupId) y devolver el candidato personas para que se enfrentan clasificado por confianza similitud.</span><span class="sxs-lookup"><span data-stu-id="aabbc-245">For each face in the faceIds array, Face Identify will compute similarities between the query face and all the faces in the person group (given by personGroupId) or large person group (given by largePersonGroupId), and return candidate person(s) for that face ranked by similarity confidence.</span></span> <span data-ttu-id="aabbc-246">La persona del grupo de persona grupo/grandes se debe entrenar a prepararla para la identificación.</span><span class="sxs-lookup"><span data-stu-id="aabbc-246">The person group/large person group should be trained to make it ready for identification.</span></span> <span data-ttu-id="aabbc-247">Obtenga más información en [grupo de personas - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) y [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span><span class="sxs-lookup"><span data-stu-id="aabbc-247">See more in [PersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395249) and [LargePersonGroup - Train](/docs/services/563879b61984550e40cbbe8d/operations/599ae2d16ac60f11b48b5aa4).</span></span>
      <br/>
      <span data-ttu-id="aabbc-248">Comentarios:</span><span class="sxs-lookup"><span data-stu-id="aabbc-248">Remarks:</span></span><br />
      * <span data-ttu-id="aabbc-249">El algoritmo permite más de una cara pueda identificarse de forma independiente en la misma solicitud, pero no más de 10 caras.</span><span class="sxs-lookup"><span data-stu-id="aabbc-249">The algorithm allows more than one face to be identified independently at the same request, but no more than 10 faces.</span></span>
      * <span data-ttu-id="aabbc-250">Cada persona en el grupo de grupo/grandes persona persona podría tener más de una cara, pero no más de 248 caras.</span><span class="sxs-lookup"><span data-stu-id="aabbc-250">Each person in the person group/large person group could have more than one face, but no more than 248 faces.</span></span>
      * <span data-ttu-id="aabbc-251">Calidad de imagen de cara superior significa mejorar la precisión de identificación.</span><span class="sxs-lookup"><span data-stu-id="aabbc-251">Higher face image quality means better identification precision.</span></span> <span data-ttu-id="aabbc-252">Considere la posibilidad de caras de alta calidad: frontal, clear y cara tamaño es de 200 x 200 píxeles (100 píxeles entre los ojos) o mayor.</span><span class="sxs-lookup"><span data-stu-id="aabbc-252">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="aabbc-253">Número de candidatos devuelto está restringido por maxNumOfCandidatesReturned y confidenceThreshold.</span><span class="sxs-lookup"><span data-stu-id="aabbc-253">Number of candidates returned is restricted by maxNumOfCandidatesReturned and confidenceThreshold.</span></span> <span data-ttu-id="aabbc-254">Si no se identifica ninguna persona, los candidatos devueltos será una matriz vacía.</span><span class="sxs-lookup"><span data-stu-id="aabbc-254">If no person is identified, the returned candidates will be an empty array.</span></span>
      * <span data-ttu-id="aabbc-255">Pruebe [cara - buscar Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) cuando necesite encontrar caras parecidas en una lista de caras lista o grandes cara en lugar de un grupo de grupo/grandes persona persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-255">Try [Face - Find Similar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395237) when you need to find similar faces from a face list/large face list instead of a person group/large person group.</span></span>
      * <span data-ttu-id="aabbc-256">'RecognitionModel' asociado con faceIds las caras de la consulta debe ser el mismo que el utilizado por el grupo de destino persona o grupo de persona grandes 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-256">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target person group or large person group.</span></span>
    syntax:
      content: 'function identify(faceIds: string[], options?: Models.FaceIdentifyOptionalParams)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="aabbc-257">Matriz de consulta enfrenta a faceIds, creado por la cara: detectar.</span><span class="sxs-lookup"><span data-stu-id="aabbc-257">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="aabbc-258">Cada una de las caras se identifican de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="aabbc-258">Each of the faces are identified independently.</span></span> <span data-ttu-id="aabbc-259">El número de faceIds válido está comprendido entre [1, 10].</span><span class="sxs-lookup"><span data-stu-id="aabbc-259">The valid number of faceIds is between [1, 10].</span></span>'
        - id: options
          type:
            - Models.FaceIdentifyOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.identify_1'
    name: 'identify(string[], ServiceCallback<IdentifyResult[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function identify(faceIds: string[], callback: ServiceCallback<IdentifyResult[]>)'
      parameters:
        - id: faceIds
          type:
            - 'string[]'
          description: '<span data-ttu-id="aabbc-260">Matriz de consulta enfrenta a faceIds, creado por la cara: detectar.</span><span class="sxs-lookup"><span data-stu-id="aabbc-260">Array of query faces faceIds, created by the Face - Detect.</span></span> <span data-ttu-id="aabbc-261">Cada una de las caras se identifican de forma independiente.</span><span class="sxs-lookup"><span data-stu-id="aabbc-261">Each of the faces are identified independently.</span></span> <span data-ttu-id="aabbc-262">El número de faceIds válido está comprendido entre [1, 10].</span><span class="sxs-lookup"><span data-stu-id="aabbc-262">The valid number of faceIds is between [1, 10].</span></span>'
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
          description: |
            <span data-ttu-id="aabbc-263">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-263">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceIdentifyResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace'
    name: 'verifyFaceToFace(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      <span data-ttu-id="aabbc-264">Compruebe si dos caras pertenecen a una misma persona o si una cara pertenece a una persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-264">Verify whether two faces belong to a same person or whether one face belongs to a person.</span></span>
      <br/>
      <span data-ttu-id="aabbc-265">Comentarios:</span><span class="sxs-lookup"><span data-stu-id="aabbc-265">Remarks:</span></span><br />
      * <span data-ttu-id="aabbc-266">Calidad de imagen de cara superior significa mejorar la precisión de identificación.</span><span class="sxs-lookup"><span data-stu-id="aabbc-266">Higher face image quality means better identification precision.</span></span> <span data-ttu-id="aabbc-267">Considere la posibilidad de caras de alta calidad: frontal, clear y cara tamaño es de 200 x 200 píxeles (100 píxeles entre los ojos) o mayor.</span><span class="sxs-lookup"><span data-stu-id="aabbc-267">Please consider high-quality faces: frontal, clear, and face size is 200x200 pixels (100 pixels between eyes) or bigger.</span></span>
      * <span data-ttu-id="aabbc-268">Asegúrese de su propio juicio para los escenarios que son sensibles a la precisión.</span><span class="sxs-lookup"><span data-stu-id="aabbc-268">For the scenarios that are sensitive to accuracy please make your own judgment.</span></span>
      * <span data-ttu-id="aabbc-269">'RecognitionModel' asociado con faceIds las caras de la consulta debe ser el mismo que el utilizado por la cara de destino, persona o grupo persona grandes 'recognitionModel'.</span><span class="sxs-lookup"><span data-stu-id="aabbc-269">The 'recognitionModel' associated with the query faces' faceIds should be the same as the 'recognitionModel' used by the target face, person group or large person group.</span></span>
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="aabbc-270">faceId de la primera cara, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-270">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="aabbc-271">faceId de la cara de la segunda, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-271">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_2'
    name: 'verifyFaceToFace(string, string, RequestOptionsBase, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, options: RequestOptionsBase, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="aabbc-272">faceId de la primera cara, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-272">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="aabbc-273">faceId de la cara de la segunda, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-273">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="aabbc-274">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-274">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="aabbc-275">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-275">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToFace_1'
    name: 'verifyFaceToFace(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToFace(faceId1: string, faceId2: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId1
          type:
            - string
          description: '<span data-ttu-id="aabbc-276">faceId de la primera cara, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-276">FaceId of the first face, comes from Face - Detect</span></span>'
        - id: faceId2
          type:
            - string
          description: '<span data-ttu-id="aabbc-277">faceId de la cara de la segunda, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-277">FaceId of the second face, comes from Face - Detect</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="aabbc-278">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-278">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_2'
    name: 'verifyFaceToPerson(string, string, FaceVerifyFaceToPersonOptionalParams, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options: FaceVerifyFaceToPersonOptionalParams, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="aabbc-279">FaceId de la cara, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-279">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: '<span data-ttu-id="aabbc-280">Especifique a una persona concreta en un grupo de persona o un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-280">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="aabbc-281">personId se crea en el grupo de personas persona: cree o persona LargePersonGroup.</span><span class="sxs-lookup"><span data-stu-id="aabbc-281">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>'
        - id: options
          type:
            - '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
          description: <span data-ttu-id="aabbc-282">Los parámetros opcionales</span><span class="sxs-lookup"><span data-stu-id="aabbc-282">The optional parameters</span></span>
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="aabbc-283">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-283">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson'
    name: 'verifyFaceToPerson(string, string, Models.FaceVerifyFaceToPersonOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="aabbc-284">Compruebe si las dos caras pertenecen a una misma persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-284">Verify whether two faces belong to a same person.</span></span> <span data-ttu-id="aabbc-285">Compara una cara Id con un Id. de persona</span><span class="sxs-lookup"><span data-stu-id="aabbc-285">Compares a face Id with a Person Id</span></span>
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, options?: Models.FaceVerifyFaceToPersonOptionalParams)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="aabbc-286">FaceId de la cara, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-286">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: '<span data-ttu-id="aabbc-287">Especifique a una persona concreta en un grupo de persona o un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-287">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="aabbc-288">personId se crea en el grupo de personas persona: cree o persona LargePersonGroup.</span><span class="sxs-lookup"><span data-stu-id="aabbc-288">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>'
        - id: options
          type:
            - Models.FaceVerifyFaceToPersonOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.Face.verifyFaceToPerson_1'
    name: 'verifyFaceToPerson(string, string, ServiceCallback<VerifyResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function verifyFaceToPerson(faceId: string, personId: string, callback: ServiceCallback<VerifyResult>)'
      parameters:
        - id: faceId
          type:
            - string
          description: '<span data-ttu-id="aabbc-289">FaceId de la cara, procede de caras: detectar</span><span class="sxs-lookup"><span data-stu-id="aabbc-289">FaceId of the face, comes from Face - Detect</span></span>'
        - id: personId
          type:
            - string
          description: '<span data-ttu-id="aabbc-290">Especifique a una persona concreta en un grupo de persona o un grupo grande de persona.</span><span class="sxs-lookup"><span data-stu-id="aabbc-290">Specify a certain person in a person group or a large person group.</span></span> <span data-ttu-id="aabbc-291">personId se crea en el grupo de personas persona: cree o persona LargePersonGroup.</span><span class="sxs-lookup"><span data-stu-id="aabbc-291">personId is created in PersonGroup Person - Create or LargePersonGroup Person - Create.</span></span>'
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
          description: |
            <span data-ttu-id="aabbc-292">La devolución de llamada</span><span class="sxs-lookup"><span data-stu-id="aabbc-292">The callback</span></span>
      return:
        type:
          - Promise<Models.FaceVerifyFaceToPersonResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.DetectedFace[]>'
    name: 'DetectedFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: DetectedFace
        fullName: DetectedFace
        uid: '@azure/cognitiveservices-face.DetectedFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
    name: FaceDetectWithStreamOptionalParams
    spec.typeScript:
      - name: FaceDetectWithStreamOptionalParams
        fullName: FaceDetectWithStreamOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
    name: FaceDetectWithUrlOptionalParams
    spec.typeScript:
      - name: FaceDetectWithUrlOptionalParams
        fullName: FaceDetectWithUrlOptionalParams
        uid: '@azure/cognitiveservices-face.FaceDetectWithUrlOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.SimilarFace[]>'
    name: 'SimilarFace[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: SimilarFace
        fullName: SimilarFace
        uid: '@azure/cognitiveservices-face.SimilarFace'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
    name: FaceFindSimilarOptionalParams
    spec.typeScript:
      - name: FaceFindSimilarOptionalParams
        fullName: FaceFindSimilarOptionalParams
        uid: '@azure/cognitiveservices-face.FaceFindSimilarOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.GroupResult>
    name: GroupResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: GroupResult
        fullName: GroupResult
        uid: '@azure/cognitiveservices-face.GroupResult'
      - name: '>'
        fullName: '>'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.IdentifyResult[]>'
    name: 'IdentifyResult[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: IdentifyResult
        fullName: IdentifyResult
        uid: '@azure/cognitiveservices-face.IdentifyResult'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
    name: FaceIdentifyOptionalParams
    spec.typeScript:
      - name: FaceIdentifyOptionalParams
        fullName: FaceIdentifyOptionalParams
        uid: '@azure/cognitiveservices-face.FaceIdentifyOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.VerifyResult>
    name: VerifyResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: VerifyResult
        fullName: VerifyResult
        uid: '@azure/cognitiveservices-face.VerifyResult'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'
    name: FaceVerifyFaceToPersonOptionalParams
    spec.typeScript:
      - name: FaceVerifyFaceToPersonOptionalParams
        fullName: FaceVerifyFaceToPersonOptionalParams
        uid: '@azure/cognitiveservices-face.FaceVerifyFaceToPersonOptionalParams'