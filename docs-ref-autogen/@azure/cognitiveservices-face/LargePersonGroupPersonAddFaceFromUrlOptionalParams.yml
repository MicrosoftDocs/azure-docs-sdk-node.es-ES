### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams'
    name: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    fullName: LargePersonGroupPersonAddFaceFromUrlOptionalParams
    children:
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.detectionModel'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.timeout'
      - '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="d2eda-101">Parámetros opcionales.</span><span class="sxs-lookup"><span data-stu-id="d2eda-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d2eda-102">La señal que se puede usar para anular las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="d2eda-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="d2eda-103">objeto de {} [customHeaders] Encabezados de solicitud personalizado que se aplicará antes de enviar la solicitud definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="d2eda-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.detectionModel'
    name: detectionModel
    fullName: detectionModel
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="d2eda-104">Nombre del modelo de detección.</span><span class="sxs-lookup"><span data-stu-id="d2eda-104">Name of detection model.</span></span> <span data-ttu-id="d2eda-105">Modelo de detección se usa para detectar caras en la imagen enviada.</span><span class="sxs-lookup"><span data-stu-id="d2eda-105">Detection model is used to detect faces in the submitted image.</span></span> <span data-ttu-id="d2eda-106">Se puede proporcionar un nombre de modelo de detección al realizar la cara - detectar o (grande) FaceList - agregar cara o grupo de personas (grande) - agregar cara.</span><span class="sxs-lookup"><span data-stu-id="d2eda-106">A detection model name can be provided when performing Face - Detect or (Large)FaceList - Add Face or (Large)PersonGroup - Add Face.</span></span> <span data-ttu-id="d2eda-107">El valor predeterminado es ''detection_01'', si se necesita otro modelo, póngase especificarlo explícitamente.</span><span class="sxs-lookup"><span data-stu-id="d2eda-107">The default value is ''detection_01'', if another model is needed, please explicitly specify it.</span></span> <span data-ttu-id="d2eda-108">Los valores posibles son: ''detection_01'', ''detection_02''.</span><span class="sxs-lookup"><span data-stu-id="d2eda-108">Possible values include: ''detection_01'', ''detection_02''.</span></span> <span data-ttu-id="d2eda-109">Valor predeterminado: ''detection_01''.</span><span class="sxs-lookup"><span data-stu-id="d2eda-109">Default value: ''detection_01''.</span></span>'
    optional: true
    syntax:
      content: 'detectionModel?: DetectionModel'
      return:
        type:
          - '@azure/cognitiveservices-face.DetectionModel'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d2eda-110">Devolución de llamada que se desencadena al progreso de la descarga.</span><span class="sxs-lookup"><span data-stu-id="d2eda-110">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d2eda-111">Devolución de llamada que se desencadena al progreso de carga.</span><span class="sxs-lookup"><span data-stu-id="d2eda-111">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="d2eda-112">Un rectángulo facial para especificar la cara de destino que se agregarán a una persona con el formato "targetFace = izquierda, superior, ancho, alto".</span><span class="sxs-lookup"><span data-stu-id="d2eda-112">A face rectangle to specify the target face to be added to a person in the format of "targetFace=left,top,width,height".</span></span> <span data-ttu-id="d2eda-113">Por ejemplo,</span><span class="sxs-lookup"><span data-stu-id="d2eda-113">E.g.</span></span> <span data-ttu-id="d2eda-114">"targetFace = 10, 10, 100, 100".</span><span class="sxs-lookup"><span data-stu-id="d2eda-114">"targetFace=10,10,100,100".</span></span> <span data-ttu-id="d2eda-115">Si hay más de una cara en la imagen, targetFace es necesario para especificar que se enfrentan a agregar.</span><span class="sxs-lookup"><span data-stu-id="d2eda-115">If there is more than one face in the image, targetFace is required to specify which face to add.</span></span> <span data-ttu-id="d2eda-116">No hay targetFace significa que hay sólo una cara detectada en toda la imagen.</span><span class="sxs-lookup"><span data-stu-id="d2eda-116">No targetFace means there is only one face detected in the entire image.</span></span>'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d2eda-117">El número de milisegundos que una solicitud puede tomar antes de finalizar automáticamente.</span><span class="sxs-lookup"><span data-stu-id="d2eda-117">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.LargePersonGroupPersonAddFaceFromUrlOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d2eda-118">Datos especificados por el usuario sobre la cara para ningún propósito.</span><span class="sxs-lookup"><span data-stu-id="d2eda-118">User-specified data about the face for any purpose.</span></span> <span data-ttu-id="d2eda-119">La longitud máxima es de 1KB.</span><span class="sxs-lookup"><span data-stu-id="d2eda-119">The maximum length is 1KB.</span></span>
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.DetectionModel'
    name: DetectionModel
    spec.typeScript:
      - name: DetectionModel
        fullName: DetectionModel
        uid: '@azure/cognitiveservices-face.DetectionModel'