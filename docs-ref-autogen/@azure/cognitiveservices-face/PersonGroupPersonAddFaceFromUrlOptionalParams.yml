### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
    children:
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.abortSignal'
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.customHeaders'
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.onDownloadProgress'
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.onUploadProgress'
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.targetFace'
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.timeout'
      - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.userData'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="ea539-101">Parámetros opcionales.</span><span class="sxs-lookup"><span data-stu-id="ea539-101">Optional Parameters.</span></span>
    extends:
      name: RequestOptionsBase
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.abortSignal'
    name: abortSignal
    fullName: abortSignal
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ea539-102">La señal que se puede usar para anular las solicitudes.</span><span class="sxs-lookup"><span data-stu-id="ea539-102">The signal which can be used to abort requests.</span></span>
    optional: true
    syntax:
      content: 'abortSignal?: AbortSignalLike'
      return:
        type:
          - AbortSignalLike
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.customHeaders'
    name: customHeaders
    fullName: customHeaders
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="ea539-103">objeto de {} [customHeaders] Encabezados de solicitud personalizado que se aplicará antes de enviar la solicitud definido por el usuario.</span><span class="sxs-lookup"><span data-stu-id="ea539-103">{object} [customHeaders] User defined custom request headers that will be applied before the request is sent.</span></span>'
    optional: true
    syntax:
      content: 'customHeaders?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.onDownloadProgress'
    name: onDownloadProgress
    fullName: onDownloadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ea539-104">Devolución de llamada que se desencadena al progreso de la descarga.</span><span class="sxs-lookup"><span data-stu-id="ea539-104">Callback which fires upon download progress.</span></span>
    optional: true
    syntax:
      content: 'onDownloadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.onUploadProgress'
    name: onUploadProgress
    fullName: onUploadProgress
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ea539-105">Devolución de llamada que se desencadena al progreso de carga.</span><span class="sxs-lookup"><span data-stu-id="ea539-105">Callback which fires upon upload progress.</span></span>
    optional: true
    syntax:
      content: 'onUploadProgress?: undefined | (progress: TransferProgressEvent) => void'
      return:
        type:
          - 'undefined | (progress: TransferProgressEvent) => void'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.targetFace'
    name: targetFace
    fullName: targetFace
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="ea539-106">Un rectángulo facial para especificar la cara de destino que se agregarán a una persona con el formato "targetFace = izquierda, superior, ancho, alto".</span><span class="sxs-lookup"><span data-stu-id="ea539-106">A face rectangle to specify the target face to be added to a person in the format of "targetFace=left,top,width,height".</span></span> <span data-ttu-id="ea539-107">Por ejemplo,</span><span class="sxs-lookup"><span data-stu-id="ea539-107">E.g.</span></span> <span data-ttu-id="ea539-108">"targetFace = 10, 10, 100, 100".</span><span class="sxs-lookup"><span data-stu-id="ea539-108">"targetFace=10,10,100,100".</span></span> <span data-ttu-id="ea539-109">Si hay más de una cara en la imagen, targetFace es necesario para especificar que se enfrentan a agregar.</span><span class="sxs-lookup"><span data-stu-id="ea539-109">If there is more than one face in the image, targetFace is required to specify which face to add.</span></span> <span data-ttu-id="ea539-110">No hay targetFace significa que hay sólo una cara detectada en toda la imagen.</span><span class="sxs-lookup"><span data-stu-id="ea539-110">No targetFace means there is only one face detected in the entire image.</span></span>'
    optional: true
    syntax:
      content: 'targetFace?: number[]'
      return:
        type:
          - 'number[]'
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.timeout'
    name: timeout
    fullName: timeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ea539-111">El número de milisegundos que una solicitud puede tomar antes de finalizar automáticamente.</span><span class="sxs-lookup"><span data-stu-id="ea539-111">The number of milliseconds a request can take before automatically being terminated.</span></span>
    optional: true
    syntax:
      content: 'timeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams.userData'
    name: userData
    fullName: userData
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="ea539-112">Datos especificados por el usuario sobre la cara para ningún propósito.</span><span class="sxs-lookup"><span data-stu-id="ea539-112">User-specified data about the face for any purpose.</span></span> <span data-ttu-id="ea539-113">La longitud máxima es de 1KB.</span><span class="sxs-lookup"><span data-stu-id="ea539-113">The maximum length is 1KB.</span></span>
    optional: true
    syntax:
      content: 'userData?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/cognitiveservices-face'