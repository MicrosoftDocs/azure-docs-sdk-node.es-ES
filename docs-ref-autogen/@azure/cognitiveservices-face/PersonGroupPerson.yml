### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson'
    name: PersonGroupPerson
    fullName: PersonGroupPerson
    children:
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
      - '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    langs:
      - typeScript
    type: class
    summary: Clase que representa un PersonGroupPerson.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Agregue una cara a una persona en un grupo de persona para la identificación de caras o comprobación. Para tratar con una imagen que contenga varias caras, la cara de entrada se puede especificar como una imagen con un rectángulo targetFace. Devuelve un persistedFaceId que representa la imagen se ha agregado. No hay ninguna imagen se almacenará.
      Solo la característica de cara extraídos se almacenarán en el servidor hasta que [PersonGroup PersonFace - eliminar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [eliminar grupo de personas persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) o [grupo de personas - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) se llama.
      <br /> Tenga en cuenta persistedFaceId es diferente de faceId generado por [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      *   Mayor calidad de imagen de cara significa mejorar la precisión de reconocimiento. Considere la posibilidad de caras de alta calidad: frontal, clear y cara tamaño es de 200 x 200 píxeles (100 píxeles entre los ojos) o mayor.
      *   Cada entrada de la persona que puede contener hasta 248 caras.
      *   Se admiten JPEG, PNG, GIF (el primer fotograma) y el formato BMP. El tamaño del archivo de imagen permitido es de 1KB a 6MB.
      *   rectángulo "targetFace" debe contener una cara. Cero o varias caras se considerarán como un error. Si no se devuelve el rectángulo proporcionado "targetFace" de [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), no hay ninguna garantía para detectar y agregar la cara correctamente.
      *   Fuera del tamaño de cara detectable (36 x 36-4096 x 4096 píxeles), grandes occlusions poses o grandes, producirán errores.
      *   Agregar o eliminar las caras de una misma persona se procesarán secuencialmente. Agregar o eliminar caras de personas diferentes se procesan en paralelo.
      * El tamaño mínimo de cara detectable es 36 x 36 píxeles en una imagen no superior a 1920 x 1080 píxeles.
      Las imágenes con dimensiones superiores a 1920 x 1080 píxeles tendrá un tamaño mínimo de cara proporcionalmente mayor.
      * Se pueden proporcionar valores diferentes 'detectionModel'. Para usar y comparar los modelos de detección diferente, consulte [cómo especificar un modelo de detección](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modelo | Uso recomendado-case(s) |
      | ---------- | -------- |
      | 'detection_01': | El modelo de detección predeterminado para [grupo de personas persona - agregar
      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b). Se recomienda para cerca de la detección de caras frontales. Para escenarios con caras de ángulo excepcionalmente grandes (poses), caras ocluidas u orientación de la imagen incorrecta, no se pueden detectar las caras en estos casos. | | 'detection_02': | Es posible que un modelo de detección publicada en 2019 con una mayor precisión, especialmente en las caras pequeñas, en paralelo y borrosas. |
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options?: Models.PersonGroupPersonAddFaceFromStreamOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Una secuencia de imagen.
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromStreamOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_2'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, PersonGroupPersonAddFaceFromStreamOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, options: PersonGroupPersonAddFaceFromStreamOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Una secuencia de imagen.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromStream_1'
    name: 'addFaceFromStream(string, string, msRest.HttpRequestBody, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromStream(personGroupId: string, personId: string, image: msRest.HttpRequestBody, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: image
          type:
            - msRest.HttpRequestBody
          description: Una secuencia de imagen.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromStreamResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl'
    name: 'addFaceFromUrl(string, string, string, Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Agregue una cara a una persona en un grupo de persona para la identificación de caras o comprobación. Para tratar con una imagen que contenga varias caras, la cara de entrada se puede especificar como una imagen con un rectángulo targetFace. Devuelve un persistedFaceId que representa la imagen se ha agregado. No hay ninguna imagen se almacenará.
      Solo la característica de cara extraídos se almacenarán en el servidor hasta que [PersonGroup PersonFace - eliminar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [eliminar grupo de personas persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) o [grupo de personas - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) se llama.
      <br /> Tenga en cuenta persistedFaceId es diferente de faceId generado por [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      *   Mayor calidad de imagen de cara significa mejorar la precisión de reconocimiento. Considere la posibilidad de caras de alta calidad: frontal, clear y cara tamaño es de 200 x 200 píxeles (100 píxeles entre los ojos) o mayor.
      *   Cada entrada de la persona que puede contener hasta 248 caras.
      *   Se admiten JPEG, PNG, GIF (el primer fotograma) y el formato BMP. El tamaño del archivo de imagen permitido es de 1KB a 6MB.
      *   rectángulo "targetFace" debe contener una cara. Cero o varias caras se considerarán como un error. Si no se devuelve el rectángulo proporcionado "targetFace" de [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), no hay ninguna garantía para detectar y agregar la cara correctamente.
      *   Fuera del tamaño de cara detectable (36 x 36-4096 x 4096 píxeles), grandes occlusions poses o grandes, producirán errores.
      *   Agregar o eliminar las caras de una misma persona se procesarán secuencialmente. Agregar o eliminar caras de personas diferentes se procesan en paralelo.
      * El tamaño mínimo de cara detectable es 36 x 36 píxeles en una imagen no superior a 1920 x 1080 píxeles.
      Las imágenes con dimensiones superiores a 1920 x 1080 píxeles tendrá un tamaño mínimo de cara proporcionalmente mayor.
      * Se pueden proporcionar valores diferentes 'detectionModel'. Para usar y comparar los modelos de detección diferente, consulte [cómo especificar un modelo de detección](https://docs.microsoft.com/en-us/azure/cognitive-services/face/face-api-how-to-topics/specify-detection-model)
      | Modelo | Uso recomendado-case(s) |
      | ---------- | -------- |
      | 'detection_01': | El modelo de detección predeterminado para [grupo de personas persona - agregar
      Face](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523b). Se recomienda para cerca de la detección de caras frontales. Para escenarios con caras de ángulo excepcionalmente grandes (poses), caras ocluidas u orientación de la imagen incorrecta, no se pueden detectar las caras en estos casos. | | 'detection_02': | Es posible que un modelo de detección publicada en 2019 con una mayor precisión, especialmente en las caras pequeñas, en paralelo y borrosas. |
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options?: Models.PersonGroupPersonAddFaceFromUrlOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: url
          type:
            - string
          description: Dirección URL accesible públicamente de una imagen
        - id: options
          type:
            - Models.PersonGroupPersonAddFaceFromUrlOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_2'
    name: 'addFaceFromUrl(string, string, string, PersonGroupPersonAddFaceFromUrlOptionalParams, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, options: PersonGroupPersonAddFaceFromUrlOptionalParams, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: url
          type:
            - string
          description: Dirección URL accesible públicamente de una imagen
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.addFaceFromUrl_1'
    name: 'addFaceFromUrl(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addFaceFromUrl(personGroupId: string, personId: string, url: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: url
          type:
            - string
          description: Dirección URL accesible públicamente de una imagen
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonAddFaceFromUrlResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create'
    name: 'create(string, Models.PersonGroupPersonCreateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Crear a una nueva persona en un grupo de la persona especificada.
    syntax:
      content: 'function create(personGroupId: string, options?: Models.PersonGroupPersonCreateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - Models.PersonGroupPersonCreateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_2'
    name: 'create(string, PersonGroupPersonCreateOptionalParams, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, options: PersonGroupPersonCreateOptionalParams, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.create_1'
    name: 'create(string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function create(personGroupId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonCreateResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace'
    name: 'deleteFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Eliminar una cara de una persona en un grupo de persona persistedFaceId, personId y personGroupId especificado.
      <br /> Agregar o eliminar las caras de una misma persona se procesarán secuencialmente.
      Agregar o eliminar caras de personas diferentes se procesan en paralelo.
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_2'
    name: 'deleteFace(string, string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteFace_1'
    name: 'deleteFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod'
    name: 'deleteMethod(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Eliminar a una persona existente de un grupo de persona. El persistedFaceId, userData, característica de nombre y la cara de persona en la entrada de la persona que todos se eliminará.'
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_2'
    name: 'deleteMethod(string, string, RequestOptionsBase, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.deleteMethod_1'
    name: 'deleteMethod(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function deleteMethod(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get'
    name: 'get(string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recuperar información de una persona, incluidos userData, nombre y caras persistentes registradas.'
    syntax:
      content: 'function get(personGroupId: string, personId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_2'
    name: 'get(string, string, RequestOptionsBase, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, options: RequestOptionsBase, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.get_1'
    name: 'get(string, string, ServiceCallback<Person>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function get(personGroupId: string, personId: string, callback: ServiceCallback<Person>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.Person>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonGetResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace'
    name: 'getFace(string, string, string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Recuperar información acerca de una cara persistente (especificada por persistedFaceId, personId y su personGroupId perteneciente).'
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_2'
    name: 'getFace(string, string, string, RequestOptionsBase, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, options: RequestOptionsBase, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.getFace_1'
    name: 'getFace(string, string, string, ServiceCallback<PersistedFace>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<PersistedFace>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonGetFaceResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list'
    name: 'list(string, Models.PersonGroupPersonListOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Enumerar a todas las personas de una persona, grupo y recuperar información de la persona (incluido personId, nombre, userData y persistedFaceIds de caras registradas de la persona).'
    syntax:
      content: 'function list(personGroupId: string, options?: Models.PersonGroupPersonListOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - Models.PersonGroupPersonListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_2'
    name: 'list(string, PersonGroupPersonListOptionalParams, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, options: PersonGroupPersonListOptionalParams, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.list_1'
    name: 'list(string, ServiceCallback<Person[]>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(personGroupId: string, callback: ServiceCallback<Person[]>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: callback
          type:
            - 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.PersonGroupPersonListResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.constructor'
    name: PersonGroupPerson(FaceClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crear un PersonGroupPerson.
    syntax:
      content: 'new PersonGroupPerson(client: FaceClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/cognitiveservices-face.FaceClientContext'
          description: |
            Referencia para el cliente del servicio.
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update'
    name: 'update(string, string, Models.PersonGroupPersonUpdateOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Nombre de la actualización o userData de una persona.
    syntax:
      content: 'function update(personGroupId: string, personId: string, options?: Models.PersonGroupPersonUpdateOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_2'
    name: 'update(string, string, PersonGroupPersonUpdateOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, options: PersonGroupPersonUpdateOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.update_1'
    name: 'update(string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function update(personGroupId: string, personId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace'
    name: 'updateFace(string, string, string, Models.PersonGroupPersonUpdateFaceOptionalParams)'
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Agregue una cara a una persona en un grupo de persona para la identificación de caras o comprobación. Para tratar con una imagen que contenga varias caras, la cara de entrada se puede especificar como una imagen con un rectángulo targetFace. Devuelve un persistedFaceId que representa la imagen se ha agregado. No hay ninguna imagen se almacenará.
      Solo la característica de cara extraídos se almacenarán en el servidor hasta que [PersonGroup PersonFace - eliminar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523e), [eliminar grupo de personas persona -](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f3039523d) o [grupo de personas - Delete](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395245) se llama.
      <br /> Tenga en cuenta persistedFaceId es diferente de faceId generado por [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236).
      * Mayor calidad de imagen de cara significa mejorar la precisión de reconocimiento. Considere la posibilidad de caras de alta calidad: frontal, clear y cara tamaño es de 200 x 200 píxeles (100 píxeles entre los ojos) o mayor.
      * Cada entrada de la persona que puede contener hasta 248 caras.
      * Se admiten JPEG, PNG, GIF (el primer fotograma) y el formato BMP. El tamaño del archivo de imagen permitido es de 1KB a 6MB.
      * rectángulo "targetFace" debe contener una cara. Cero o varias caras se considerarán como un error. Si no se devuelve el rectángulo proporcionado "targetFace" de [enfrentan: detectar](/docs/services/563879b61984550e40cbbe8d/operations/563879b61984550f30395236), no hay ninguna garantía para detectar y agregar la cara correctamente.
      * Fuera del tamaño de cara detectable (36 x 36-4096 x 4096 píxeles), grandes occlusions poses o grandes, producirán errores.
      * Agregar o eliminar las caras de una misma persona se procesarán secuencialmente. Agregar o eliminar caras de personas diferentes se procesan en paralelo.
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options?: Models.PersonGroupPersonUpdateFaceOptionalParams)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: options
          type:
            - Models.PersonGroupPersonUpdateFaceOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_2'
    name: 'updateFace(string, string, string, PersonGroupPersonUpdateFaceOptionalParams, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, options: PersonGroupPersonUpdateFaceOptionalParams, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: options
          type:
            - '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
  - uid: '@azure/cognitiveservices-face.PersonGroupPerson.updateFace_1'
    name: 'updateFace(string, string, string, ServiceCallback<void>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateFace(personGroupId: string, personId: string, persistedFaceId: string, callback: ServiceCallback<void>)'
      parameters:
        - id: personGroupId
          type:
            - string
          description: Id. que hacen referencia a un grupo de persona en particular.
        - id: personId
          type:
            - string
          description: Id. que hacen referencia a una persona en particular.
        - id: persistedFaceId
          type:
            - string
          description: Id. que hacen referencia a un persistedFaceId determinado de una cara existente.
        - id: callback
          type:
            - ServiceCallback<void>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-face'
references:
  - uid: '@azure/cognitiveservices-face.FaceClientContext'
    name: FaceClientContext
    spec.typeScript:
      - name: FaceClientContext
        fullName: FaceClientContext
        uid: '@azure/cognitiveservices-face.FaceClientContext'
  - uid: ServiceCallback<@azure/cognitiveservices-face.PersistedFace>
    name: PersistedFace>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: PersistedFace
        fullName: PersistedFace
        uid: '@azure/cognitiveservices-face.PersistedFace'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
    name: PersonGroupPersonAddFaceFromStreamOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromStreamOptionalParams
        fullName: PersonGroupPersonAddFaceFromStreamOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromStreamOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
    name: PersonGroupPersonAddFaceFromUrlOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonAddFaceFromUrlOptionalParams
        fullName: PersonGroupPersonAddFaceFromUrlOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonAddFaceFromUrlOptionalParams'
  - uid: ServiceCallback<@azure/cognitiveservices-face.Person>
    name: Person>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '>'
        fullName: '>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
    name: PersonGroupPersonCreateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonCreateOptionalParams
        fullName: PersonGroupPersonCreateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonCreateOptionalParams'
  - uid: 'ServiceCallback<@azure/cognitiveservices-face.Person[]>'
    name: 'Person[]>'
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: Person
        fullName: Person
        uid: '@azure/cognitiveservices-face.Person'
      - name: '[]>'
        fullName: '[]>'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
    name: PersonGroupPersonListOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonListOptionalParams
        fullName: PersonGroupPersonListOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonListOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
    name: PersonGroupPersonUpdateOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateOptionalParams
        fullName: PersonGroupPersonUpdateOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateOptionalParams'
  - uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'
    name: PersonGroupPersonUpdateFaceOptionalParams
    spec.typeScript:
      - name: PersonGroupPersonUpdateFaceOptionalParams
        fullName: PersonGroupPersonUpdateFaceOptionalParams
        uid: '@azure/cognitiveservices-face.PersonGroupPersonUpdateFaceOptionalParams'