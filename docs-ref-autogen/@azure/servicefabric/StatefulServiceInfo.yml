### YamlMime:UniversalReference
items:
  - uid: '@azure/servicefabric.StatefulServiceInfo'
    name: StatefulServiceInfo
    fullName: StatefulServiceInfo
    children:
      - '@azure/servicefabric.StatefulServiceInfo.hasPersistedState'
      - '@azure/servicefabric.StatefulServiceInfo.healthState'
      - '@azure/servicefabric.StatefulServiceInfo.id'
      - '@azure/servicefabric.StatefulServiceInfo.isServiceGroup'
      - '@azure/servicefabric.StatefulServiceInfo.manifestVersion'
      - '@azure/servicefabric.StatefulServiceInfo.name'
      - '@azure/servicefabric.StatefulServiceInfo.serviceKind'
      - '@azure/servicefabric.StatefulServiceInfo.serviceStatus'
      - '@azure/servicefabric.StatefulServiceInfo.typeName'
    langs:
      - typeScript
    type: interface
    summary: <span data-ttu-id="c67b6-101">Información acerca de un servicio de Service Fabric con estado.</span><span class="sxs-lookup"><span data-stu-id="c67b6-101">Information about a stateful Service Fabric service.</span></span>
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.hasPersistedState'
    name: hasPersistedState
    fullName: hasPersistedState
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c67b6-102">Si el servicio tiene un estado persistente.</span><span class="sxs-lookup"><span data-stu-id="c67b6-102">Whether the service has persisted state.</span></span>
    optional: true
    syntax:
      content: 'hasPersistedState?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.healthState'
    name: healthState
    fullName: healthState
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="c67b6-103">El estado de mantenimiento de una entidad de Service Fabric como clúster, nodo, aplicación, servicio, partición, réplica etcetera. Los valores posibles son: ''Invalid'', ''Aceptar'', ''Advertencia'', ''Error'', ''Unknown''.</span><span class="sxs-lookup"><span data-stu-id="c67b6-103">The health state of a Service Fabric entity such as Cluster, Node, Application, Service, Partition, Replica etc. Possible values include: ''Invalid'', ''Ok'', ''Warning'', ''Error'', ''Unknown''</span></span>'
    optional: true
    syntax:
      content: 'healthState?: HealthState'
      return:
        type:
          - '@azure/servicefabric.HealthState'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="c67b6-104">La identidad del servicio.</span><span class="sxs-lookup"><span data-stu-id="c67b6-104">The identity of the service.</span></span> <span data-ttu-id="c67b6-105">Este identificador es una representación codificada del nombre del servicio.</span><span class="sxs-lookup"><span data-stu-id="c67b6-105">This ID is an encoded representation of the service name.</span></span> <span data-ttu-id="c67b6-106">Esto se utiliza en las API de REST para identificar el recurso del servicio.</span><span class="sxs-lookup"><span data-stu-id="c67b6-106">This is used in the REST APIs to identify the service resource.</span></span>
      <span data-ttu-id="c67b6-107">A partir de la versión 6.0, los nombres jerárquicos se delimitan con el "\~" caracteres.</span><span class="sxs-lookup"><span data-stu-id="c67b6-107">Starting in version 6.0, hierarchical names are delimited with the "\~" character.</span></span> <span data-ttu-id="c67b6-108">Por ejemplo, si el nombre del servicio es "fabric: / myapp/app1/svc1", la identidad del servicio sería "myapp ~ app1\~svc1" en 6.0 + y "myapp/app1/svc1" en versiones anteriores.</span><span class="sxs-lookup"><span data-stu-id="c67b6-108">For example, if the service name is "fabric:/myapp/app1/svc1", the service identity would be "myapp~app1\~svc1" in 6.0+ and "myapp/app1/svc1" in previous versions.</span></span>
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.isServiceGroup'
    name: isServiceGroup
    fullName: isServiceGroup
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c67b6-109">Si el servicio está en un grupo de servicio.</span><span class="sxs-lookup"><span data-stu-id="c67b6-109">Whether the service is in a service group.</span></span>
    optional: true
    syntax:
      content: 'isServiceGroup?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.manifestVersion'
    name: manifestVersion
    fullName: manifestVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c67b6-110">La versión del manifiesto de servicio.</span><span class="sxs-lookup"><span data-stu-id="c67b6-110">The version of the service manifest.</span></span>
    optional: true
    syntax:
      content: 'manifestVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="c67b6-111">El nombre completo del servicio con "fabric:'' "fabric:"</span><span class="sxs-lookup"><span data-stu-id="c67b6-111">The full name of the service with ''fabric:'' URI scheme.</span></span>'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.serviceKind'
    name: serviceKind
    fullName: serviceKind
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c67b6-112">Discriminador polimórfico</span><span class="sxs-lookup"><span data-stu-id="c67b6-112">Polymorphic Discriminator</span></span>
    syntax:
      content: 'serviceKind: "Stateful"'
      return:
        type:
          - '"Stateful"'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.serviceStatus'
    name: serviceStatus
    fullName: serviceStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="c67b6-113">El estado de la aplicación.</span><span class="sxs-lookup"><span data-stu-id="c67b6-113">The status of the application.</span></span> <span data-ttu-id="c67b6-114">Los valores posibles son: ''Unknown'', ''Active'', ''Actualizar'', ''eliminar'', ''Crear'', ''Error''</span><span class="sxs-lookup"><span data-stu-id="c67b6-114">Possible values include: ''Unknown'', ''Active'', ''Upgrading'', ''Deleting'', ''Creating'', ''Failed''</span></span>'
    optional: true
    syntax:
      content: 'serviceStatus?: ServiceStatus'
      return:
        type:
          - '@azure/servicefabric.ServiceStatus'
    package: '@azure/servicefabric'
  - uid: '@azure/servicefabric.StatefulServiceInfo.typeName'
    name: typeName
    fullName: typeName
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="c67b6-115">Nombre del tipo de servicio como se especifica en el manifiesto de servicio.</span><span class="sxs-lookup"><span data-stu-id="c67b6-115">Name of the service type as specified in the service manifest.</span></span>
    optional: true
    syntax:
      content: 'typeName?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/servicefabric'
references:
  - uid: '@azure/servicefabric.HealthState'
    name: HealthState
    spec.typeScript:
      - name: HealthState
        fullName: HealthState
        uid: '@azure/servicefabric.HealthState'
  - uid: '@azure/servicefabric.ServiceStatus'
    name: ServiceStatus
    spec.typeScript:
      - name: ServiceStatus
        fullName: ServiceStatus
        uid: '@azure/servicefabric.ServiceStatus'