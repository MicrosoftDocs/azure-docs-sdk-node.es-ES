### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient'
    name: ManagedApplicationClient
    fullName: ManagedApplicationClient
    children:
      - '@azure/arm-managedapplications.ManagedApplicationClient.acceptLanguage'
      - '@azure/arm-managedapplications.ManagedApplicationClient.apiVersion'
      - '@azure/arm-managedapplications.ManagedApplicationClient.applianceDefinitions'
      - '@azure/arm-managedapplications.ManagedApplicationClient.appliances'
      - '@azure/arm-managedapplications.ManagedApplicationClient.beginLongRunningRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.credentials'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperations'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_2'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_1'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_2'
      - '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_1'
      - '@azure/arm-managedapplications.ManagedApplicationClient.longRunningOperationRetryTimeout'
      - '@azure/arm-managedapplications.ManagedApplicationClient.constructor'
      - '@azure/arm-managedapplications.ManagedApplicationClient.restoreLROPoller'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendLongRunningRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendLRORequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendOperationRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.sendRequest'
      - '@azure/arm-managedapplications.ManagedApplicationClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-managedapplications.ManagedApplicationClientContext'
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.apiVersion'
    name: apiVersion
    fullName: apiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'apiVersion?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.applianceDefinitions'
    name: applianceDefinitions
    fullName: applianceDefinitions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'applianceDefinitions: ApplianceDefinitions'
      return:
        type:
          - '@azure/arm-managedapplications.ApplianceDefinitions'
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.appliances'
    name: appliances
    fullName: appliances
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'appliances: Appliances'
      return:
        type:
          - '@azure/arm-managedapplications.Appliances'
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar la solicitud inicial de un LRO (larga ejecución como operación) y obtener un HttpLongRunningOperationResponse que proporciona métodos para sondear el LRO y comprobar si el LRO finalizada.
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: El objeto de solicitud
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperations'
    name: listOperations(msRest.RequestOptionsBase)
    children: []
    type: method
    langs:
      - typeScript
    summary: Enumera todas las operaciones de API de REST de Microsoft.Solutions disponibles.
    syntax:
      content: 'function listOperations(options?: msRest.RequestOptionsBase)'
      parameters:
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListOperationsResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_2'
    name: 'listOperations(RequestOptionsBase, ServiceCallback<OperationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperations(options: RequestOptionsBase, callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.ListOperationsResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperations_1'
    name: listOperations(ServiceCallback<OperationListResult>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperations(callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.ListOperationsResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext'
    name: 'listOperationsNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enumera todas las operaciones de API de REST de Microsoft.Solutions disponibles.
    syntax:
      content: 'function listOperationsNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de la llamada anterior correcta a la operación de lista.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.ListOperationsNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_2'
    name: 'listOperationsNext(string, RequestOptionsBase, ServiceCallback<OperationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperationsNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de la llamada anterior correcta a la operación de lista.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.ListOperationsNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.listOperationsNext_1'
    name: 'listOperationsNext(string, ServiceCallback<OperationListResult>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listOperationsNext(nextPageLink: string, callback: ServiceCallback<OperationListResult>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de la llamada anterior correcta a la operación de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-managedapplications.OperationListResult>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.ListOperationsNextResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: El tiempo de espera de reintento en segundos para las operaciones de ejecución larga. El valor predeterminado es 30.
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.constructor'
    name: 'ManagedApplicationClient(ServiceClientCredentials, string, Models.ManagedApplicationClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inicializa una nueva instancia de la clase ManagedApplicationClient.
    syntax:
      content: 'new ManagedApplicationClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.ManagedApplicationClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenciales necesarias para que el cliente para conectarse a Azure.
        - id: subscriptionId
          type:
            - string
          description: El identificador de la suscripción de destino.
        - id: options
          type:
            - Models.ManagedApplicationClientOptions
          description: ''
          optional: true
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: Restaurar un LROPoller desde el LROPollState proporcionado. Este método puede utilizarse para volver a crear un LROPoller en una máquina o un proceso diferente.
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Proporciona un mecanismo para realizar una solicitud que se sondean y proporcionará el resultado final.
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: El objeto de solicitud
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar la solicitud inicial de un LRO (larga ejecución como operación) y obtener un LROPoller que proporciona métodos para sondear el LRO y comprobar si el LRO finalizada.
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Los argumentos para la operación.
        - id: operationSpec
          type:
            - OperationSpec
          description: La especificación para la operación.
        - id: options
          type:
            - RequestOptionsBase
          description: Opciones adicionales para enviarse al realizar la solicitud.
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar una solicitud HTTP que se rellena con el OperationSpec proporcionado.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Los argumentos que se rellenarán los valores de la solicitud HTTP con plantillas de.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec debe usar para rellenar la solicitud HTTP.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            La devolución de llamada cuando se recibe la respuesta.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar la solicitud HTTP proporcionada.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-managedapplications'
  - uid: '@azure/arm-managedapplications.ManagedApplicationClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-managedapplications'
references:
  - uid: '@azure/arm-managedapplications.ManagedApplicationClientContext'
    name: ManagedApplicationClientContext
    spec.typeScript:
      - name: ManagedApplicationClientContext
        fullName: ManagedApplicationClientContext
        uid: '@azure/arm-managedapplications.ManagedApplicationClientContext'
  - uid: '@azure/arm-managedapplications.ApplianceDefinitions'
    name: ApplianceDefinitions
    spec.typeScript:
      - name: ApplianceDefinitions
        fullName: ApplianceDefinitions
        uid: '@azure/arm-managedapplications.ApplianceDefinitions'
  - uid: '@azure/arm-managedapplications.Appliances'
    name: Appliances
    spec.typeScript:
      - name: Appliances
        fullName: Appliances
        uid: '@azure/arm-managedapplications.Appliances'
  - uid: ServiceCallback<@azure/arm-managedapplications.OperationListResult>
    name: OperationListResult>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: OperationListResult
        fullName: OperationListResult
        uid: '@azure/arm-managedapplications.OperationListResult'
      - name: '>'
        fullName: '>'