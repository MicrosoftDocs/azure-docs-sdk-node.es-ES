### YamlMime:UniversalReference
items:
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient'
    name: AnomalyDetectorClient
    fullName: AnomalyDetectorClient
    children:
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.constructor'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.credentials'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.endpoint'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect_2'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect_1'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect_2'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect_1'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.sendOperationRequest'
      - '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.sendRequest'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext'
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.constructor'
    name: 'AnomalyDetectorClient(ServiceClientCredentials, string, msRest.ServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Inicializa una nueva instancia de la clase AnomalyDetectorClient.
    syntax:
      content: 'new AnomalyDetectorClient(credentials: ServiceClientCredentials, endpoint: string, options?: msRest.ServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: Credenciales de suscripción que identifican la suscripción de cliente.
        - id: endpoint
          type:
            - string
          description: 'Admite puntos de conexión de servicios cognitivos (protocolo y el nombre de host, por ejemplo: https://westus2.api.cognitive.microsoft.com).'
        - id: options
          type:
            - msRest.ServiceClientOptions
          description: ''
          optional: true
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.endpoint'
    name: endpoint
    fullName: endpoint
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'endpoint: string'
      return:
        type:
          - string
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect'
    name: 'entireDetect(Request, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Esta operación genera un modelo con toda una serie, se detecta cada punto con el mismo modelo. Con este método, los puntos antes y después de un punto determinado se utilizan para determinar si es una anomalía. La detección completa puede ofrecer un estado general de la serie temporal del usuario.'
    syntax:
      content: 'function entireDetect(body: Request, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: body
          type:
            - '@azure/cognitiveservices-anomalydetector.Request'
          description: Puntos de serie temporal y período si es necesario. Parámetros de modelo avanzado también se pueden establecer en la solicitud.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.EntireDetectResponse2>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect_2'
    name: 'entireDetect(Request, RequestOptionsBase, ServiceCallback<EntireDetectResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function entireDetect(body: Request, options: RequestOptionsBase, callback: ServiceCallback<EntireDetectResponse>)'
      parameters:
        - id: body
          type:
            - '@azure/cognitiveservices-anomalydetector.Request'
          description: Puntos de serie temporal y período si es necesario. Parámetros de modelo avanzado también se pueden establecer en la solicitud.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-anomalydetector.EntireDetectResponse>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.EntireDetectResponse2>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.entireDetect_1'
    name: 'entireDetect(Request, ServiceCallback<EntireDetectResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function entireDetect(body: Request, callback: ServiceCallback<EntireDetectResponse>)'
      parameters:
        - id: body
          type:
            - '@azure/cognitiveservices-anomalydetector.Request'
          description: Puntos de serie temporal y período si es necesario. Parámetros de modelo avanzado también se pueden establecer en la solicitud.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-anomalydetector.EntireDetectResponse>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.EntireDetectResponse2>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect'
    name: 'lastDetect(Request, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Esta operación genera un modelo mediante puntos antes de la última de ellas. Con este método, solo los puntos históricos se utilizan para determinar si el punto de destino es una anomalía. El último punto de detectar la operación coincide con el escenario de supervisión en tiempo real de métricas empresariales.'
    syntax:
      content: 'function lastDetect(body: Request, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: body
          type:
            - '@azure/cognitiveservices-anomalydetector.Request'
          description: Puntos de serie temporal y período si es necesario. Parámetros de modelo avanzado también se pueden establecer en la solicitud.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.LastDetectResponse2>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect_2'
    name: 'lastDetect(Request, RequestOptionsBase, ServiceCallback<LastDetectResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lastDetect(body: Request, options: RequestOptionsBase, callback: ServiceCallback<LastDetectResponse>)'
      parameters:
        - id: body
          type:
            - '@azure/cognitiveservices-anomalydetector.Request'
          description: Puntos de serie temporal y período si es necesario. Parámetros de modelo avanzado también se pueden establecer en la solicitud.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-anomalydetector.LastDetectResponse>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.LastDetectResponse2>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.lastDetect_1'
    name: 'lastDetect(Request, ServiceCallback<LastDetectResponse>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function lastDetect(body: Request, callback: ServiceCallback<LastDetectResponse>)'
      parameters:
        - id: body
          type:
            - '@azure/cognitiveservices-anomalydetector.Request'
          description: Puntos de serie temporal y período si es necesario. Parámetros de modelo avanzado también se pueden establecer en la solicitud.
        - id: callback
          type:
            - ServiceCallback<@azure/cognitiveservices-anomalydetector.LastDetectResponse>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.LastDetectResponse2>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar una solicitud HTTP que se rellena con el OperationSpec proporcionado.
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: Los argumentos que se rellenarán los valores de la solicitud HTTP con plantillas de.
        - id: operationSpec
          type:
            - OperationSpec
          description: OperationSpec debe usar para rellenar la solicitud HTTP.
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            La devolución de llamada cuando se recibe la respuesta.
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/cognitiveservices-anomalydetector'
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: Enviar la solicitud HTTP proporcionada.
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/cognitiveservices-anomalydetector'
references:
  - uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext'
    name: AnomalyDetectorClientContext
    spec.typeScript:
      - name: AnomalyDetectorClientContext
        fullName: AnomalyDetectorClientContext
        uid: '@azure/cognitiveservices-anomalydetector.AnomalyDetectorClientContext'
  - uid: '@azure/cognitiveservices-anomalydetector.Request'
    name: Request
    spec.typeScript:
      - name: Request
        fullName: Request
        uid: '@azure/cognitiveservices-anomalydetector.Request'
  - uid: ServiceCallback<@azure/cognitiveservices-anomalydetector.EntireDetectResponse>
    name: EntireDetectResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EntireDetectResponse
        fullName: EntireDetectResponse
        uid: '@azure/cognitiveservices-anomalydetector.EntireDetectResponse'
      - name: '>'
        fullName: '>'
  - uid: ServiceCallback<@azure/cognitiveservices-anomalydetector.LastDetectResponse>
    name: LastDetectResponse>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: LastDetectResponse
        fullName: LastDetectResponse
        uid: '@azure/cognitiveservices-anomalydetector.LastDetectResponse'
      - name: '>'
        fullName: '>'