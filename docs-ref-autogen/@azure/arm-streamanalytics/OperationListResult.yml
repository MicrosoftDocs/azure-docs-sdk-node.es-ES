### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-streamanalytics.OperationListResult'
    name: OperationListResult
    fullName: OperationListResult
    children:
      - '@azure/arm-streamanalytics.OperationListResult.Array'
      - '@azure/arm-streamanalytics.OperationListResult.concat'
      - '@azure/arm-streamanalytics.OperationListResult.concat_1'
      - '@azure/arm-streamanalytics.OperationListResult.copyWithin'
      - '@azure/arm-streamanalytics.OperationListResult.entries'
      - '@azure/arm-streamanalytics.OperationListResult.every'
      - '@azure/arm-streamanalytics.OperationListResult.fill'
      - '@azure/arm-streamanalytics.OperationListResult.filter_1'
      - '@azure/arm-streamanalytics.OperationListResult.filter'
      - '@azure/arm-streamanalytics.OperationListResult.find'
      - '@azure/arm-streamanalytics.OperationListResult.find_1'
      - '@azure/arm-streamanalytics.OperationListResult.findIndex'
      - '@azure/arm-streamanalytics.OperationListResult.forEach'
      - '@azure/arm-streamanalytics.OperationListResult.indexOf'
      - '@azure/arm-streamanalytics.OperationListResult.join'
      - '@azure/arm-streamanalytics.OperationListResult.keys'
      - '@azure/arm-streamanalytics.OperationListResult.lastIndexOf'
      - '@azure/arm-streamanalytics.OperationListResult.length'
      - '@azure/arm-streamanalytics.OperationListResult.map'
      - '@azure/arm-streamanalytics.OperationListResult.nextLink'
      - '@azure/arm-streamanalytics.OperationListResult.pop'
      - '@azure/arm-streamanalytics.OperationListResult.push'
      - '@azure/arm-streamanalytics.OperationListResult.reduce'
      - '@azure/arm-streamanalytics.OperationListResult.reduce_1'
      - '@azure/arm-streamanalytics.OperationListResult.reduce_2'
      - '@azure/arm-streamanalytics.OperationListResult.reduceRight'
      - '@azure/arm-streamanalytics.OperationListResult.reduceRight_1'
      - '@azure/arm-streamanalytics.OperationListResult.reduceRight_2'
      - '@azure/arm-streamanalytics.OperationListResult.reverse'
      - '@azure/arm-streamanalytics.OperationListResult.shift'
      - '@azure/arm-streamanalytics.OperationListResult.slice'
      - '@azure/arm-streamanalytics.OperationListResult.some'
      - '@azure/arm-streamanalytics.OperationListResult.sort'
      - '@azure/arm-streamanalytics.OperationListResult.splice_1'
      - '@azure/arm-streamanalytics.OperationListResult.splice'
      - '@azure/arm-streamanalytics.OperationListResult.toLocaleString'
      - '@azure/arm-streamanalytics.OperationListResult.toString'
      - '@azure/arm-streamanalytics.OperationListResult.unshift'
      - '@azure/arm-streamanalytics.OperationListResult.values'
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      name: Array<@azure/arm-streamanalytics.Operation>
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.Array'
    name: Array
    fullName: Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'Array: ArrayConstructor'
      return:
        type:
          - ArrayConstructor
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.concat'
    name: 'concat(ConcatArray<Operation>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-101">Combina dos o más matrices.</span><span class="sxs-lookup"><span data-stu-id="0e53f-101">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: ConcatArray<Operation>[])'
      parameters:
        - id: items
          type:
            - 'ConcatArray<@azure/arm-streamanalytics.Operation>[]'
          description: |
            <span data-ttu-id="0e53f-102">Elementos adicionales que agregue al final del argumento array1.</span><span class="sxs-lookup"><span data-stu-id="0e53f-102">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.concat_1'
    name: 'concat(T | ConcatArray<T>[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-103">Combina dos o más matrices.</span><span class="sxs-lookup"><span data-stu-id="0e53f-103">Combines two or more arrays.</span></span>
    syntax:
      content: 'function concat(items: T | ConcatArray<T>[])'
      parameters:
        - id: items
          type:
            - 'T | ConcatArray<T>[]'
          description: |
            <span data-ttu-id="0e53f-104">Elementos adicionales que agregue al final del argumento array1.</span><span class="sxs-lookup"><span data-stu-id="0e53f-104">Additional items to add to the end of array1.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.copyWithin'
    name: 'copyWithin(number, number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-105">Devuelve este objeto después de copiar una sección de la matriz identificada por empezar y terminar en la misma matriz, comenzando en el destino de posición</span><span class="sxs-lookup"><span data-stu-id="0e53f-105">Returns the this object after copying a section of the array identified by start and end to the same array starting at position target</span></span>'
    syntax:
      content: 'function copyWithin(target: number, start: number, end?: undefined | number)'
      parameters:
        - id: target
          type:
            - number
          description: '<span data-ttu-id="0e53f-106">Si el destino es negativo, se trata como length + donde longitud es la longitud de la matriz de destino.</span><span class="sxs-lookup"><span data-stu-id="0e53f-106">If target is negative, it is treated as length+target where length is the length of the array.</span></span>'
        - id: start
          type:
            - number
          description: '<span data-ttu-id="0e53f-107">Si start es negativo, se trata como length + start.</span><span class="sxs-lookup"><span data-stu-id="0e53f-107">If start is negative, it is treated as length+start.</span></span> <span data-ttu-id="0e53f-108">Si el extremo es negativo, se trata como length + end.</span><span class="sxs-lookup"><span data-stu-id="0e53f-108">If end is negative, it is treated as length+end.</span></span>'
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="0e53f-109">Si no se especifica, la longitud de este objeto se usa como su valor predeterminado.</span><span class="sxs-lookup"><span data-stu-id="0e53f-109">If not specified, length of the this object is used as its default value.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.entries'
    name: entries()
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-110">Devuelve un iterable de pares clave-valor para cada entrada de la matriz</span><span class="sxs-lookup"><span data-stu-id="0e53f-110">Returns an iterable of key, value pairs for every entry in the array</span></span>'
    syntax:
      content: function entries()
      parameters: []
      return:
        type:
          - IterableIterator<Object>
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.every'
    name: 'every((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-111">Determina si todos los miembros de la matriz satisfacen la prueba especificada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-111">Determines whether all the members of an array satisfy the specified test.</span></span>
    syntax:
      content: 'function every(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: '<span data-ttu-id="0e53f-112">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-112">A function that accepts up to three arguments.</span></span> <span data-ttu-id="0e53f-113">El método cada llama a la función callbackfn para cada elemento de matriz 1 hasta que el callbackfn devuelve false, o hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-113">The every method calls the callbackfn function for each element in array1 until the callbackfn returns false, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-114">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="0e53f-114">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="0e53f-115">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="0e53f-115">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.fill'
    name: 'fill(Operation, undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-116">Devuelve este objeto después de rellenar la sección identificada por empezar y termina por valor</span><span class="sxs-lookup"><span data-stu-id="0e53f-116">Returns the this object after filling the section identified by start and end with value</span></span>
    syntax:
      content: 'function fill(value: Operation, start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: value
          type:
            - '@azure/arm-streamanalytics.Operation'
          description: <span data-ttu-id="0e53f-117">valor para rellenar la sección de la matriz con</span><span class="sxs-lookup"><span data-stu-id="0e53f-117">value to fill array section with</span></span>
        - id: start
          type:
            - undefined | number
          description: '<span data-ttu-id="0e53f-118">índice para empezar a rellenar la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-118">index to start filling the array at.</span></span> <span data-ttu-id="0e53f-119">Si start es negativo, se trata como length + inicio donde longitud es la longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-119">If start is negative, it is treated as length+start where length is the length of the array.</span></span>'
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="0e53f-120">índice deje de rellenar la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-120">index to stop filling the array at.</span></span> <span data-ttu-id="0e53f-121">Si el extremo es negativo, se trata como length + end.</span><span class="sxs-lookup"><span data-stu-id="0e53f-121">If end is negative, it is treated as length+end.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.filter_1'
    name: 'filter((value: Operation, index: number, array: Operation[]) => any, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-122">Devuelve los elementos de una matriz que cumplen la condición especificada en una función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-122">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter(callbackfn: (value: Operation, index: number, array: Operation[]) => any, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => any'
          description: <span data-ttu-id="0e53f-123">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-123">A function that accepts up to three arguments.</span></span> <span data-ttu-id="0e53f-124">El método de filtro llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-124">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-125">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="0e53f-125">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="0e53f-126">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="0e53f-126">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.filter'
    name: 'filter((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-127">Devuelve los elementos de una matriz que cumplen la condición especificada en una función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-127">Returns the elements of an array that meet the condition specified in a callback function.</span></span>
    syntax:
      content: 'function filter<S>(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: <span data-ttu-id="0e53f-128">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-128">A function that accepts up to three arguments.</span></span> <span data-ttu-id="0e53f-129">El método de filtro llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-129">The filter method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-130">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="0e53f-130">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="0e53f-131">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="0e53f-131">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'S[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.find'
    name: 'find((this: void, value: Operation, index: number, obj: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-132">Devuelve el valor del primer elemento de la matriz donde predicado es true y no definidas en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="0e53f-132">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find<S>(predicate: (this: void, value: Operation, index: number, obj: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(this: void, value: Operation, index: number, obj: Operation[]) => boolean'
          description: '<span data-ttu-id="0e53f-133">Buscar predicado llama una vez para cada elemento de la matriz, en orden ascendente, hasta que encuentra uno donde el predicado devuelve true.</span><span class="sxs-lookup"><span data-stu-id="0e53f-133">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="0e53f-134">Si se encuentra dicho elemento, encontrar inmediatamente devuelve ese valor del elemento.</span><span class="sxs-lookup"><span data-stu-id="0e53f-134">If such an element is found, find immediately returns that element value.</span></span> <span data-ttu-id="0e53f-135">En caso contrario, la búsqueda devuelve undefined.</span><span class="sxs-lookup"><span data-stu-id="0e53f-135">Otherwise, find returns undefined.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-136">Si se proporciona, se usará como este valor para cada invocación del predicado.</span><span class="sxs-lookup"><span data-stu-id="0e53f-136">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="0e53f-137">Si no se proporciona, sin definir se utiliza en su lugar.</span><span class="sxs-lookup"><span data-stu-id="0e53f-137">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - S | undefined
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.find_1'
    name: 'find((value: Operation, index: number, obj: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-138">Devuelve el valor del primer elemento de la matriz donde predicado es true y no definidas en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="0e53f-138">Returns the value of the first element in the array where predicate is true, and undefined otherwise.</span></span>'
    syntax:
      content: 'function find(predicate: (value: Operation, index: number, obj: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Operation, index: number, obj: Operation[]) => boolean'
          description: ''
        - id: thisArg
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.Operation | undefined'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.findIndex'
    name: 'findIndex((value: Operation, index: number, obj: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-139">Devuelve el índice del primer elemento de la matriz donde el predicado es true y -1 en caso contrario.</span><span class="sxs-lookup"><span data-stu-id="0e53f-139">Returns the index of the first element in the array where predicate is true, and -1 otherwise.</span></span>'
    syntax:
      content: 'function findIndex(predicate: (value: Operation, index: number, obj: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: predicate
          type:
            - '(value: Operation, index: number, obj: Operation[]) => boolean'
          description: '<span data-ttu-id="0e53f-140">Buscar predicado llama una vez para cada elemento de la matriz, en orden ascendente, hasta que encuentra uno donde el predicado devuelve true.</span><span class="sxs-lookup"><span data-stu-id="0e53f-140">find calls predicate once for each element of the array, in ascending order, until it finds one where predicate returns true.</span></span> <span data-ttu-id="0e53f-141">Si se encuentra dicho elemento, findIndex devuelve inmediatamente el índice de ese elemento.</span><span class="sxs-lookup"><span data-stu-id="0e53f-141">If such an element is found, findIndex immediately returns that element index.</span></span> <span data-ttu-id="0e53f-142">En caso contrario, findIndex devuelve -1.</span><span class="sxs-lookup"><span data-stu-id="0e53f-142">Otherwise, findIndex returns -1.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-143">Si se proporciona, se usará como este valor para cada invocación del predicado.</span><span class="sxs-lookup"><span data-stu-id="0e53f-143">If provided, it will be used as the this value for each invocation of predicate.</span></span> <span data-ttu-id="0e53f-144">Si no se proporciona, sin definir se utiliza en su lugar.</span><span class="sxs-lookup"><span data-stu-id="0e53f-144">If it is not provided, undefined is used instead.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.forEach'
    name: 'forEach((value: Operation, index: number, array: Operation[]) => void, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-145">Realiza la acción especificada para cada elemento de matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-145">Performs the specified action for each element in an array.</span></span>
    syntax:
      content: 'function forEach(callbackfn: (value: Operation, index: number, array: Operation[]) => void, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => void'
          description: <span data-ttu-id="0e53f-146">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-146">A function that accepts up to three arguments.</span></span> <span data-ttu-id="0e53f-147">forEach llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-147">forEach calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-148">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="0e53f-148">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="0e53f-149">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="0e53f-149">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.indexOf'
    name: 'indexOf(Operation, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-150">Devuelve el índice de la primera aparición de un valor en una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-150">Returns the index of the first occurrence of a value in an array.</span></span>
    syntax:
      content: 'function indexOf(searchElement: Operation, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-streamanalytics.Operation'
          description: <span data-ttu-id="0e53f-151">El valor para buscar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-151">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="0e53f-152">El índice de matriz en la que se va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="0e53f-152">The array index at which to begin the search.</span></span> <span data-ttu-id="0e53f-153">Si se omite fromIndex, la búsqueda comienza en el índice 0.</span><span class="sxs-lookup"><span data-stu-id="0e53f-153">If fromIndex is omitted, the search starts at index 0.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.join'
    name: join(undefined | string)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-154">Agrega todos los elementos de una matriz separados por la cadena separadora especificada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-154">Adds all the elements of an array separated by the specified separator string.</span></span>
    syntax:
      content: 'function join(separator?: undefined | string)'
      parameters:
        - id: separator
          type:
            - undefined | string
          description: |
            <span data-ttu-id="0e53f-155">Cadena utilizada para separar un elemento de una matriz del siguiente en la cadena resultante.</span><span class="sxs-lookup"><span data-stu-id="0e53f-155">A string used to separate one element of an array from the next in the resulting String.</span></span> <span data-ttu-id="0e53f-156">Si se omite, los elementos de matriz se separan con una coma.</span><span class="sxs-lookup"><span data-stu-id="0e53f-156">If omitted, the array elements are separated with a comma.</span></span>
          optional: true
      return:
        type:
          - string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.keys'
    name: keys()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-157">Devuelve un iterable de claves de la matriz</span><span class="sxs-lookup"><span data-stu-id="0e53f-157">Returns an iterable of keys in the array</span></span>
    syntax:
      content: function keys()
      parameters: []
      return:
        type:
          - IterableIterator<number>
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.lastIndexOf'
    name: 'lastIndexOf(Operation, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-158">Devuelve el índice de la última aparición de un valor especificado en una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-158">Returns the index of the last occurrence of a specified value in an array.</span></span>
    syntax:
      content: 'function lastIndexOf(searchElement: Operation, fromIndex?: undefined | number)'
      parameters:
        - id: searchElement
          type:
            - '@azure/arm-streamanalytics.Operation'
          description: <span data-ttu-id="0e53f-159">El valor para buscar en la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-159">The value to locate in the array.</span></span>
        - id: fromIndex
          type:
            - undefined | number
          description: |
            <span data-ttu-id="0e53f-160">El índice de matriz en la que se va a comenzar la búsqueda.</span><span class="sxs-lookup"><span data-stu-id="0e53f-160">The array index at which to begin the search.</span></span> <span data-ttu-id="0e53f-161">Si se omite fromIndex, la búsqueda comienza en el último índice de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-161">If fromIndex is omitted, the search starts at the last index in the array.</span></span>
          optional: true
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.length'
    name: length
    fullName: length
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="0e53f-162">Obtiene o establece la longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-162">Gets or sets the length of the array.</span></span> <span data-ttu-id="0e53f-163">Esto es un número mayor que el elemento mayor definido en una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-163">This is a number one higher than the highest element defined in an array.</span></span>
    syntax:
      content: 'length: number'
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.map'
    name: 'map((value: Operation, index: number, array: Operation[]) => U, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-164">Llama a una función de devolución de llamada definida en cada elemento de una matriz y devuelve una matriz que contiene los resultados.</span><span class="sxs-lookup"><span data-stu-id="0e53f-164">Calls a defined callback function on each element of an array, and returns an array that contains the results.</span></span>'
    syntax:
      content: 'function map<U>(callbackfn: (value: Operation, index: number, array: Operation[]) => U, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => U'
          description: <span data-ttu-id="0e53f-165">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-165">A function that accepts up to three arguments.</span></span> <span data-ttu-id="0e53f-166">El método map llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-166">The map method calls the callbackfn function one time for each element in the array.</span></span>
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-167">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="0e53f-167">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="0e53f-168">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="0e53f-168">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - 'U[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.nextLink'
    name: nextLink
    fullName: nextLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    optional: true
    syntax:
      content: 'nextLink?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.pop'
    name: pop()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-169">Quita el último elemento de una matriz y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="0e53f-169">Removes the last element from an array and returns it.</span></span>
    syntax:
      content: function pop()
      parameters: []
      return:
        type:
          - '@azure/arm-streamanalytics.Operation | undefined'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.push'
    name: 'push(Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-170">Anexa nuevos elementos a una matriz y devuelve la nueva longitud de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-170">Appends new elements to an array, and returns the new length of the array.</span></span>'
    syntax:
      content: 'function push(items: Operation[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-streamanalytics.Operation[]'
          description: |
            <span data-ttu-id="0e53f-171">Nuevos elementos de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-171">New elements of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reduce'
    name: 'reduce((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-172">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-172">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="0e53f-173">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-173">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: <span data-ttu-id="0e53f-174">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-174">A function that accepts up to four arguments.</span></span> <span data-ttu-id="0e53f-175">El método reduce llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-175">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.Operation'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reduce_1'
    name: 'reduce((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-176">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-176">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="0e53f-177">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-177">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, initialValue: Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-streamanalytics.Operation'
          description: ''
      return:
        type:
          - '@azure/arm-streamanalytics.Operation'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reduce_2'
    name: 'reduce((previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-178">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-178">Calls the specified callback function for all the elements in an array.</span></span> <span data-ttu-id="0e53f-179">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-179">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduce<U>(callbackfn: (previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U'
          description: <span data-ttu-id="0e53f-180">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-180">A function that accepts up to four arguments.</span></span> <span data-ttu-id="0e53f-181">El método reduce llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-181">The reduce method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="0e53f-182">Si se especifica initialValue, se usa como valor inicial para iniciar la acumulación.</span><span class="sxs-lookup"><span data-stu-id="0e53f-182">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="0e53f-183">La primera llamada a la función callbackfn proporciona este valor como argumento en lugar de un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-183">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reduceRight'
    name: 'reduceRight((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-184">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="0e53f-184">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="0e53f-185">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-185">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: <span data-ttu-id="0e53f-186">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-186">A function that accepts up to four arguments.</span></span> <span data-ttu-id="0e53f-187">ReduceRight (método) llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-187">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.Operation'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reduceRight_1'
    name: 'reduceRight((previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, Operation)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-188">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="0e53f-188">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="0e53f-189">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-189">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight(callbackfn: (previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation, initialValue: Operation)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: Operation, currentValue: Operation, currentIndex: number, array: Operation[]) => Operation'
          description: ''
        - id: initialValue
          type:
            - '@azure/arm-streamanalytics.Operation'
          description: ''
      return:
        type:
          - '@azure/arm-streamanalytics.Operation'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reduceRight_2'
    name: 'reduceRight((previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, U)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-190">Llama a la función de devolución de llamada especificadas para todos los elementos de una matriz, en orden descendente.</span><span class="sxs-lookup"><span data-stu-id="0e53f-190">Calls the specified callback function for all the elements in an array, in descending order.</span></span> <span data-ttu-id="0e53f-191">El valor devuelto de la función de devolución de llamada es el resultado acumulado y se proporciona como argumento en la siguiente llamada a la función de devolución de llamada.</span><span class="sxs-lookup"><span data-stu-id="0e53f-191">The return value of the callback function is the accumulated result, and is provided as an argument in the next call to the callback function.</span></span>'
    syntax:
      content: 'function reduceRight<U>(callbackfn: (previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U, initialValue: U)'
      parameters:
        - id: callbackfn
          type:
            - '(previousValue: U, currentValue: Operation, currentIndex: number, array: Operation[]) => U'
          description: <span data-ttu-id="0e53f-192">Una función que acepta hasta cuatro argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-192">A function that accepts up to four arguments.</span></span> <span data-ttu-id="0e53f-193">ReduceRight (método) llama a la función callbackfn una vez para cada elemento de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-193">The reduceRight method calls the callbackfn function one time for each element in the array.</span></span>
        - id: initialValue
          type:
            - U
          description: |
            <span data-ttu-id="0e53f-194">Si se especifica initialValue, se usa como valor inicial para iniciar la acumulación.</span><span class="sxs-lookup"><span data-stu-id="0e53f-194">If initialValue is specified, it is used as the initial value to start the accumulation.</span></span> <span data-ttu-id="0e53f-195">La primera llamada a la función callbackfn proporciona este valor como argumento en lugar de un valor de matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-195">The first call to the callbackfn function provides this value as an argument instead of an array value.</span></span>
      return:
        type:
          - U
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.reverse'
    name: reverse()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-196">Invierte los elementos en una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-196">Reverses the elements in an Array.</span></span>
    syntax:
      content: function reverse()
      parameters: []
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.shift'
    name: shift()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-197">Quita el primer elemento de una matriz y lo devuelve.</span><span class="sxs-lookup"><span data-stu-id="0e53f-197">Removes the first element from an array and returns it.</span></span>
    syntax:
      content: function shift()
      parameters: []
      return:
        type:
          - '@azure/arm-streamanalytics.Operation | undefined'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.slice'
    name: 'slice(undefined | number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-198">Devuelve una sección de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-198">Returns a section of an array.</span></span>
    syntax:
      content: 'function slice(start?: undefined | number, end?: undefined | number)'
      parameters:
        - id: start
          type:
            - undefined | number
          description: <span data-ttu-id="0e53f-199">El principio de la parte especificada de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-199">The beginning of the specified portion of the array.</span></span>
          optional: true
        - id: end
          type:
            - undefined | number
          description: |
            <span data-ttu-id="0e53f-200">Final de la parte especificada de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-200">The end of the specified portion of the array.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.some'
    name: 'some((value: Operation, index: number, array: Operation[]) => boolean, any)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-201">Determina si la función de devolución de llamada especificada devuelve true para cualquier elemento de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-201">Determines whether the specified callback function returns true for any element of an array.</span></span>
    syntax:
      content: 'function some(callbackfn: (value: Operation, index: number, array: Operation[]) => boolean, thisArg?: any)'
      parameters:
        - id: callbackfn
          type:
            - '(value: Operation, index: number, array: Operation[]) => boolean'
          description: '<span data-ttu-id="0e53f-202">Una función que acepta hasta tres argumentos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-202">A function that accepts up to three arguments.</span></span> <span data-ttu-id="0e53f-203">El método algunos llama a la función callbackfn para cada elemento en la matriz 1 hasta que el callbackfn devuelve true, o hasta el final de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-203">The some method calls the callbackfn function for each element in array1 until the callbackfn returns true, or until the end of the array.</span></span>'
        - id: thisArg
          type:
            - any
          description: |
            <span data-ttu-id="0e53f-204">Un objeto al que la palabra clave this puede hacer referencia en la función callbackfn.</span><span class="sxs-lookup"><span data-stu-id="0e53f-204">An object to which the this keyword can refer in the callbackfn function.</span></span> <span data-ttu-id="0e53f-205">Si se omite thisArg, sin definir se utiliza como este valor.</span><span class="sxs-lookup"><span data-stu-id="0e53f-205">If thisArg is omitted, undefined is used as the this value.</span></span>
          optional: true
      return:
        type:
          - boolean
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.sort'
    name: 'sort(undefined | (a: Operation, b: Operation) => number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-206">Ordena una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-206">Sorts an array.</span></span>
    syntax:
      content: 'function sort(compareFn?: undefined | (a: Operation, b: Operation) => number)'
      parameters:
        - id: compareFn
          type:
            - 'undefined | (a: Operation, b: Operation) => number'
          description: |
            <span data-ttu-id="0e53f-207">El nombre de la función usada para determinar el orden de los elementos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-207">The name of the function used to determine the order of the elements.</span></span> <span data-ttu-id="0e53f-208">Si se omite, los elementos se ordenan en orden ascendente, orden de los caracteres ASCII.</span><span class="sxs-lookup"><span data-stu-id="0e53f-208">If omitted, the elements are sorted in ascending, ASCII character order.</span></span>
          optional: true
      return:
        type:
          - this
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.splice_1'
    name: 'splice(number, number, Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-209">Quita elementos de una matriz y, si es necesario, inserta nuevos elementos en su lugar, devuelve los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="0e53f-209">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount: number, items: Operation[])'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="0e53f-210">Ubicación de base cero de la matriz desde el que se va a comenzar a quitar elementos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-210">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - number
          description: <span data-ttu-id="0e53f-211">El número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="0e53f-211">The number of elements to remove.</span></span>
        - id: items
          type:
            - '@azure/arm-streamanalytics.Operation[]'
          description: |
            <span data-ttu-id="0e53f-212">Elementos que se va a insertar en la matriz en lugar de los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="0e53f-212">Elements to insert into the array in place of the deleted elements.</span></span>
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.splice'
    name: 'splice(number, undefined | number)'
    children: []
    type: method
    langs:
      - typeScript
    summary: '<span data-ttu-id="0e53f-213">Quita elementos de una matriz y, si es necesario, inserta nuevos elementos en su lugar, devuelve los elementos eliminados.</span><span class="sxs-lookup"><span data-stu-id="0e53f-213">Removes elements from an array and, if necessary, inserts new elements in their place, returning the deleted elements.</span></span>'
    syntax:
      content: 'function splice(start: number, deleteCount?: undefined | number)'
      parameters:
        - id: start
          type:
            - number
          description: <span data-ttu-id="0e53f-214">Ubicación de base cero de la matriz desde el que se va a comenzar a quitar elementos.</span><span class="sxs-lookup"><span data-stu-id="0e53f-214">The zero-based location in the array from which to start removing elements.</span></span>
        - id: deleteCount
          type:
            - undefined | number
          description: |
            <span data-ttu-id="0e53f-215">El número de elementos que se va a quitar.</span><span class="sxs-lookup"><span data-stu-id="0e53f-215">The number of elements to remove.</span></span>
          optional: true
      return:
        type:
          - '@azure/arm-streamanalytics.Operation[]'
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.toLocaleString'
    name: toLocaleString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-216">Devuelve una representación de cadena de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-216">Returns a string representation of an array.</span></span> <span data-ttu-id="0e53f-217">Los elementos se convierten en cadenas mediante sus métodos toLocalString.</span><span class="sxs-lookup"><span data-stu-id="0e53f-217">The elements are converted to string using their toLocalString methods.</span></span>
    syntax:
      content: function toLocaleString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.toString'
    name: toString()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-218">Devuelve una representación de cadena de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-218">Returns a string representation of an array.</span></span>
    syntax:
      content: function toString()
      parameters: []
      return:
        type:
          - string
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.unshift'
    name: 'unshift(Operation[])'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-219">Inserta nuevos elementos al principio de una matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-219">Inserts new elements at the start of an array.</span></span>
    syntax:
      content: 'function unshift(items: Operation[])'
      parameters:
        - id: items
          type:
            - '@azure/arm-streamanalytics.Operation[]'
          description: |
            <span data-ttu-id="0e53f-220">Elementos que se va a insertar al principio de la matriz.</span><span class="sxs-lookup"><span data-stu-id="0e53f-220">Elements to insert at the start of the Array.</span></span>
      return:
        type:
          - number
    package: '@azure/arm-streamanalytics'
  - uid: '@azure/arm-streamanalytics.OperationListResult.values'
    name: values()
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="0e53f-221">Devuelve un iterable de valores de la matriz</span><span class="sxs-lookup"><span data-stu-id="0e53f-221">Returns an iterable of values in the array</span></span>
    syntax:
      content: function values()
      parameters: []
      return:
        type:
          - IterableIterator<@azure/arm-streamanalytics.Operation>
    package: '@azure/arm-streamanalytics'
references:
  - uid: Array<@azure/arm-streamanalytics.Operation>
    name: Operation>
    spec.typeScript:
      - name: Array<
        fullName: Array<
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-streamanalytics.Operation'
      - name: '>'
        fullName: '>'
  - uid: 'ConcatArray<@azure/arm-streamanalytics.Operation>[]'
    name: 'Operation>[]'
    spec.typeScript:
      - name: ConcatArray<
        fullName: ConcatArray<
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-streamanalytics.Operation'
      - name: '>[]'
        fullName: '>[]'
  - uid: '@azure/arm-streamanalytics.Operation[]'
    name: 'Operation[]'
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-streamanalytics.Operation'
      - name: '[]'
        fullName: '[]'
  - uid: '@azure/arm-streamanalytics.Operation'
    name: Operation
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-streamanalytics.Operation'
  - uid: '@azure/arm-streamanalytics.Operation | undefined'
    name: Operation | undefined
    spec.typeScript:
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-streamanalytics.Operation'
      - name: ' | undefined'
        fullName: ' | undefined'
  - uid: IterableIterator<@azure/arm-streamanalytics.Operation>
    name: Operation>
    spec.typeScript:
      - name: IterableIterator<
        fullName: IterableIterator<
      - name: Operation
        fullName: Operation
        uid: '@azure/arm-streamanalytics.Operation'
      - name: '>'
        fullName: '>'