### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-monitor.TenantActivityLogs'
    name: TenantActivityLogs
    fullName: TenantActivityLogs
    children:
      - '@azure/arm-monitor.TenantActivityLogs.list'
      - '@azure/arm-monitor.TenantActivityLogs.list_1'
      - '@azure/arm-monitor.TenantActivityLogs.list_2'
      - '@azure/arm-monitor.TenantActivityLogs.listNext'
      - '@azure/arm-monitor.TenantActivityLogs.listNext_2'
      - '@azure/arm-monitor.TenantActivityLogs.listNext_1'
      - '@azure/arm-monitor.TenantActivityLogs.constructor'
    langs:
      - typeScript
    type: class
    summary: Clase que representa un TenantActivityLogs.
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.list'
    name: list(Models.TenantActivityLogsListOptionalParams)
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtiene los registros de actividad para el inquilino.<br>Todo lo que es aplicable a la API para obtener los registros de actividad de la suscripción es aplicable a esta API (los parámetros, $filter, etcetera.).<br>Una cosa para señalar acá es que esta API no *no* recuperar los registros en la suscripción del inquilino pero sólo las superficies de los registros que se generaron en el nivel del inquilino individual.'
    syntax:
      content: 'function list(options?: Models.TenantActivityLogsListOptionalParams)'
      parameters:
        - id: options
          type:
            - Models.TenantActivityLogsListOptionalParams
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TenantActivityLogsListResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.list_1'
    name: list(ServiceCallback<EventDataCollection>)
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(callback: ServiceCallback<EventDataCollection>)'
      parameters:
        - id: callback
          type:
            - ServiceCallback<@azure/arm-monitor.EventDataCollection>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.TenantActivityLogsListResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.list_2'
    name: 'list(TenantActivityLogsListOptionalParams, ServiceCallback<EventDataCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function list(options: TenantActivityLogsListOptionalParams, callback: ServiceCallback<EventDataCollection>)'
      parameters:
        - id: options
          type:
            - '@azure/arm-monitor.TenantActivityLogsListOptionalParams'
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/arm-monitor.EventDataCollection>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.TenantActivityLogsListResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.listNext'
    name: 'listNext(string, msRest.RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Obtiene los registros de actividad para el inquilino.<br>Todo lo que es aplicable a la API para obtener los registros de actividad de la suscripción es aplicable a esta API (los parámetros, $filter, etcetera.).<br>Una cosa para señalar acá es que esta API no *no* recuperar los registros en la suscripción del inquilino pero sólo las superficies de los registros que se generaron en el nivel del inquilino individual.'
    syntax:
      content: 'function listNext(nextPageLink: string, options?: msRest.RequestOptionsBase)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de la llamada anterior correcta a la operación de lista.
        - id: options
          type:
            - msRest.RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<Models.TenantActivityLogsListNextResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.listNext_2'
    name: 'listNext(string, RequestOptionsBase, ServiceCallback<EventDataCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, options: RequestOptionsBase, callback: ServiceCallback<EventDataCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de la llamada anterior correcta a la operación de lista.
        - id: options
          type:
            - RequestOptionsBase
          description: Los parámetros opcionales
        - id: callback
          type:
            - ServiceCallback<@azure/arm-monitor.EventDataCollection>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.TenantActivityLogsListNextResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.listNext_1'
    name: 'listNext(string, ServiceCallback<EventDataCollection>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function listNext(nextPageLink: string, callback: ServiceCallback<EventDataCollection>)'
      parameters:
        - id: nextPageLink
          type:
            - string
          description: NextLink de la llamada anterior correcta a la operación de lista.
        - id: callback
          type:
            - ServiceCallback<@azure/arm-monitor.EventDataCollection>
          description: |
            La devolución de llamada
      return:
        type:
          - Promise<Models.TenantActivityLogsListNextResponse>
    package: '@azure/arm-monitor'
  - uid: '@azure/arm-monitor.TenantActivityLogs.constructor'
    name: TenantActivityLogs(MonitorManagementClientContext)
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Crear un TenantActivityLogs.
    syntax:
      content: 'new TenantActivityLogs(client: MonitorManagementClientContext)'
      parameters:
        - id: client
          type:
            - '@azure/arm-monitor.MonitorManagementClientContext'
          description: |
            Referencia para el cliente del servicio.
    package: '@azure/arm-monitor'
references:
  - uid: '@azure/arm-monitor.MonitorManagementClientContext'
    name: MonitorManagementClientContext
    spec.typeScript:
      - name: MonitorManagementClientContext
        fullName: MonitorManagementClientContext
        uid: '@azure/arm-monitor.MonitorManagementClientContext'
  - uid: ServiceCallback<@azure/arm-monitor.EventDataCollection>
    name: EventDataCollection>
    spec.typeScript:
      - name: ServiceCallback<
        fullName: ServiceCallback<
      - name: EventDataCollection
        fullName: EventDataCollection
        uid: '@azure/arm-monitor.EventDataCollection'
      - name: '>'
        fullName: '>'
  - uid: '@azure/arm-monitor.TenantActivityLogsListOptionalParams'
    name: TenantActivityLogsListOptionalParams
    spec.typeScript:
      - name: TenantActivityLogsListOptionalParams
        fullName: TenantActivityLogsListOptionalParams
        uid: '@azure/arm-monitor.TenantActivityLogsListOptionalParams'