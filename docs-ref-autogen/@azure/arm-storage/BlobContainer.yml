### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-storage.BlobContainer'
    name: BlobContainer
    fullName: BlobContainer
    children:
      - '@azure/arm-storage.BlobContainer.etag'
      - '@azure/arm-storage.BlobContainer.hasImmutabilityPolicy'
      - '@azure/arm-storage.BlobContainer.hasLegalHold'
      - '@azure/arm-storage.BlobContainer.id'
      - '@azure/arm-storage.BlobContainer.immutabilityPolicy'
      - '@azure/arm-storage.BlobContainer.lastModifiedTime'
      - '@azure/arm-storage.BlobContainer.leaseDuration'
      - '@azure/arm-storage.BlobContainer.leaseState'
      - '@azure/arm-storage.BlobContainer.leaseStatus'
      - '@azure/arm-storage.BlobContainer.legalHold'
      - '@azure/arm-storage.BlobContainer.metadata'
      - '@azure/arm-storage.BlobContainer.name'
      - '@azure/arm-storage.BlobContainer.publicAccess'
      - '@azure/arm-storage.BlobContainer.type'
    langs:
      - typeScript
    type: interface
    summary: '<span data-ttu-id="166bc-101">Propiedades del contenedor de blobs, incluidos el identificador, nombre del recurso, tipo de recurso, el valor Etag.</span><span class="sxs-lookup"><span data-stu-id="166bc-101">Properties of the blob container, including Id, resource name, resource type, Etag.</span></span>'
    extends:
      name: '@azure/arm-storage.AzureEntityResource'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.etag'
    name: etag
    fullName: etag
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-102">Etag del recurso.</span><span class="sxs-lookup"><span data-stu-id="166bc-102">Resource Etag.</span></span>
      <span data-ttu-id="166bc-103">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-103">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'etag?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.hasImmutabilityPolicy'
    name: hasImmutabilityPolicy
    fullName: hasImmutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-104">La propiedad pública hasImmutabilityPolicy se establece en true de SRP, si se ha creado la directiva de inmutabilidad para este contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-104">The hasImmutabilityPolicy public property is set to true by SRP if ImmutabilityPolicy has been created for this container.</span></span> <span data-ttu-id="166bc-105">La propiedad pública hasImmutabilityPolicy se establece en false por SRP si la directiva de inmutabilidad no se ha creado para este contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-105">The hasImmutabilityPolicy public property is set to false by SRP if ImmutabilityPolicy has not been created for this container.</span></span>
      <span data-ttu-id="166bc-106">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-106">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'hasImmutabilityPolicy?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.hasLegalHold'
    name: hasLegalHold
    fullName: hasLegalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-107">La propiedad pública hasLegalHold se establece en true de SRP si hay al menos una etiqueta existente.</span><span class="sxs-lookup"><span data-stu-id="166bc-107">The hasLegalHold public property is set to true by SRP if there are at least one existing tag.</span></span>
      <span data-ttu-id="166bc-108">La propiedad pública hasLegalHold se establece en false por SRP si todos existente legal mantiene las etiquetas se borran. Puede haber un máximo de contenedores de blobs de 1000 con hasLegalHold = true para una cuenta determinada.</span><span class="sxs-lookup"><span data-stu-id="166bc-108">The hasLegalHold public property is set to false by SRP if all existing legal hold tags are cleared out. There can be a maximum of 1000 blob containers with hasLegalHold=true for a given account.</span></span>
      <span data-ttu-id="166bc-109">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-109">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'hasLegalHold?: undefined | false | true'
      return:
        type:
          - undefined | false | true
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.id'
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="166bc-110">Identificador de recurso completo para el recurso.</span><span class="sxs-lookup"><span data-stu-id="166bc-110">Fully qualified resource Id for the resource.</span></span> <span data-ttu-id="166bc-111">Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName} **NOTE: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-111">Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName} **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'id?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.immutabilityPolicy'
    name: immutabilityPolicy
    fullName: immutabilityPolicy
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-112">La propiedad de la directiva de inmutabilidad del contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-112">The ImmutabilityPolicy property of the container.</span></span>
      <span data-ttu-id="166bc-113">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-113">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'immutabilityPolicy?: ImmutabilityPolicyProperties'
      return:
        type:
          - '@azure/arm-storage.ImmutabilityPolicyProperties'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.lastModifiedTime'
    name: lastModifiedTime
    fullName: lastModifiedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-114">Devuelve la fecha y hora que se modificó por última vez el contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-114">Returns the date and time the container was last modified.</span></span>
      <span data-ttu-id="166bc-115">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-115">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'lastModifiedTime?: Date'
      return:
        type:
          - Date
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.leaseDuration'
    name: leaseDuration
    fullName: leaseDuration
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="166bc-116">Especifica si la concesión de un contenedor es de duración infinita o fija, sólo cuando se concede el contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-116">Specifies whether the lease on a container is of infinite or fixed duration, only when the container is leased.</span></span> <span data-ttu-id="166bc-117">Los valores posibles son: "Infinito", ''Fixed'' **Nota: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-117">Possible values include: ''Infinite'', ''Fixed'' **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'leaseDuration?: LeaseDuration'
      return:
        type:
          - '@azure/arm-storage.LeaseDuration'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.leaseState'
    name: leaseState
    fullName: leaseState
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="166bc-118">Estado del contenedor de la concesión.</span><span class="sxs-lookup"><span data-stu-id="166bc-118">Lease state of the container.</span></span> <span data-ttu-id="166bc-119">Los valores posibles son: ''Disponible'', ''Concedidas'', ''expirada'', ''Importantes'', ''Rota'' **Nota: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-119">Possible values include: ''Available'', ''Leased'', ''Expired'', ''Breaking'', ''Broken'' **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'leaseState?: LeaseState'
      return:
        type:
          - '@azure/arm-storage.LeaseState'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.leaseStatus'
    name: leaseStatus
    fullName: leaseStatus
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="166bc-120">El estado de concesión del contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-120">The lease status of the container.</span></span> <span data-ttu-id="166bc-121">Los valores posibles son: ''Bloqueado'', ''Desbloqueado'' **Nota: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-121">Possible values include: ''Locked'', ''Unlocked'' **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'leaseStatus?: LeaseStatus'
      return:
        type:
          - '@azure/arm-storage.LeaseStatus'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.legalHold'
    name: legalHold
    fullName: legalHold
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-122">La propiedad LegalHold del contenedor.</span><span class="sxs-lookup"><span data-stu-id="166bc-122">The LegalHold property of the container.</span></span>
      <span data-ttu-id="166bc-123">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-123">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'legalHold?: LegalHoldProperties'
      return:
        type:
          - '@azure/arm-storage.LegalHoldProperties'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.metadata'
    name: metadata
    fullName: metadata
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="166bc-124">Un par nombre-valor para asociar con el contenedor como metadatos.</span><span class="sxs-lookup"><span data-stu-id="166bc-124">A name-value pair to associate with the container as metadata.</span></span>
    optional: true
    syntax:
      content: 'metadata?: undefined | [key: string]: string'
      return:
        type:
          - 'undefined | [key: string]: string'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.name'
    name: name
    fullName: name
    children: []
    langs:
      - typeScript
    type: property
    summary: '<span data-ttu-id="166bc-125">El nombre del recurso **Nota: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-125">The name of the resource **NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>'
    optional: true
    syntax:
      content: 'name?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.publicAccess'
    name: publicAccess
    fullName: publicAccess
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-126">Especifica si en el contenedor pueden tener acceso a datos públicamente y el nivel de acceso.</span><span class="sxs-lookup"><span data-stu-id="166bc-126">Specifies whether data in the container may be accessed publicly and the level of access.</span></span>
      <span data-ttu-id="166bc-127">Los valores posibles son: 'Contenedor', 'Blob', 'None'</span><span class="sxs-lookup"><span data-stu-id="166bc-127">Possible values include: 'Container', 'Blob', 'None'</span></span>
    optional: true
    syntax:
      content: 'publicAccess?: PublicAccess'
      return:
        type:
          - '@azure/arm-storage.PublicAccess'
    package: '@azure/arm-storage'
  - uid: '@azure/arm-storage.BlobContainer.type'
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      <span data-ttu-id="166bc-128">Tipo de recurso.</span><span class="sxs-lookup"><span data-stu-id="166bc-128">The type of the resource.</span></span> <span data-ttu-id="166bc-129">P. ej: Microsoft.COMPUTE/virtualmachines o Microsoft.Storage/storageaccounts.</span><span class="sxs-lookup"><span data-stu-id="166bc-129">Ex- Microsoft.Compute/virtualMachines or Microsoft.Storage/storageAccounts.</span></span>
      <span data-ttu-id="166bc-130">**NOTA: Esta propiedad no se serializarán. Solo se pueden rellenar por el servidor.**</span><span class="sxs-lookup"><span data-stu-id="166bc-130">**NOTE: This property will not be serialized. It can only be populated by the server.**</span></span>
    optional: true
    syntax:
      content: 'type?: undefined | string'
      return:
        type:
          - undefined | string
    package: '@azure/arm-storage'
references:
  - uid: '@azure/arm-storage.AzureEntityResource'
    name: AzureEntityResource
    spec.typeScript:
      - name: AzureEntityResource
        fullName: AzureEntityResource
        uid: '@azure/arm-storage.AzureEntityResource'
  - uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
    name: ImmutabilityPolicyProperties
    spec.typeScript:
      - name: ImmutabilityPolicyProperties
        fullName: ImmutabilityPolicyProperties
        uid: '@azure/arm-storage.ImmutabilityPolicyProperties'
  - uid: '@azure/arm-storage.LeaseDuration'
    name: LeaseDuration
    spec.typeScript:
      - name: LeaseDuration
        fullName: LeaseDuration
        uid: '@azure/arm-storage.LeaseDuration'
  - uid: '@azure/arm-storage.LeaseState'
    name: LeaseState
    spec.typeScript:
      - name: LeaseState
        fullName: LeaseState
        uid: '@azure/arm-storage.LeaseState'
  - uid: '@azure/arm-storage.LeaseStatus'
    name: LeaseStatus
    spec.typeScript:
      - name: LeaseStatus
        fullName: LeaseStatus
        uid: '@azure/arm-storage.LeaseStatus'
  - uid: '@azure/arm-storage.LegalHoldProperties'
    name: LegalHoldProperties
    spec.typeScript:
      - name: LegalHoldProperties
        fullName: LegalHoldProperties
        uid: '@azure/arm-storage.LegalHoldProperties'
  - uid: '@azure/arm-storage.PublicAccess'
    name: PublicAccess
    spec.typeScript:
      - name: PublicAccess
        fullName: PublicAccess
        uid: '@azure/arm-storage.PublicAccess'