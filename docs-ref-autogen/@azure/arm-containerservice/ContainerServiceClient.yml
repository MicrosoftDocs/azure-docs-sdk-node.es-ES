### YamlMime:UniversalReference
items:
  - uid: '@azure/arm-containerservice.ContainerServiceClient'
    name: ContainerServiceClient
    fullName: ContainerServiceClient
    children:
      - '@azure/arm-containerservice.ContainerServiceClient.acceptLanguage'
      - '@azure/arm-containerservice.ContainerServiceClient.agentPools'
      - '@azure/arm-containerservice.ContainerServiceClient.beginLongRunningRequest'
      - '@azure/arm-containerservice.ContainerServiceClient.constructor'
      - '@azure/arm-containerservice.ContainerServiceClient.containerServices'
      - '@azure/arm-containerservice.ContainerServiceClient.credentials'
      - '@azure/arm-containerservice.ContainerServiceClient.longRunningOperationRetryTimeout'
      - '@azure/arm-containerservice.ContainerServiceClient.managedClusters'
      - '@azure/arm-containerservice.ContainerServiceClient.openShiftManagedClusters'
      - '@azure/arm-containerservice.ContainerServiceClient.operations'
      - '@azure/arm-containerservice.ContainerServiceClient.restoreLROPoller'
      - '@azure/arm-containerservice.ContainerServiceClient.sendLongRunningRequest'
      - '@azure/arm-containerservice.ContainerServiceClient.sendLRORequest'
      - '@azure/arm-containerservice.ContainerServiceClient.sendOperationRequest'
      - '@azure/arm-containerservice.ContainerServiceClient.sendRequest'
      - '@azure/arm-containerservice.ContainerServiceClient.subscriptionId'
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@azure/arm-containerservice.ContainerServiceClientContext'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.acceptLanguage'
    name: acceptLanguage
    fullName: acceptLanguage
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'acceptLanguage: string'
      return:
        type:
          - string
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.agentPools'
    name: agentPools
    fullName: agentPools
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'agentPools: AgentPools'
      return:
        type:
          - '@azure/arm-containerservice.AgentPools'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.beginLongRunningRequest'
    name: 'beginLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-101">Enviar la solicitud inicial de un LRO (larga ejecución como operación) y obtener un HttpLongRunningOperationResponse que proporciona métodos para sondear el LRO y comprobar si el LRO finalizada.</span><span class="sxs-lookup"><span data-stu-id="d63e6-101">Send the initial request of a LRO (long running operation) and get back an HttpLongRunningOperationResponse that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function beginLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="d63e6-102">El objeto de solicitud</span><span class="sxs-lookup"><span data-stu-id="d63e6-102">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.constructor'
    name: 'ContainerServiceClient(ServiceClientCredentials, string, Models.ContainerServiceClientOptions)'
    children: []
    type: constructor
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-103">Inicializa una nueva instancia de la clase ContainerServiceClient.</span><span class="sxs-lookup"><span data-stu-id="d63e6-103">Initializes a new instance of the ContainerServiceClient class.</span></span>
    syntax:
      content: 'new ContainerServiceClient(credentials: ServiceClientCredentials, subscriptionId: string, options?: Models.ContainerServiceClientOptions)'
      parameters:
        - id: credentials
          type:
            - ServiceClientCredentials
          description: <span data-ttu-id="d63e6-104">Credenciales necesarias para que el cliente para conectarse a Azure.</span><span class="sxs-lookup"><span data-stu-id="d63e6-104">Credentials needed for the client to connect to Azure.</span></span>
        - id: subscriptionId
          type:
            - string
          description: <span data-ttu-id="d63e6-105">Credenciales de suscripción que identifican de suscripción de Microsoft Azure.</span><span class="sxs-lookup"><span data-stu-id="d63e6-105">Subscription credentials which uniquely identify Microsoft Azure subscription.</span></span> <span data-ttu-id="d63e6-106">El identificador de suscripción forma parte del URI para cada llamada al servicio.</span><span class="sxs-lookup"><span data-stu-id="d63e6-106">The subscription ID forms part of the URI for every service call.</span></span>
        - id: options
          type:
            - Models.ContainerServiceClientOptions
          description: ''
          optional: true
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.containerServices'
    name: containerServices
    fullName: containerServices
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'containerServices: ContainerServices'
      return:
        type:
          - '@azure/arm-containerservice.ContainerServices'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.credentials'
    name: credentials
    fullName: credentials
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'credentials: ServiceClientCredentials'
      return:
        type:
          - ServiceClientCredentials
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.longRunningOperationRetryTimeout'
    name: longRunningOperationRetryTimeout
    fullName: longRunningOperationRetryTimeout
    children: []
    langs:
      - typeScript
    type: property
    summary: <span data-ttu-id="d63e6-107">El tiempo de espera de reintento en segundos para las operaciones de ejecución larga.</span><span class="sxs-lookup"><span data-stu-id="d63e6-107">The retry timeout in seconds for Long Running Operations.</span></span> <span data-ttu-id="d63e6-108">El valor predeterminado es 30.</span><span class="sxs-lookup"><span data-stu-id="d63e6-108">Default value is 30.</span></span>
    optional: true
    syntax:
      content: 'longRunningOperationRetryTimeout?: undefined | number'
      return:
        type:
          - undefined | number
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.managedClusters'
    name: managedClusters
    fullName: managedClusters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'managedClusters: ManagedClusters'
      return:
        type:
          - '@azure/arm-containerservice.ManagedClusters'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.openShiftManagedClusters'
    name: openShiftManagedClusters
    fullName: openShiftManagedClusters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'openShiftManagedClusters: OpenShiftManagedClusters'
      return:
        type:
          - '@azure/arm-containerservice.OpenShiftManagedClusters'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.operations'
    name: operations
    fullName: operations
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'operations: Operations'
      return:
        type:
          - '@azure/arm-containerservice.Operations'
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.restoreLROPoller'
    name: restoreLROPoller(LROPollState)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-109">Restaurar un LROPoller desde el LROPollState proporcionado.</span><span class="sxs-lookup"><span data-stu-id="d63e6-109">Restore an LROPoller from the provided LROPollState.</span></span> <span data-ttu-id="d63e6-110">Este método puede utilizarse para volver a crear un LROPoller en una máquina o un proceso diferente.</span><span class="sxs-lookup"><span data-stu-id="d63e6-110">This method can be used to recreate an LROPoller on a different process or machine.</span></span>
    syntax:
      content: 'function restoreLROPoller(lroPollState: LROPollState)'
      parameters:
        - id: lroPollState
          type:
            - LROPollState
          description: ''
      return:
        type:
          - LROPoller
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.sendLongRunningRequest'
    name: 'sendLongRunningRequest(RequestPrepareOptions | WebResource, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-111">Proporciona un mecanismo para realizar una solicitud que se sondean y proporcionará el resultado final.</span><span class="sxs-lookup"><span data-stu-id="d63e6-111">Provides a mechanism to make a request that will poll and provide the final result.</span></span>
    syntax:
      content: 'function sendLongRunningRequest(request: RequestPrepareOptions | WebResource, options?: RequestOptionsBase)'
      parameters:
        - id: request
          type:
            - RequestPrepareOptions | WebResource
          description: <span data-ttu-id="d63e6-112">El objeto de solicitud</span><span class="sxs-lookup"><span data-stu-id="d63e6-112">The request object</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: ''
          optional: true
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.sendLRORequest'
    name: 'sendLRORequest(OperationArguments, OperationSpec, RequestOptionsBase)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-113">Enviar la solicitud inicial de un LRO (larga ejecución como operación) y obtener un LROPoller que proporciona métodos para sondear el LRO y comprobar si el LRO finalizada.</span><span class="sxs-lookup"><span data-stu-id="d63e6-113">Send the initial request of a LRO (long running operation) and get back an LROPoller that provides methods for polling the LRO and checking if the LRO is finished.</span></span>
    syntax:
      content: 'function sendLRORequest(operationArguments: OperationArguments, operationSpec: OperationSpec, options?: RequestOptionsBase)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="d63e6-114">Los argumentos para la operación.</span><span class="sxs-lookup"><span data-stu-id="d63e6-114">The arguments to the operation.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="d63e6-115">La especificación para la operación.</span><span class="sxs-lookup"><span data-stu-id="d63e6-115">The specification for the operation.</span></span>
        - id: options
          type:
            - RequestOptionsBase
          description: <span data-ttu-id="d63e6-116">Opciones adicionales para enviarse al realizar la solicitud.</span><span class="sxs-lookup"><span data-stu-id="d63e6-116">Additional options to be sent while making the request.</span></span>
          optional: true
      return:
        type:
          - Promise<LROPoller>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.sendOperationRequest'
    name: 'sendOperationRequest(OperationArguments, OperationSpec, ServiceCallback<any>)'
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-117">Enviar una solicitud HTTP que se rellena con el OperationSpec proporcionado.</span><span class="sxs-lookup"><span data-stu-id="d63e6-117">Send an HTTP request that is populated using the provided OperationSpec.</span></span>
    syntax:
      content: 'function sendOperationRequest(operationArguments: OperationArguments, operationSpec: OperationSpec, callback?: ServiceCallback<any>)'
      parameters:
        - id: operationArguments
          type:
            - OperationArguments
          description: <span data-ttu-id="d63e6-118">Los argumentos que se rellenarán los valores de la solicitud HTTP con plantillas de.</span><span class="sxs-lookup"><span data-stu-id="d63e6-118">The arguments that the HTTP request's templated values will be populated from.</span></span>
        - id: operationSpec
          type:
            - OperationSpec
          description: <span data-ttu-id="d63e6-119">OperationSpec debe usar para rellenar la solicitud HTTP.</span><span class="sxs-lookup"><span data-stu-id="d63e6-119">The OperationSpec to use to populate the httpRequest.</span></span>
        - id: callback
          type:
            - ServiceCallback<any>
          description: |
            <span data-ttu-id="d63e6-120">La devolución de llamada cuando se recibe la respuesta.</span><span class="sxs-lookup"><span data-stu-id="d63e6-120">The callback to call when the response is received.</span></span>
          optional: true
      return:
        type:
          - Promise<RestResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.sendRequest'
    name: sendRequest(RequestPrepareOptions | WebResource)
    children: []
    type: method
    langs:
      - typeScript
    summary: <span data-ttu-id="d63e6-121">Enviar la solicitud HTTP proporcionada.</span><span class="sxs-lookup"><span data-stu-id="d63e6-121">Send the provided httpRequest.</span></span>
    syntax:
      content: 'function sendRequest(options: RequestPrepareOptions | WebResource)'
      parameters:
        - id: options
          type:
            - RequestPrepareOptions | WebResource
          description: ''
      return:
        type:
          - Promise<HttpOperationResponse>
    package: '@azure/arm-containerservice'
  - uid: '@azure/arm-containerservice.ContainerServiceClient.subscriptionId'
    name: subscriptionId
    fullName: subscriptionId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'subscriptionId: string'
      return:
        type:
          - string
    package: '@azure/arm-containerservice'
references:
  - uid: '@azure/arm-containerservice.ContainerServiceClientContext'
    name: ContainerServiceClientContext
    spec.typeScript:
      - name: ContainerServiceClientContext
        fullName: ContainerServiceClientContext
        uid: '@azure/arm-containerservice.ContainerServiceClientContext'
  - uid: '@azure/arm-containerservice.AgentPools'
    name: AgentPools
    spec.typeScript:
      - name: AgentPools
        fullName: AgentPools
        uid: '@azure/arm-containerservice.AgentPools'
  - uid: '@azure/arm-containerservice.ContainerServices'
    name: ContainerServices
    spec.typeScript:
      - name: ContainerServices
        fullName: ContainerServices
        uid: '@azure/arm-containerservice.ContainerServices'
  - uid: '@azure/arm-containerservice.ManagedClusters'
    name: ManagedClusters
    spec.typeScript:
      - name: ManagedClusters
        fullName: ManagedClusters
        uid: '@azure/arm-containerservice.ManagedClusters'
  - uid: '@azure/arm-containerservice.OpenShiftManagedClusters'
    name: OpenShiftManagedClusters
    spec.typeScript:
      - name: OpenShiftManagedClusters
        fullName: OpenShiftManagedClusters
        uid: '@azure/arm-containerservice.OpenShiftManagedClusters'
  - uid: '@azure/arm-containerservice.Operations'
    name: Operations
    spec.typeScript:
      - name: Operations
        fullName: Operations
        uid: '@azure/arm-containerservice.Operations'