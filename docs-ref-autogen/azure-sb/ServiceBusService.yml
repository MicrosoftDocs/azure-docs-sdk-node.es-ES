### YamlMime:UniversalReference
ms.openlocfilehash: 710b634fa6d51baa927cf736564cb3b38a6c36d9
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/13/2018
ms.locfileid: "40071822"
items:
- uid: azure-sb.ServiceBusService
  id: azure-sb.ServiceBusService
  name: ServiceBusService
  summary: >-
    El ServiceBusServices le permite trabajar con Microsoft Azure Service Bus.

    Service Bus proporciona ambas colas para enviar y recibir mensajes, así como las notificaciones push para dispositivos móviles.


    Colas de Service Bus proporcionan una funcionalidad de cola de ambos mensajes estándar así como paquetes de publicación/suscripción.

    Para obtener más información sobre las colas de Service Bus, así como información detallada acerca de cómo utilizarlas desde aplicaciones Node.js de tareas, consulte [cómo usar colas de Service Bus](https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/service-bus-queues/) y [cómo a usar temas/suscripciones de Service Bus](https://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/service-bus-topics/).


    Service Bus proporciona notificaciones de inserción mediante el centro de notificaciones.

    Aunque el ServiceBusService puede usarse para administrar centros de notificaciones, debe usar el <xref:azure-sb.NotificationHubService> para enviar mensajes a dispositivos móviles.
  fullName: azure-sb.ServiceBusService
  type: Class
  children:
  - azure-sb.ServiceBusService.#ctor
  - azure-sb.ServiceBusService#receiveQueueMessage
  - azure-sb.ServiceBusService#receiveSubscriptionMessage
  - azure-sb.ServiceBusService#deleteMessage
  - azure-sb.ServiceBusService#unlockMessage
  - azure-sb.ServiceBusService#renewLockForMessage
  - azure-sb.ServiceBusService#sendQueueMessage
  - azure-sb.ServiceBusService#sendTopicMessage
  - azure-sb.ServiceBusService#createQueue
  - azure-sb.ServiceBusService#createQueueIfNotExists
  - azure-sb.ServiceBusService#deleteQueue
  - azure-sb.ServiceBusService#getQueue
  - azure-sb.ServiceBusService#listQueues
  - azure-sb.ServiceBusService#createTopic
  - azure-sb.ServiceBusService#createTopicIfNotExists
  - azure-sb.ServiceBusService#deleteTopic
  - azure-sb.ServiceBusService#getTopic
  - azure-sb.ServiceBusService#listTopics
  - azure-sb.ServiceBusService#createSubscription
  - azure-sb.ServiceBusService#deleteSubscription
  - azure-sb.ServiceBusService#getSubscription
  - azure-sb.ServiceBusService#listSubscriptions
  - azure-sb.ServiceBusService#createRule
  - azure-sb.ServiceBusService#deleteRule
  - azure-sb.ServiceBusService#getRule
  - azure-sb.ServiceBusService#listRules
  - azure-sb.ServiceBusService#createNotificationHub
  - azure-sb.ServiceBusService#getNotificationHub
  - azure-sb.ServiceBusService#listNotificationHubs
  - azure-sb.ServiceBusService#deleteNotificationHub
  langs:
  - js
- id: azure-sb.ServiceBusService.#ctor
  uid: azure-sb.ServiceBusService.#ctor
  parent: azure-sb.ServiceBusService
  name: ServiceBusService(configOrNamespaceOrConnectionString, accessKey, issuer, acsNamespace, host, authenticationProvider)
  fullName: azure-sb.ServiceBusService.ServiceBusService(configOrNamespaceOrConnectionString, accessKey, issuer, acsNamespace, host, authenticationProvider)
  summary: >-
    Crea un nuevo objeto ServiceBusService.


    El módulo azure leerá las variables de entorno AZURE_SERVICEBUS_NAMESPACE y AZURE_SERVICEBUS_ACCESS_KEY para obtener información necesaria para conectarse a Microsoft Azure Service Bus.

    Si no se establecen estas variables de entorno, debe especificar la información de cuenta al crear un objeto ServiceBusService.
  type: Constructor
  syntax:
    parameters:
    - id: configOrNamespaceOrConnectionString
      type:
      - string
      description: El espacio de nombres del bus de servicio o la cadena de conexión.
      optional: true
    - id: accessKey
      type:
      - string
      description: La contraseña. Solo es necesario si no se pasa ninguna cadena de conexión.
      optional: true
    - id: issuer
      type:
      - string
      description: El emisor.
      optional: true
    - id: acsNamespace
      type:
      - string
      description: El espacio de nombres de acs. Normalmente es el mismo que el espacio de nombres sb con "-sb" sufijo.
      optional: true
    - id: host
      type:
      - string
      description: La dirección del host.
      optional: true
    - id: authenticationProvider
      type:
      - object
      description: El proveedor de autenticación.
      optional: true
    content: new ServiceBusService(configOrNamespaceOrConnectionString, accessKey, issuer, acsNamespace, host, authenticationProvider)
  langs:
  - js
- uid: azure-sb.ServiceBusService#receiveQueueMessage
  id: azure-sb.ServiceBusService#receiveQueueMessage
  parent: azure-sb.ServiceBusService
  name: receiveQueueMessage(queuePath, options, callback)
  summary: Recibe un mensaje en cola.
  fullName: azure-sb.ServiceBusService.receiveQueueMessage(queuePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la cola a la que se enviará el mensaje.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.isPeekLock
      type:
      - azure-sb.bool
      description: Valor booleano que indica si se debe inspeccionar o recibió el mensaje.
      optional: true
    - id: options.timeoutIntervalInS
      type:
      - azure-sb.int
      description: El intervalo de tiempo de espera, en segundos, que se usará para la solicitud.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `receivequeuemessageresult` contendrá la información del resultado de mensaje.
                                                                                        `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function receiveQueueMessage(queuePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#receiveSubscriptionMessage
  id: azure-sb.ServiceBusService#receiveSubscriptionMessage
  parent: azure-sb.ServiceBusService
  name: receiveSubscriptionMessage(topicPath, subscriptionPath, options, callback)
  summary: Recibe un mensaje de suscripción.
  fullName: azure-sb.ServiceBusService.receiveSubscriptionMessage(topicPath, subscriptionPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema recibir.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción desde el mensaje se recibirá.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.isPeekLock
      type:
      - azure-sb.bool
      description: Valor booleano que indica si se debe inspeccionar o recibió el mensaje.
      optional: true
    - id: options.timeoutIntervalInS
      type:
      - azure-sb.int
      description: El intervalo de tiempo de espera, en segundos, que se usará para la solicitud.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `receivetopicmessageresult` contendrá la información del resultado de mensaje.
                                                                                        `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function receiveSubscriptionMessage(topicPath, subscriptionPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteMessage
  id: azure-sb.ServiceBusService#deleteMessage
  parent: azure-sb.ServiceBusService
  name: deleteMessage(message, callback)
  summary: Elimina un mensaje.
  fullName: azure-sb.ServiceBusService.deleteMessage(message, callback)
  type: Function
  syntax:
    parameters:
    - id: message
      type:
      - object
      - string
      description: El objeto de mensaje o una cadena con la ubicación del mensaje.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function deleteMessage(message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#unlockMessage
  id: azure-sb.ServiceBusService#unlockMessage
  parent: azure-sb.ServiceBusService
  name: unlockMessage(message, callback)
  summary: Desbloquea un mensaje.
  fullName: azure-sb.ServiceBusService.unlockMessage(message, callback)
  type: Function
  syntax:
    parameters:
    - id: message
      type:
      - object
      - string
      description: El objeto de mensaje o una cadena con la ubicación del mensaje.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function unlockMessage(message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#renewLockForMessage
  id: azure-sb.ServiceBusService#renewLockForMessage
  parent: azure-sb.ServiceBusService
  name: renewLockForMessage(message, callback)
  summary: Renovar el bloqueo de mensaje.
  fullName: azure-sb.ServiceBusService.renewLockForMessage(message, callback)
  type: Function
  syntax:
    parameters:
    - id: message
      type:
      - object
      - string
      description: El objeto de mensaje o una cadena con la ubicación del mensaje.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function renewLockForMessage(message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#sendQueueMessage
  id: azure-sb.ServiceBusService#sendQueueMessage
  parent: azure-sb.ServiceBusService
  name: sendQueueMessage(queuePath, message, callback)
  summary: Envía un mensaje en cola.
  fullName: azure-sb.ServiceBusService.sendQueueMessage(queuePath, message, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la cola a la que se enviará el mensaje.
    - id: message
      type:
      - object
      - string
      description: Un objeto de mensaje que representa el mensaje para enviar.
    - id: message.body
      type:
      - string
      description: El texto del mensaje.
      optional: true
    - id: message.customProperties
      type:
      - object
      description: Las propiedades del mensaje personalizado.
      optional: true
    - id: message.brokerProperties.CorrelationId
      type:
      - string
      description: Identificador de correlación del mensaje.
      optional: true
    - id: message.brokerProperties.SessionId
      type:
      - string
      description: El identificador de sesión.
      optional: true
    - id: message.brokerProperties.MessageId
      type:
      - string
      description: El identificador del mensaje.
      optional: true
    - id: message.brokerProperties.Label
      type:
      - string
      description: Etiqueta del mensaje.
      optional: true
    - id: message.brokerProperties.ReplyTo
      type:
      - string
      description: Respuesta del mensaje a.
      optional: true
    - id: message.brokerProperties.TimeToLive
      type:
      - string
      description: Período de vida del mensaje.
      optional: true
    - id: message.brokerProperties.To
      type:
      - string
      description: Del mensaje que.
      optional: true
    - id: message.brokerProperties.ScheduledEnqueueTimeUtc
      type:
      - string
      description: La hora del mensaje programado poner en cola en formato UTC.
      optional: true
    - id: message.brokerProperties.ReplyToSessionId
      type:
      - string
      description: Respuesta del mensaje para el identificador de sesión.
      optional: true
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function sendQueueMessage(queuePath, message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#sendTopicMessage
  id: azure-sb.ServiceBusService#sendTopicMessage
  parent: azure-sb.ServiceBusService
  name: sendTopicMessage(topicPath, message, callback)
  summary: Envía un mensaje del tema.
  fullName: azure-sb.ServiceBusService.sendTopicMessage(topicPath, message, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema al que se enviará el mensaje.
    - id: message
      type:
      - object
      - string
      description: Un objeto de mensaje que representa el mensaje para enviar.
    - id: message.body
      type:
      - string
      description: El texto del mensaje.
      optional: true
    - id: message.customProperties
      type:
      - object
      description: Las propiedades del mensaje personalizado.
      optional: true
    - id: message.brokerProperties.CorrelationId
      type:
      - string
      description: Identificador de correlación del mensaje.
      optional: true
    - id: message.brokerProperties.SessionId
      type:
      - string
      description: El identificador de sesión.
      optional: true
    - id: message.brokerProperties.MessageId
      type:
      - string
      description: El identificador del mensaje.
      optional: true
    - id: message.brokerProperties.Label
      type:
      - string
      description: Etiqueta del mensaje.
      optional: true
    - id: message.brokerProperties.ReplyTo
      type:
      - string
      description: Respuesta del mensaje a.
      optional: true
    - id: message.brokerProperties.TimeToLive
      type:
      - string
      description: Período de vida del mensaje.
      optional: true
    - id: message.brokerProperties.To
      type:
      - string
      description: Del mensaje que.
      optional: true
    - id: message.brokerProperties.ScheduledEnqueueTimeUtc
      type:
      - string
      description: La hora del mensaje programado poner en cola en formato UTC.
      optional: true
    - id: message.brokerProperties.ReplyToSessionId
      type:
      - string
      description: Respuesta del mensaje para el identificador de sesión.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `receivetopicmessageresult` contendrá la información del resultado de mensaje.
                                                                                          `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function sendTopicMessage(topicPath, message, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createQueue
  id: azure-sb.ServiceBusService#createQueue
  parent: azure-sb.ServiceBusService
  name: createQueue(queuePath, options, callback)
  summary: Crea una cola.
  fullName: azure-sb.ServiceBusService.createQueue(queuePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la cola que desee crear.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.MaxSizeInMegaBytes
      type:
      - azure-sb.int
      description: Especifica el tamaño máximo de la cola en megabytes. Cualquier intento de poner en cola un mensaje que hará que la cola supere este valor se producirá un error.
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: Dependiendo de si los problemas de entrega están habilitado, un mensaje se mueve a la propiedad DeadLetterQueue automáticamente o se elimina si se ha almacenado en la cola durante más tiempo del especificado. Este valor lo sobrescribe un TTL especificado en el mensaje si y solo si el TTL del mensaje es menor que el TTL establecido en la cola. Este valor es inmutable después de crear la cola.
      optional: true
    - id: options.LockDuration
      type:
      - azure-sb.PTnHnMnS
      description: Determina la cantidad de tiempo en segundos en el que un mensaje debe estar bloqueado para el procesamiento por un receptor. Después de este período, el mensaje esté desbloqueado y disponible para su uso, el siguiente receptor. Configurable solo en el momento de creación de la cola.
      optional: true
    - id: options.RequiresSession
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de la cola. Si se establece en true, la cola estará SessionReceiver en cuenta la sesión y solo se admitirá. No se admiten colas basadas en la sesión a través de REST.
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de la cola.
      optional: true
    - id: options.DeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: Este campo controla cómo Service Bus controla un mensaje cuyo período de vida ha expirado. Si está habilitada y el mensaje expira, el Bus de servicio mueve el mensaje de la cola a la subcola de la cola fallidos. Si se deshabilita, mensaje se eliminará permanentemente de la cola. Configurable solo en el momento de creación de la cola.
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.bool
      description: Especifica el intervalo de tiempo durante el cual el Bus de servicio detecta la duplicación de mensajes.
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: Especifica si se debe particionar la cola.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `createqueueresult` contendrá la nueva información de la cola.
                                                                                          `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createQueue(queuePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createQueueIfNotExists
  id: azure-sb.ServiceBusService#createQueueIfNotExists
  parent: azure-sb.ServiceBusService
  name: createQueueIfNotExists(queuePath, options, callback)
  summary: Crea una cola si ya no existe.
  fullName: azure-sb.ServiceBusService.createQueueIfNotExists(queuePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la cola que se va a eliminar.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.MaxSizeInMegaBytes
      type:
      - azure-sb.int
      description: Especifica el tamaño máximo de la cola en megabytes. Cualquier intento de poner en cola un mensaje que hará que la cola supere este valor se producirá un error.
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: Dependiendo de si los problemas de entrega están habilitado, un mensaje se mueve a la propiedad DeadLetterQueue automáticamente o se elimina si se ha almacenado en la cola durante más tiempo del especificado. Este valor lo sobrescribe un TTL especificado en el mensaje si y solo si el TTL del mensaje es menor que el TTL establecido en la cola. Este valor es inmutable después de crear la cola.
      optional: true
    - id: options.LockDuration
      type:
      - azure-sb.PTnHnMnS
      description: Determina la cantidad de tiempo en segundos en el que un mensaje debe estar bloqueado para el procesamiento por un receptor. Después de este período, el mensaje esté desbloqueado y disponible para su uso, el siguiente receptor. Configurable solo en el momento de creación de la cola.
      optional: true
    - id: options.RequiresSession
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de la cola. Si se establece en true, la cola estará SessionReceiver en cuenta la sesión y solo se admitirá. No se admiten colas basadas en la sesión a través de REST.
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de la cola.
      optional: true
    - id: options.DeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: Este campo controla cómo Service Bus controla un mensaje cuyo período de vida ha expirado. Si está habilitada y el mensaje expira, el Bus de servicio mueve el mensaje de la cola a la subcola de la cola fallidos. Si se deshabilita, mensaje se eliminará permanentemente de la cola. Configurable solo en el momento de creación de la cola.
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.bool
      description: Especifica el intervalo de tiempo durante el cual el Bus de servicio detecta la duplicación de mensajes.
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: Especifica si se debe particionar la cola.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `queueCreated` contendrá la nueva información de la cola.
                                                                                          `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createQueueIfNotExists(queuePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteQueue
  id: azure-sb.ServiceBusService#deleteQueue
  parent: azure-sb.ServiceBusService
  name: deleteQueue(queuePath, callback)
  summary: Elimina una cola.
  fullName: azure-sb.ServiceBusService.deleteQueue(queuePath, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la cola que se va a eliminar.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function deleteQueue(queuePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getQueue
  id: azure-sb.ServiceBusService#getQueue
  parent: azure-sb.ServiceBusService
  name: getQueue(queuePath, callback)
  summary: Recupera una cola.
  fullName: azure-sb.ServiceBusService.getQueue(queuePath, callback)
  type: Function
  syntax:
    parameters:
    - id: queuePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la cola para recuperar.
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `queueresult` contendrá la información de la cola.
                                                                                          `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function getQueue(queuePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listQueues
  id: azure-sb.ServiceBusService#listQueues
  parent: azure-sb.ServiceBusService
  name: listQueues(options, callback)
  summary: Devuelve una lista de colas.
  fullName: azure-sb.ServiceBusService.listQueues(options, callback)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: La cláusula top para enumerar las colas.
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: La cláusula skip para enumerar las colas.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `listqueueresult` contendrá la lista de colas.
                                                                              `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function listQueues(options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createTopic
  id: azure-sb.ServiceBusService#createTopic
  parent: azure-sb.ServiceBusService
  name: createTopic(topic, options, callback)
  summary: Crea un tema.
  fullName: azure-sb.ServiceBusService.createTopic(topic, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topic
      type:
      - azure-sb.TopicInfo
      description: Un objeto de tema que representa el tema para crear.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.MaxSizeInMegabytes
      type:
      - azure-sb.int
      description: Especifica el tamaño máximo del tema en megabytes. Cualquier intento de poner en cola un mensaje que hará que el tema supere este valor se producirá un error. Todos los mensajes que se almacenan en el tema o cualquiera de sus suscripciones cuentan para este valor. Varias copias de un mensaje que residen en una o varias suscripciones cuentan como un único mensaje. Por ejemplo, si existe una vez mensaje m en suscripción s1 y dos veces en la suscripción s2, m se cuenta como un único mensaje.
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: Determina cuánto tiempo un mensaje que se encuentra en las suscripciones asociadas. Las suscripciones heredan el TTL del tema a menos que se crean explícitamente con un TTL menor. En función de si está habilitado de mensajes fallidos, un mensaje que haya expirado se moverá a la DeadLtterQueue asociada la suscripción o se eliminarán permanentemente.
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: Si está habilitada, el tema detectará los mensajes duplicados dentro del intervalo de tiempo especificado por la propiedad DuplicateDetectionHistoryTimeWindow. Configurable solo en el momento de creación de tema.
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.PTnHnMnS
      description: Especifica el intervalo de tiempo durante el cual el Bus de servicio detectará la duplicación de mensajes.
      optional: true
    - id: options.EnableBatchedOperations
      type:
      - azure-sb.bool
      description: Especifica si se deben permitir las operaciones por lotes.
      optional: true
    - id: options.SizeInBytes
      type:
      - azure-sb.int
      description: Especifica el tamaño del tema en bytes.
      optional: true
    - id: options.SupportOrdering
      type:
      - azure-sb.bool
      description: Especifica si el tema admite el orden de los mensajes.
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: Especifica si se debe particionar el tema
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `createtopicresult` contendrá la nueva información del tema.
                                                                                                `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createTopic(topic, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createTopicIfNotExists
  id: azure-sb.ServiceBusService#createTopicIfNotExists
  parent: azure-sb.ServiceBusService
  name: createTopicIfNotExists(topic, options, callback)
  summary: Crea un tema si no existe.
  fullName: azure-sb.ServiceBusService.createTopicIfNotExists(topic, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topic
      type:
      - azure-sb.TopicInfo
      description: Un objeto de tema que representa el tema para crear.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.MaxSizeInMegabytes
      type:
      - azure-sb.int
      description: Especifica el tamaño máximo del tema en megabytes. Cualquier intento de poner en cola un mensaje que hará que el tema supere este valor se producirá un error. Todos los mensajes que se almacenan en el tema o cualquiera de sus suscripciones cuentan para este valor. Varias copias de un mensaje que residen en una o varias suscripciones cuentan como un único mensaje. Por ejemplo, si existe una vez mensaje m en suscripción s1 y dos veces en la suscripción s2, m se cuenta como un único mensaje.
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: Determina cuánto tiempo un mensaje que se encuentra en las suscripciones asociadas. Las suscripciones heredan el TTL del tema a menos que se crean explícitamente con un TTL menor. En función de si está habilitado de mensajes fallidos, un mensaje que haya expirado se moverá a la DeadLtterQueue asociada la suscripción o se eliminarán permanentemente.
      optional: true
    - id: options.RequiresDuplicateDetection
      type:
      - azure-sb.bool
      description: Si está habilitada, el tema detectará los mensajes duplicados dentro del intervalo de tiempo especificado por la propiedad DuplicateDetectionHistoryTimeWindow. Configurable solo en el momento de creación de tema.
      optional: true
    - id: options.DuplicateDetectionHistoryTimeWindow
      type:
      - azure-sb.PTnHnMnS
      description: Especifica el intervalo de tiempo durante el cual el Bus de servicio detectará la duplicación de mensajes.
      optional: true
    - id: options.MaxSubscriptionsPerTopic
      type:
      - azure-sb.int
      description: Especifica el número máximo de suscripciones que se pueden asociar con el tema.
      optional: true
    - id: options.MaxSqlFiltersPerTopic
      type:
      - azure-sb.int
      description: Especifica el número máximo de expresiones de filtro SQL (en total) que se pueden agregar a las suscripciones asociadas al tema.
      optional: true
    - id: options.MaxCorrelationFiltersPerTopic
      type:
      - azure-sb.int
      description: Especifica el número máximo de expresiones de filtro de correlación (en total) que se pueden agregar a las suscripciones asociadas al tema.
      optional: true
    - id: options.EnableDeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de tema.
      optional: true
    - id: options.EnableDeadLetteringOnFilterEvaluationExceptions
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de tema.
      optional: true
    - id: options.SupportOrdering
      type:
      - azure-sb.bool
      description: Especifica si el tema admite el orden de los mensajes.
      optional: true
    - id: options.EnablePartitioning
      type:
      - azure-sb.bool
      description: Especifica si se debe particionar el tema
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `topicCreated` contendrá la nueva información del tema.
                                                                                                `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createTopicIfNotExists(topic, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteTopic
  id: azure-sb.ServiceBusService#deleteTopic
  parent: azure-sb.ServiceBusService
  name: deleteTopic(topicPath, callback)
  summary: Elimina un tema.
  fullName: azure-sb.ServiceBusService.deleteTopic(topicPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un <code>String</code> objeto que representa el nombre de la cola que se va a eliminar.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function deleteTopic(topicPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getTopic
  id: azure-sb.ServiceBusService#getTopic
  parent: azure-sb.ServiceBusService
  name: getTopic(topicPath, callback)
  summary: Recupera un tema.
  fullName: azure-sb.ServiceBusService.getTopic(topicPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un <code>String</code> objeto que representa el nombre del tema que se va a recuperar.
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `gettopicresult` contendrá la información del tema.
                                                                         `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function getTopic(topicPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listTopics
  id: azure-sb.ServiceBusService#listTopics
  parent: azure-sb.ServiceBusService
  name: listTopics(options, callback)
  summary: Devuelve una lista de temas.
  fullName: azure-sb.ServiceBusService.listTopics(options, callback)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: El número de temas para capturar.
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: El número de temas que se omitirán.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `listtopicsresult` contendrá la lista de temas.
                                                                              `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function listTopics(options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createSubscription
  id: azure-sb.ServiceBusService#createSubscription
  parent: azure-sb.ServiceBusService
  name: createSubscription(topicPath, subscriptionPath, options, callback)
  summary: Crea una suscripción.
  fullName: azure-sb.ServiceBusService.createSubscription(topicPath, subscriptionPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.LockDuration
      type:
      - azure-sb.PTnHnMnS
      description: La duración de bloqueo predeterminada se aplica a las suscripciones que no definen una duración de bloqueo. Configurable solo en el momento de creación de la suscripción.
      optional: true
    - id: options.RequiresSession
      type:
      - azure-sb.bool
      description: Configurable solo en el momento de creación de la suscripción. Si se establece en true, la suscripción será SessionReceiver en cuenta la sesión y solo se admitirá. Tenga en cuenta la sesión de suscripción no se admiten a través de REST.
      optional: true
    - id: options.DefaultMessageTimeToLive
      type:
      - azure-sb.PTnHnMnS
      description: Determina cuánto tiempo un mensaje se encuentra en la suscripción. En función de si está habilitado de mensajes fallidos, un mensaje que haya expirado se mueve a la DeadLtterQueue asociada la suscripción o se eliminan de forma permanente.
      optional: true
    - id: options.EnableDeadLetteringOnMessageExpiration
      type:
      - azure-sb.bool
      description: Este campo controla cómo Service Bus controla un mensaje cuyo período de vida ha expirado. Si está habilitada y el mensaje expira, el Bus de servicio mueve el mensaje de la cola a la subcola de mensajes no enviados de la suscripción. Si deshabilita esta opción, mensaje se eliminará permanentemente de la cola principal de la suscripción. Configurable solo en el momento de creación de la suscripción.
      optional: true
    - id: options.EnableDeadLetteringOnFilterEvaluationExceptions
      type:
      - azure-sb.bool
      description: Determina cómo el Service Bus controla un mensaje que produce una excepción durante la evaluación del filtro de la suscripción. Si el valor se establece en true, el mensaje que provocó la excepción se moverá a la cola de mensajes no enviados de la suscripción. En caso contrario, se descartará. De forma predeterminada, este parámetro se establece en true, lo que permite al usuario una oportunidad para investigar la causa de la excepción. Puede producirse un mensaje con formato incorrecto o algunas suposiciones incorrectas que se realizan en el filtro sobre el formato del mensaje. Configurable solo en el momento de creación de tema.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `createsubscriptionresult` contendrá la nueva información de suscripción.
                                                                                          `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createSubscription(topicPath, subscriptionPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteSubscription
  id: azure-sb.ServiceBusService#deleteSubscription
  parent: azure-sb.ServiceBusService
  name: deleteSubscription(topicPath, subscriptionPath, callback)
  summary: Elimina una suscripción.
  fullName: azure-sb.ServiceBusService.deleteSubscription(topicPath, subscriptionPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción que se va a eliminar.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function deleteSubscription(topicPath, subscriptionPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getSubscription
  id: azure-sb.ServiceBusService#getSubscription
  parent: azure-sb.ServiceBusService
  name: getSubscription(topicPath, subscriptionPath, callback)
  summary: Recupera una suscripción.
  fullName: azure-sb.ServiceBusService.getSubscription(topicPath, subscriptionPath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción para recuperar.
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `getsubscriptionresult` contendrá la información de suscripción.
                                                                                        `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function getSubscription(topicPath, subscriptionPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listSubscriptions
  id: azure-sb.ServiceBusService#listSubscriptions
  parent: azure-sb.ServiceBusService
  name: listSubscriptions(topicPath, options, callback)
  summary: Devuelve una lista de suscripciones.
  fullName: azure-sb.ServiceBusService.listSubscriptions(topicPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de las suscripciones recuperar.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: El número de temas para capturar.
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: El número de temas que se omitirán.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `listsubscriptionresult` contendrá la lista de suscripciones.
                                                                              `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function listSubscriptions(topicPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createRule
  id: azure-sb.ServiceBusService#createRule
  parent: azure-sb.ServiceBusService
  name: createRule(topicPath, subscriptionPath, rulePath, options, callback)
  summary: Crea una regla.
  fullName: azure-sb.ServiceBusService.createRule(topicPath, subscriptionPath, rulePath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción para el que se creará la regla.
    - id: rulePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la regla que se va a crear.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.trueFilter
      type:
      - string
      description: Define la expresión que la regla se evalúa como un filtro es true.
      optional: true
    - id: options.falseFilter
      type:
      - string
      description: Define la expresión que la regla se evalúa como un filtro es false.
      optional: true
    - id: options.sqlExpressionFilter
      type:
      - string
      description: Define la expresión que evalúa la regla. La cadena de expresión se interpreta como una expresión SQL92 que debe evaluarse como True o False. Se puede definir una única entre una correlación y una expresión sql.
      optional: true
    - id: options.correlationIdFilter
      type:
      - string
      description: Define la expresión que evalúa la regla. Se permiten únicamente los mensajes cuyo CorrelationId coincide con el valor de CorrelationId establecido en la expresión de filtro. Se puede definir una única entre una correlación y una expresión sql.
      optional: true
    - id: options.sqlRuleAction
      type:
      - string
      description: Define la expresión que evalúa la regla. Si la regla es de tipo SQL, la cadena de expresión se interpreta como una expresión SQL92 que debe evaluarse como True o False. Si la regla es de tipo CorrelationFilterExpression, a continuación, se permiten únicamente los mensajes cuyo CorrelationId coincide con el valor de CorrelationId establecido en la expresión de filtro.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `createruleresults` contendrá la nueva información de la regla.
                                                                                    `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createRule(topicPath, subscriptionPath, rulePath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteRule
  id: azure-sb.ServiceBusService#deleteRule
  parent: azure-sb.ServiceBusService
  name: deleteRule(topicPath, subscriptionPath, rulePath, callback)
  summary: Elimina una regla.
  fullName: azure-sb.ServiceBusService.deleteRule(topicPath, subscriptionPath, rulePath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción para la que se eliminará la regla.
    - id: rulePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la regla que se va a eliminar.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function deleteRule(topicPath, subscriptionPath, rulePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getRule
  id: azure-sb.ServiceBusService#getRule
  parent: azure-sb.ServiceBusService
  name: getRule(topicPath, subscriptionPath, rulePath, callback)
  summary: Recupera una regla.
  fullName: azure-sb.ServiceBusService.getRule(topicPath, subscriptionPath, rulePath, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción para el que se recuperará la regla.
    - id: rulePath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la regla a recuperar.
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `getruleresult` contendrá la información de la regla.
                                                                                        `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function getRule(topicPath, subscriptionPath, rulePath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listRules
  id: azure-sb.ServiceBusService#listRules
  parent: azure-sb.ServiceBusService
  name: listRules(topicPath, subscriptionPath, options, callback)
  summary: Devuelve una lista de reglas.
  fullName: azure-sb.ServiceBusService.listRules(topicPath, subscriptionPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: topicPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del tema de la suscripción.
    - id: subscriptionPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre de la suscripción que se están recuperando cuyas reglas.
    - id: options
      type:
      - object
      description: Las opciones de solicitud.
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: El número de temas para capturar.
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: El número de temas que se omitirán.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `listrulesresult` contendrá la lista de reglas.
                                                                              `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function listRules(topicPath, subscriptionPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#createNotificationHub
  id: azure-sb.ServiceBusService#createNotificationHub
  parent: azure-sb.ServiceBusService
  name: createNotificationHub(hubPath, options, callback)
  summary: Crea un centro de notificaciones.
  fullName: azure-sb.ServiceBusService.createNotificationHub(hubPath, options, callback)
  type: Function
  syntax:
    parameters:
    - id: hubPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del centro de notificaciones.
    - id: options
      type:
      - object
      description: La función de devolución de llamada o de las opciones de solicitud.
      optional: true
    - id: options.wns
      type:
      - object
      description: Un objeto con los pares clave / valor para las credenciales WNS.
      optional: true
    - id: options.apns
      type:
      - object
      description: Un objeto con los pares clave / valor para las credenciales APNS.
      optional: true
    - id: options.gcm
      type:
      - object
      description: Un objeto con los pares clave / valor para las credenciales GCM.
      optional: true
    - id: options.mpns
      type:
      - object
      description: Un objeto con los pares clave / valor para las credenciales MPNS.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `result` contendrá la nueva información de concentrador de notificación.
                                                              `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function createNotificationHub(hubPath, options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#getNotificationHub
  id: azure-sb.ServiceBusService#getNotificationHub
  parent: azure-sb.ServiceBusService
  name: getNotificationHub(hubPath, callback)
  summary: Obtiene un centro de notificaciones.
  fullName: azure-sb.ServiceBusService.getNotificationHub(hubPath, callback)
  type: Function
  syntax:
    parameters:
    - id: hubPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del centro de notificaciones.
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `result` contendrá la información de concentrador de notificación.
                                                                                    `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function getNotificationHub(hubPath, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#listNotificationHubs
  id: azure-sb.ServiceBusService#listNotificationHubs
  parent: azure-sb.ServiceBusService
  name: listNotificationHubs(options, callback)
  summary: Devuelve una lista de centros de notificaciones.
  fullName: azure-sb.ServiceBusService.listNotificationHubs(options, callback)
  type: Function
  syntax:
    parameters:
    - id: options
      type:
      - object
      description: La función de devolución de llamada o de las opciones de solicitud.
      optional: true
    - id: options.top
      type:
      - azure-sb.int
      description: El número de temas para capturar.
      optional: true
    - id: options.skip
      type:
      - azure-sb.int
      description: El número de temas que se omitirán.
      optional: true
    - id: callback
      type:
      - function
      description: >-
        `error` contendrá información si se produce un error; en caso contrario `result` contendrá la lista de notification hubs.
                                                              `response` contiene información relacionada con esta operación.
    return:
      type:
      - undefined
      description: ''
    content: function listNotificationHubs(options, callback)
  langs:
  - js
- uid: azure-sb.ServiceBusService#deleteNotificationHub
  id: azure-sb.ServiceBusService#deleteNotificationHub
  parent: azure-sb.ServiceBusService
  name: deleteNotificationHub(hubPath, callback)
  summary: Elimina un centro de notificaciones.
  fullName: azure-sb.ServiceBusService.deleteNotificationHub(hubPath, callback)
  type: Function
  syntax:
    parameters:
    - id: hubPath
      type:
      - string
      description: Un objeto de cadena que representa el nombre del centro de notificaciones.
    - id: callback
      type:
      - function
      description: '`error` contendrá información si se produce un error; en caso contrario `response` contendrá información relacionada con esta operación.'
    return:
      type:
      - undefined
      description: ''
    content: function deleteNotificationHub(hubPath, callback)
  langs:
  - js
