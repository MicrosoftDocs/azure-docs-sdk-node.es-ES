### YamlMime:UniversalReference
ms.openlocfilehash: 4e8e1d74f275fd46e5311a6ecaec05b119dd3088
ms.sourcegitcommit: efa2d98deffe8a0d41a8d63f9f07aa720862e6ab
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/13/2018
ms.locfileid: "52131880"
items:
- uid: azure-cognitiveservices-contentmoderator.Reviews
  name: Reviews
  fullName: Reviews
  children:
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createJob
  - azure-cognitiveservices-contentmoderator.Reviews.createJob_2
  - azure-cognitiveservices-contentmoderator.Reviews.createJob_1
  - azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews_2
  - azure-cognitiveservices-contentmoderator.Reviews.createReviews_1
  - azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_2
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_1
  - azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_2
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_1
  - azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getReview
  - azure-cognitiveservices-contentmoderator.Reviews.getReview_2
  - azure-cognitiveservices-contentmoderator.Reviews.getReview_1
  - azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_2
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_1
  - azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_2
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_1
  - azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame
  name: addVideoFrame(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_2
  name: addVideoFrame(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrame_1
  name: addVideoFrame(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrame(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream
  name: addVideoFrameStream(string, string, string, stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: frameImageZip
      type:
      - stream.Readable
      description: >
        Archivo zip que contiene las imágenes de trama.
    - id: frameMetadata
      type:
      - string
      description: >
        Metadatos del marco.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_2
  name: addVideoFrameStream(string, string, string, stream.Readable, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: frameImageZip
      type:
      - stream.Readable
      description: ''
    - id: frameMetadata
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStream_1
  name: addVideoFrameStream(string, string, string, stream.Readable, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameStream(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: frameImageZip
      type:
      - stream.Readable
      description: ''
    - id: frameMetadata
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameStreamWithHttpOperationResponse
  name: addVideoFrameStreamWithHttpOperationResponse(string, string, string, stream.Readable, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameStreamWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, frameImageZip: stream.Readable, frameMetadata: string, options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: frameImageZip
      type:
      - stream.Readable
      description: >
        Archivo zip que contiene las imágenes de trama.
    - id: frameMetadata
      type:
      - string
      description: >
        Metadatos del marco.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl
  name: addVideoFrameUrl(string, string, string, VideoFrameBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: >
        Cuerpo para agregar la API de fotogramas de vídeo
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_2
  name: addVideoFrameUrl(string, string, string, VideoFrameBodyItem[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrl_1
  name: addVideoFrameUrl(string, string, string, VideoFrameBodyItem[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameUrl(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameUrlWithHttpOperationResponse
  name: addVideoFrameUrlWithHttpOperationResponse(string, string, string, VideoFrameBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Utilice este método para agregar marcos para realizar una revisión de vídeo. Escala de tiempo: Este parámetro es un factor que se usa para convertir un marco de la marca de tiempo en milisegundos. Escala de tiempo se proporciona en la salida del procesador de multimedia de vídeo de Content Moderator en la plataforma de Azure Media Services. Escala de tiempo en la salida de moderación de vídeo es tics/segundo.'
  syntax:
    content: 'function addVideoFrameUrlWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, videoFrameBody: VideoFrameBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: videoFrameBody
      type:
      - azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
      description: >
        Cuerpo para agregar la API de fotogramas de vídeo
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoFrameWithHttpOperationResponse
  name: addVideoFrameWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function addVideoFrameWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript
  name: addVideoTranscript(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta API agrega un archivo de transcripción (versión de texto de todas las palabras habladas en un vídeo) a una revisión de vídeo. El archivo debe ser un formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: vTTfile
      type:
      - stream.Readable
      description: >
        Archivo de transcripción del vídeo.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_2
  name: addVideoTranscript(string, string, stream.Readable, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta API agrega un archivo de transcripción (versión de texto de todas las palabras habladas en un vídeo) a una revisión de vídeo. El archivo debe ser un formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: vTTfile
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscript_1
  name: addVideoTranscript(string, string, stream.Readable, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta API agrega un archivo de transcripción (versión de texto de todas las palabras habladas en un vídeo) a una revisión de vídeo. El archivo debe ser un formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscript(teamName: string, reviewId: string, vTTfile: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: vTTfile
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult
  name: addVideoTranscriptModerationResult(string, string, string, TranscriptModerationBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta API agrega un archivo de resultados de texto de pantalla de transcripción para realizar una revisión de vídeo.

    Archivo de resultados de texto de pantalla de transcripción es el resultado de la API de pantalla de texto. Para generar el archivo de resultados de texto de pantalla de transcripción, un archivo de transcripción debe supervisarlas las blasfemias mediante la API de pantalla de texto.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: >
        Cuerpo para agregar el resultado de moderación de transcripción del vídeo API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_2
  name: addVideoTranscriptModerationResult(string, string, string, TranscriptModerationBodyItem[], Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta API agrega un archivo de resultados de texto de pantalla de transcripción para realizar una revisión de vídeo.

    Archivo de resultados de texto de pantalla de transcripción es el resultado de la API de pantalla de texto. Para generar el archivo de resultados de texto de pantalla de transcripción, un archivo de transcripción debe supervisarlas las blasfemias mediante la API de pantalla de texto.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResult_1
  name: addVideoTranscriptModerationResult(string, string, string, TranscriptModerationBodyItem[], ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta API agrega un archivo de resultados de texto de pantalla de transcripción para realizar una revisión de vídeo.

    Archivo de resultados de texto de pantalla de transcripción es el resultado de la API de pantalla de texto. Para generar el archivo de resultados de texto de pantalla de transcripción, un archivo de transcripción debe supervisarlas las blasfemias mediante la API de pantalla de texto.
  syntax:
    content: 'function addVideoTranscriptModerationResult(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], callback: ServiceCallback<void>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptModerationResultWithHttpOperationResponse
  name: addVideoTranscriptModerationResultWithHttpOperationResponse(string, string, string, TranscriptModerationBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta API agrega un archivo de resultados de texto de pantalla de transcripción para realizar una revisión de vídeo.

    Archivo de resultados de texto de pantalla de transcripción es el resultado de la API de pantalla de texto. Para generar el archivo de resultados de texto de pantalla de transcripción, un archivo de transcripción debe supervisarlas las blasfemias mediante la API de pantalla de texto.
  syntax:
    content: 'function addVideoTranscriptModerationResultWithHttpOperationResponse(contentType: string, teamName: string, reviewId: string, transcriptModerationBody: TranscriptModerationBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: transcriptModerationBody
      type:
      - azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
      description: >
        Cuerpo para agregar el resultado de moderación de transcripción del vídeo API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.addVideoTranscriptWithHttpOperationResponse
  name: addVideoTranscriptWithHttpOperationResponse(string, string, stream.Readable, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta API agrega un archivo de transcripción (versión de texto de todas las palabras habladas en un vídeo) a una revisión de vídeo. El archivo debe ser un formato de WebVTT válido.
  syntax:
    content: 'function addVideoTranscriptWithHttpOperationResponse(teamName: string, reviewId: string, vTTfile: stream.Readable, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: vTTfile
      type:
      - stream.Readable
      description: >
        Archivo de transcripción del vídeo.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob
  name: createJob(string, string, string, string, string, Content, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un trabajo que se devolverá el identificador para el contenido publicado en este punto de conexión.

    Una vez que se evalúa el contenido con el flujo de trabajo siempre la revisión se crea o se omite en función de la expresión de flujo de trabajo.


    <h3>Esquemas de devolución de llamada </h3>


    <p>

    <h4>Ejemplo de devolución de llamada de finalización de trabajo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id. de revisión, si el trabajo dieron lugar a una revisión para crearse >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< será uno de los errores de finalización, InProgress, >",<br/>

    "ContentType": "Image",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "Valor de CallBackType": "Trabajo",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: contentType
      type:
      - string
      description: >
        Imagen, texto o vídeo. Los valores posibles son: 'Image', 'Texto', 'Vídeo'
    - id: contentId
      type:
      - string
      description: >
        Identificador/nombre para identificar el contenido enviado.
    - id: workflowName
      type:
      - string
      description: >
        Nombre de flujo de trabajo que desea invocar.
    - id: jobContentType
      type:
      - string
      description: >
        El tipo de contenido. Los valores posibles son: "application/json', 'image/jpeg"
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: >
        Contenido para evaluar.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob_2
  name: createJob(string, string, string, string, string, Content, Object, ServiceCallback<JobId>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un trabajo que se devolverá el identificador para el contenido publicado en este punto de conexión.

    Una vez que se evalúa el contenido con el flujo de trabajo siempre la revisión se crea o se omite en función de la expresión de flujo de trabajo.


    <h3>Esquemas de devolución de llamada </h3>


    <p>

    <h4>Ejemplo de devolución de llamada de finalización de trabajo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id. de revisión, si el trabajo dieron lugar a una revisión para crearse >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< será uno de los errores de finalización, InProgress, >",<br/>

    "ContentType": "Image",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "Valor de CallBackType": "Trabajo",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options: Object, callback: ServiceCallback<JobId>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: contentId
      type:
      - string
      description: ''
    - id: workflowName
      type:
      - string
      description: ''
    - id: jobContentType
      type:
      - string
      description: ''
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJob_1
  name: createJob(string, string, string, string, string, Content, ServiceCallback<JobId>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un trabajo que se devolverá el identificador para el contenido publicado en este punto de conexión.

    Una vez que se evalúa el contenido con el flujo de trabajo siempre la revisión se crea o se omite en función de la expresión de flujo de trabajo.


    <h3>Esquemas de devolución de llamada </h3>


    <p>

    <h4>Ejemplo de devolución de llamada de finalización de trabajo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id. de revisión, si el trabajo dieron lugar a una revisión para crearse >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< será uno de los errores de finalización, InProgress, >",<br/>

    "ContentType": "Image",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "Valor de CallBackType": "Trabajo",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJob(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, callback: ServiceCallback<JobId>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: contentType
      type:
      - string
      description: ''
    - id: contentId
      type:
      - string
      description: ''
    - id: workflowName
      type:
      - string
      description: ''
    - id: jobContentType
      type:
      - string
      description: ''
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.JobId>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createJobWithHttpOperationResponse
  name: createJobWithHttpOperationResponse(string, string, string, string, string, Content, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Un trabajo que se devolverá el identificador para el contenido publicado en este punto de conexión.

    Una vez que se evalúa el contenido con el flujo de trabajo siempre la revisión se crea o se omite en función de la expresión de flujo de trabajo.


    <h3>Esquemas de devolución de llamada </h3>


    <p>

    <h4>Ejemplo de devolución de llamada de finalización de trabajo</h4><br/>


    {<br/>

    "JobId": "<Job Id>,<br/>

    "ReviewId": "< Id. de revisión, si el trabajo dieron lugar a una revisión para crearse >",<br/>

    "WorkFlowId": "default",<br/>

    "Status": "< será uno de los errores de finalización, InProgress, >",<br/>

    "ContentType": "Image",<br/>

    "ContentId": "<This is the ContentId that was specified on input>",<br/>

    "Valor de CallBackType": "Trabajo",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>

    <p>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4><br/>


    {"ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx", "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createJobWithHttpOperationResponse(teamName: string, contentType: string, contentId: string, workflowName: string, jobContentType: string, content: Content, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: contentType
      type:
      - string
      description: >
        Imagen, texto o vídeo. Los valores posibles son: 'Image', 'Texto', 'Vídeo'
    - id: contentId
      type:
      - string
      description: >
        Identificador/nombre para identificar el contenido enviado.
    - id: workflowName
      type:
      - string
      description: >
        Nombre de flujo de trabajo que desea invocar.
    - id: jobContentType
      type:
      - string
      description: >
        El tipo de contenido. Los valores posibles son: "application/json', 'image/jpeg"
    - id: content
      type:
      - azure-cognitiveservices-contentmoderator.Content
      description: >
        Contenido para evaluar.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.JobId>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews
  name: createReviews(string, string, CreateReviewBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: Object)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: >
        Revisiones de cuerpo para crear API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews_2
  name: createReviews(string, string, CreateReviewBodyItem[], Object, ServiceCallback<string[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options: Object, callback: ServiceCallback<string[]>)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviews_1
  name: createReviews(string, string, CreateReviewBodyItem[], ServiceCallback<string[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviews(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], callback: ServiceCallback<string[]>)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createReviewsWithHttpOperationResponse
  name: createReviewsWithHttpOperationResponse(string, string, CreateReviewBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createReviewsWithHttpOperationResponse(urlContentType: string, teamName: string, createReviewBody: CreateReviewBodyItem[], options?: Object)'
    parameters:
    - id: urlContentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: createReviewBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
      description: >
        Revisiones de cuerpo para crear API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string[]>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews
  name: createVideoReviews(string, string, CreateVideoReviewsBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: >
        Revisiones de cuerpo para crear API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_2
  name: createVideoReviews(string, string, CreateVideoReviewsBodyItem[], Object, ServiceCallback<string[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options: Object, callback: ServiceCallback<string[]>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviews_1
  name: createVideoReviews(string, string, CreateVideoReviewsBodyItem[], ServiceCallback<string[]>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviews(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], callback: ServiceCallback<string[]>)'
    parameters:
    - id: contentType
      type:
      - string
      description: ''
    - id: teamName
      type:
      - string
      description: ''
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: ''
    - id: callback
      type:
      - ServiceCallback<string[]>
      description: ''
    return:
      type:
      - Promise<string[]>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.createVideoReviewsWithHttpOperationResponse
  name: createVideoReviewsWithHttpOperationResponse(string, string, CreateVideoReviewsBodyItem[], Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function createVideoReviewsWithHttpOperationResponse(contentType: string, teamName: string, createVideoReviewsBody: CreateVideoReviewsBodyItem[], options?: Object)'
    parameters:
    - id: contentType
      type:
      - string
      description: >
        El tipo de contenido.
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: createVideoReviewsBody
      type:
      - azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
      description: >
        Revisiones de cuerpo para crear API
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<string[]>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails
  name: getJobDetails(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtener los detalles del trabajo para un identificador de trabajo.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: jobId
      type:
      - string
      description: >
        Identificador del trabajo.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_2
  name: getJobDetails(string, string, Object, ServiceCallback<Job>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtener los detalles del trabajo para un identificador de trabajo.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, options: Object, callback: ServiceCallback<Job>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: jobId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetails_1
  name: getJobDetails(string, string, ServiceCallback<Job>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtener los detalles del trabajo para un identificador de trabajo.
  syntax:
    content: 'function getJobDetails(teamName: string, jobId: string, callback: ServiceCallback<Job>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: jobId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Job>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getJobDetailsWithHttpOperationResponse
  name: getJobDetailsWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Obtener los detalles del trabajo para un identificador de trabajo.
  syntax:
    content: 'function getJobDetailsWithHttpOperationResponse(teamName: string, jobId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: jobId
      type:
      - string
      description: >
        Identificador del trabajo.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Job>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview
  name: getReview(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Devuelve revisar los detalles de la revisión que pasa el identificador.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview_2
  name: getReview(string, string, Object, ServiceCallback<Review>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Devuelve revisar los detalles de la revisión que pasa el identificador.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<Review>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReview_1
  name: getReview(string, string, ServiceCallback<Review>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Devuelve revisar los detalles de la revisión que pasa el identificador.
  syntax:
    content: 'function getReview(teamName: string, reviewId: string, callback: ServiceCallback<Review>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Review>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getReviewWithHttpOperationResponse
  name: getReviewWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Devuelve revisar los detalles de la revisión que pasa el identificador.
  syntax:
    content: 'function getReviewWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Review>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames
  name: getVideoFrames(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_2
  name: getVideoFrames(string, string, Object, ServiceCallback<Frames>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<Frames>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFrames_1
  name: getVideoFrames(string, string, ServiceCallback<Frames>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFrames(teamName: string, reviewId: string, callback: ServiceCallback<Frames>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-contentmoderator.Frames>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.getVideoFramesWithHttpOperationResponse
  name: getVideoFramesWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Las revisiones que se creó aparecería de revisores en su equipo. Como revisores revisar, resultados de la revisión se CONTABILIZA (es decir, HTTP POST) en CallBackEndpoint especificado.

    <h3>Esquemas de devolución de llamada </h3>

    <h4>Ejemplo de devolución de llamada de finalización de revisión</h4>

    <p>

    {<br/>

    "ReviewId": "<Review Id>",<br/>

    "ModifiedOn": "2016-10-11T22:36:32.9934851Z",<br/>

    "ModifiedBy": "<Name of the Reviewer>",<br/>

    "Valor de CallBackType": "Review",<br/>

    "ContentId": "<The ContentId that was specified input>",<br/>

    "Metadatos": {}<br/>

    "adultscore": "0.xxx",<br/>

    "a": "False",<br/>

    "racyscore": "0.xxx",<br/>

    "r": "True"<br/>

    },<br/>

    "Agregaron elementos ReviewerResultTags": {}<br/>

    "a": "False",<br/>

    "r": "True"<br/>

    }<br/>

    }<br/>


    </p>.
  syntax:
    content: 'function getVideoFramesWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Frames>>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview
  name: publishVideoReview(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Publicar vídeo revisión para que esté disponible para su revisión.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_2
  name: publishVideoReview(string, string, Object, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Publicar vídeo revisión para que esté disponible para su revisión.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, options: Object, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: options
      type:
      - Object
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReview_1
  name: publishVideoReview(string, string, ServiceCallback<void>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Publicar vídeo revisión para que esté disponible para su revisión.
  syntax:
    content: 'function publishVideoReview(teamName: string, reviewId: string, callback: ServiceCallback<void>)'
    parameters:
    - id: teamName
      type:
      - string
      description: ''
    - id: reviewId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-contentmoderator
- uid: azure-cognitiveservices-contentmoderator.Reviews.publishVideoReviewWithHttpOperationResponse
  name: publishVideoReviewWithHttpOperationResponse(string, string, Object)
  children: []
  type: method
  langs:
  - typeScript
  summary: Publicar vídeo revisión para que esté disponible para su revisión.
  syntax:
    content: 'function publishVideoReviewWithHttpOperationResponse(teamName: string, reviewId: string, options?: Object)'
    parameters:
    - id: teamName
      type:
      - string
      description: >
        El nombre del equipo.
    - id: reviewId
      type:
      - string
      description: >
        Id. de la revisión.
    - id: options
      type:
      - Object
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-contentmoderator
references:
- uid: azure-cognitiveservices-contentmoderator.VideoFrameBodyItem[]
  name: VideoFrameBodyItem[]
  spec.typeScript:
  - name: VideoFrameBodyItem
    fullName: VideoFrameBodyItem
    uid: azure-cognitiveservices-contentmoderator.VideoFrameBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem[]
  name: TranscriptModerationBodyItem[]
  spec.typeScript:
  - name: TranscriptModerationBodyItem
    fullName: TranscriptModerationBodyItem
    uid: azure-cognitiveservices-contentmoderator.TranscriptModerationBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.Content
  name: Content
  spec.typeScript:
  - name: Content
    fullName: Content
    uid: azure-cognitiveservices-contentmoderator.Content
- uid: Promise<azure-cognitiveservices-contentmoderator.JobId>
  name: JobId>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.JobId>
  name: JobId>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.JobId>>
  name: JobId>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: JobId
    fullName: JobId
    uid: azure-cognitiveservices-contentmoderator.JobId
  - name: '>>'
    fullName: '>>'
- uid: azure-cognitiveservices-contentmoderator.CreateReviewBodyItem[]
  name: CreateReviewBodyItem[]
  spec.typeScript:
  - name: CreateReviewBodyItem
    fullName: CreateReviewBodyItem
    uid: azure-cognitiveservices-contentmoderator.CreateReviewBodyItem
  - name: '[]'
    fullName: '[]'
- uid: azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem[]
  name: CreateVideoReviewsBodyItem[]
  spec.typeScript:
  - name: CreateVideoReviewsBodyItem
    fullName: CreateVideoReviewsBodyItem
    uid: azure-cognitiveservices-contentmoderator.CreateVideoReviewsBodyItem
  - name: '[]'
    fullName: '[]'
- uid: Promise<azure-cognitiveservices-contentmoderator.Job>
  name: Job>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Job>
  name: Job>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Job>>
  name: Job>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Job
    fullName: Job
    uid: azure-cognitiveservices-contentmoderator.Job
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.Review>
  name: Review>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Review>
  name: Review>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Review>>
  name: Review>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Review
    fullName: Review
    uid: azure-cognitiveservices-contentmoderator.Review
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-contentmoderator.Frames>
  name: Frames>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-contentmoderator.Frames>
  name: Frames>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-contentmoderator.Frames>>
  name: Frames>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: Frames
    fullName: Frames
    uid: azure-cognitiveservices-contentmoderator.Frames
  - name: '>>'
    fullName: '>>'
