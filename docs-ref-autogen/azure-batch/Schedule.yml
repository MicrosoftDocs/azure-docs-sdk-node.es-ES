### YamlMime:UniversalReference
ms.openlocfilehash: 06b60b35e92b1bdb78fb167cb73a13f659ab965c
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/20/2018
ms.locfileid: "53658929"
items:
- uid: azure-batch.Schedule
  name: Schedule
  fullName: Schedule
  children:
  - azure-batch.Schedule.doNotRunAfter
  - azure-batch.Schedule.doNotRunUntil
  - azure-batch.Schedule.recurrenceInterval
  - azure-batch.Schedule.startWindow
  langs:
  - typeScript
  type: interface
  summary: ''
  package: azure-batch
- uid: azure-batch.Schedule.doNotRunAfter
  name: doNotRunAfter
  fullName: doNotRunAfter
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="9285f-101">Si no especifica una hora doNotRunAfter y va a crear una programación periódica del trabajo, la programación de trabajo permanecerá activa hasta que termina de forma explícita.</span><span class="sxs-lookup"><span data-stu-id="9285f-101">If you do not specify a doNotRunAfter time, and you are creating a recurring job schedule, the job schedule will remain active until you explicitly terminate it.</span></span>
  optional: true
  syntax:
    content: 'doNotRunAfter?: Date'
    return:
      type:
      - Date
  package: azure-batch
- uid: azure-batch.Schedule.doNotRunUntil
  name: doNotRunUntil
  fullName: doNotRunUntil
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="9285f-102">Si no especifica una hora doNotRunUntil, el programa queda listo para crear trabajos inmediatamente.</span><span class="sxs-lookup"><span data-stu-id="9285f-102">If you do not specify a doNotRunUntil time, the schedule becomes ready to create jobs immediately.</span></span>
  optional: true
  syntax:
    content: 'doNotRunUntil?: Date'
    return:
      type:
      - Date
  package: azure-batch
- uid: azure-batch.Schedule.recurrenceInterval
  name: recurrenceInterval
  fullName: recurrenceInterval
  children: []
  langs:
  - typeScript
  type: property
  summary: '<span data-ttu-id="9285f-103">Dado que una programación de trabajo puede tener como máximo un trabajo activo en él en cualquier momento dado, si es el momento de crear un nuevo trabajo en una programación de trabajo, pero todavía se está ejecutando el trabajo anterior, el servicio Batch no creará el nuevo trabajo hasta que finalice el trabajo anterior.</span><span class="sxs-lookup"><span data-stu-id="9285f-103">Because a job schedule can have at most one active job under it at any given time, if it is time to create a new job under a job schedule, but the previous job is still running, the Batch service will not create the new job until the previous job finishes.</span></span> <span data-ttu-id="9285f-104">Si el trabajo anterior no finaliza dentro del período de ventana de inicio de la nueva recurrenceInterval, no se programará ningún trabajo nuevo para ese intervalo.</span><span class="sxs-lookup"><span data-stu-id="9285f-104">If the previous job does not finish within the startWindow period of the new recurrenceInterval, then no new job will be scheduled for that interval.</span></span> <span data-ttu-id="9285f-105">Para los trabajos recurrentes, normalmente debe especificar un jobManagerTask en el jobSpecification.</span><span class="sxs-lookup"><span data-stu-id="9285f-105">For recurring jobs, you should normally specify a jobManagerTask in the jobSpecification.</span></span> <span data-ttu-id="9285f-106">Si no usa jobManagerTask, necesitará un proceso externo para supervisar cuándo se crean trabajos, agregar tareas a los trabajos y terminar los trabajos listos para la siguiente repetición.</span><span class="sxs-lookup"><span data-stu-id="9285f-106">If you do not use jobManagerTask, you will need an external process to monitor when jobs are created, add tasks to the jobs and terminate the jobs ready for the next recurrence.</span></span> <span data-ttu-id="9285f-107">El valor predeterminado es que no se repite la programación: se crea un trabajo, dentro de la ventana de inicio después de la hora doNotRunUntil, y la programación está completa tan pronto como finalice ese trabajo.</span><span class="sxs-lookup"><span data-stu-id="9285f-107">The default is that the schedule does not recur: one job is created, within the startWindow after the doNotRunUntil time, and the schedule is complete as soon as that job finishes.</span></span> <span data-ttu-id="9285f-108">El valor mínimo es 1 minuto.</span><span class="sxs-lookup"><span data-stu-id="9285f-108">The minimum value is 1 minute.</span></span> <span data-ttu-id="9285f-109">Si especifica un valor inferior, el servicio Batch rechaza la programación con un error; Si está llamando a la API de REST directamente, el código de estado HTTP es 400 (solicitud incorrecta).</span><span class="sxs-lookup"><span data-stu-id="9285f-109">If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</span></span>'
  optional: true
  syntax:
    content: 'recurrenceInterval?: Duration'
    return:
      type:
      - Duration
  package: azure-batch
- uid: azure-batch.Schedule.startWindow
  name: startWindow
  fullName: startWindow
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="9285f-110">Si no se crea un trabajo en el intervalo de la ventana de inicio, se pierde; a continuación, la oportunidad de' ' no se creará ningún trabajo hasta la siguiente repetición de la programación.</span><span class="sxs-lookup"><span data-stu-id="9285f-110">If a job is not created within the startWindow interval, then the 'opportunity' is lost; no job will be created until the next recurrence of the schedule.</span></span> <span data-ttu-id="9285f-111">Si se repite la programación y la ventana de inicio es mayor que el intervalo de periodicidad, a continuación, esto equivale a una ventana de inicio infinito, porque el trabajo que se debe en uno recurrenceInterval no se mantiene en el siguiente intervalo de periodicidad.</span><span class="sxs-lookup"><span data-stu-id="9285f-111">If the schedule is recurring, and the startWindow is longer than the recurrence interval, then this is equivalent to an infinite startWindow, because the job that is 'due' in one recurrenceInterval is not carried forward into the next recurrence interval.</span></span> <span data-ttu-id="9285f-112">El valor predeterminado es infinito.</span><span class="sxs-lookup"><span data-stu-id="9285f-112">The default is infinite.</span></span> <span data-ttu-id="9285f-113">El valor mínimo es 1 minuto.</span><span class="sxs-lookup"><span data-stu-id="9285f-113">The minimum value is 1 minute.</span></span> <span data-ttu-id="9285f-114">Si especifica un valor inferior, el servicio Batch rechaza la programación con un error; Si está llamando a la API de REST directamente, el código de estado HTTP es 400 (solicitud incorrecta).</span><span class="sxs-lookup"><span data-stu-id="9285f-114">If you specify a lower value, the Batch service rejects the schedule with an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).</span></span>
  optional: true
  syntax:
    content: 'startWindow?: Duration'
    return:
      type:
      - Duration
  package: azure-batch
