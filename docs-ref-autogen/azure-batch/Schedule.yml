### YamlMime:UniversalReference
items:
  - uid: azure-batch.Schedule
    name: Schedule
    fullName: Schedule
    children:
      - azure-batch.Schedule.doNotRunAfter
      - azure-batch.Schedule.doNotRunUntil
      - azure-batch.Schedule.recurrenceInterval
      - azure-batch.Schedule.startWindow
    langs:
      - typeScript
    type: interface
    summary: ''
    package: azure-batch
  - uid: azure-batch.Schedule.doNotRunAfter
    name: doNotRunAfter
    fullName: doNotRunAfter
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Si no especifica una hora doNotRunAfter y va a crear una programación periódica del trabajo, la programación de trabajo permanecerá activa hasta que termina de forma explícita.'
    optional: true
    syntax:
      content: 'doNotRunAfter?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.Schedule.doNotRunUntil
    name: doNotRunUntil
    fullName: doNotRunUntil
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Si no especifica una hora doNotRunUntil, el programa queda listo para crear trabajos inmediatamente.'
    optional: true
    syntax:
      content: 'doNotRunUntil?: Date'
      return:
        type:
          - Date
    package: azure-batch
  - uid: azure-batch.Schedule.recurrenceInterval
    name: recurrenceInterval
    fullName: recurrenceInterval
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Dado que una programación de trabajo puede tener como máximo un trabajo activo en él en cualquier momento dado, si es el momento de crear un nuevo trabajo en una programación de trabajo, pero todavía se está ejecutando el trabajo anterior, el servicio Batch no creará el nuevo trabajo hasta que finalice el trabajo anterior. Si el trabajo anterior no finaliza dentro del período de ventana de inicio de la nueva recurrenceInterval, no se programará ningún trabajo nuevo para ese intervalo. Para los trabajos recurrentes, normalmente debe especificar un jobManagerTask en el jobSpecification. Si no usa jobManagerTask, necesitará un proceso externo para supervisar cuándo se crean trabajos, agregar tareas a los trabajos y terminar los trabajos listos para la siguiente repetición. El valor predeterminado es que no se repite la programación: se crea un trabajo, dentro de la ventana de inicio después de la hora doNotRunUntil, y la programación está completa tan pronto como finalice ese trabajo. El valor mínimo es 1 minuto. Si especifica un valor inferior, el servicio Batch rechaza la programación con un error; Si está llamando a la API de REST directamente, el código de estado HTTP es 400 (solicitud incorrecta).'
    optional: true
    syntax:
      content: 'recurrenceInterval?: Duration'
      return:
        type:
          - Duration
    package: azure-batch
  - uid: azure-batch.Schedule.startWindow
    name: startWindow
    fullName: startWindow
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Si no se crea un trabajo en el intervalo de la ventana de inicio, se pierde; a continuación, la oportunidad de'' '' no se creará ningún trabajo hasta la siguiente repetición de la programación. Si se repite la programación y la ventana de inicio es mayor que el intervalo de periodicidad, a continuación, esto equivale a una ventana de inicio infinito, porque el trabajo que se debe en uno recurrenceInterval no se mantiene en el siguiente intervalo de periodicidad. El valor predeterminado es infinito. El valor mínimo es 1 minuto. Si especifica un valor inferior, el servicio Batch rechaza la programación con un error; Si está llamando a la API de REST directamente, el código de estado HTTP es 400 (solicitud incorrecta).'
    optional: true
    syntax:
      content: 'startWindow?: Duration'
      return:
        type:
          - Duration
    package: azure-batch