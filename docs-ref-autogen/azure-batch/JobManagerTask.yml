### YamlMime:UniversalReference
ms.openlocfilehash: b689168bdbe39b7bbe6c1af6f526770fde446576
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/20/2018
ms.locfileid: "53663019"
items:
- uid: azure-batch.JobManagerTask
  name: JobManagerTask
  fullName: JobManagerTask
  children:
  - azure-batch.JobManagerTask.allowLowPriorityNode
  - azure-batch.JobManagerTask.applicationPackageReferences
  - azure-batch.JobManagerTask.authenticationTokenSettings
  - azure-batch.JobManagerTask.commandLine
  - azure-batch.JobManagerTask.constraints
  - azure-batch.JobManagerTask.containerSettings
  - azure-batch.JobManagerTask.displayName
  - azure-batch.JobManagerTask.environmentSettings
  - azure-batch.JobManagerTask.id
  - azure-batch.JobManagerTask.killJobOnCompletion
  - azure-batch.JobManagerTask.outputFiles
  - azure-batch.JobManagerTask.resourceFiles
  - azure-batch.JobManagerTask.runExclusive
  - azure-batch.JobManagerTask.userIdentity
  langs:
  - typeScript
  type: interface
  summary: La tarea del Administrador de trabajos se inicie automáticamente cuando se crea el trabajo. El servicio Batch intenta programar la tarea del Administrador de trabajos antes que cualquier otra tarea en el trabajo. Al reducir un grupo, el servicio Batch intenta conservar los nodos de proceso donde se ejecutan las tareas de administrador de trabajos tanto como sea posible (es decir, nodos de las tareas de ejecución 'normales' se quitan antes de nodos que ejecutan tareas del Administrador de trabajos). Cuando una tarea del Administrador de trabajos se produce un error y debe reiniciarse, el sistema intenta programarlo con la máxima prioridad. Si no hay ningún nodo inactivo disponible, el sistema puede finalizar una de las tareas en ejecución en el grupo y vuelva a la cola con el fin de dejar espacio para la tarea del Administrador de trabajos reiniciar. Tenga en cuenta que una tarea del Administrador de trabajos de un trabajo no tiene prioridad sobre las tareas de otros trabajos. Entre trabajos, se observan solo prioridades de nivel de trabajo. Por ejemplo, si un administrador de trabajos en un trabajo de prioridad 0 debe reiniciarse, no mostrará las tareas de un trabajo de prioridad 1. Batch volverá a intentar tareas cuando se desencadena una operación de recuperación en un nodo de proceso. Ejemplos de operaciones de recuperación incluyen (pero no se limitan a) cuando se reinicia un nodo de proceso en mal estado o un nodo de proceso ha desaparecido debido a un error de host. Vuelve a intentar debido a la recuperación de las operaciones son independientes y no se incluyen en el valor maxTaskRetryCount. Incluso si el valor maxTaskRetryCount es 0, puede producirse un reintento interno debido a una operación de recuperación. Por este motivo, todas las tareas deben ser idempotentes. Esto significa que las tareas debe tolerar se interrumpe y se reinicia sin causar cualquier daño o datos duplicados. La mejor práctica para las tareas de larga ejecución es utilizar alguna forma de los puntos de comprobación.
  package: azure-batch
- uid: azure-batch.JobManagerTask.allowLowPriorityNode
  name: allowLowPriorityNode
  fullName: allowLowPriorityNode
  children: []
  langs:
  - typeScript
  type: property
  summary: El valor predeterminado es true.
  optional: true
  syntax:
    content: 'allowLowPriorityNode?: boolean'
    return:
      type:
      - boolean
  package: azure-batch
- uid: azure-batch.JobManagerTask.applicationPackageReferences
  name: applicationPackageReferences
  fullName: applicationPackageReferences
  children: []
  langs:
  - typeScript
  type: property
  summary: Paquetes de aplicación se descargan y se implementa en un directorio compartido, no en la tarea en el directorio de trabajo. Por lo tanto, si un paquete que se hace referencia ya está en el nodo de proceso y están actualizados, a continuación, no vuelva a descargarlo; se utiliza la copia existente en el nodo de proceso. Si un paquete de aplicación que se hace referencia no se puede instalar, por ejemplo porque el paquete se ha eliminado o porque no se pudo descargar, se produce un error en la tarea.
  optional: true
  syntax:
    content: 'applicationPackageReferences?: ApplicationPackageReference[]'
    return:
      type:
      - azure-batch.ApplicationPackageReference[]
  package: azure-batch
- uid: azure-batch.JobManagerTask.authenticationTokenSettings
  name: authenticationTokenSettings
  fullName: authenticationTokenSettings
  children: []
  langs:
  - typeScript
  type: property
  summary: Si se establece esta propiedad, el servicio Batch proporciona la tarea con un token de autenticación que se puede usar para autenticar las operaciones de servicio de Batch sin necesidad de una clave de acceso de cuenta. El token se proporciona a través de la variable de entorno AZ_BATCH_AUTHENTICATION_TOKEN. Las operaciones que la tarea puede llevar a cabo con el token dependen de la configuración. Por ejemplo, una tarea puede solicitar permisos de trabajo con el fin de agregar otras tareas al trabajo, o comprobar el estado del trabajo o de otras tareas en el trabajo.
  optional: true
  syntax:
    content: 'authenticationTokenSettings?: AuthenticationTokenSettings'
    return:
      type:
      - azure-batch.AuthenticationTokenSettings
  package: azure-batch
- uid: azure-batch.JobManagerTask.commandLine
  name: commandLine
  fullName: commandLine
  children: []
  langs:
  - typeScript
  type: property
  summary: La línea de comandos no se ejecuta en un shell y, por lo tanto, no se puede aprovechar las características de shell, como la expansión de variables de entorno. Si desea aprovechar las ventajas de estas características, debe invocar el shell en la línea de comandos, por ejemplo "cmd /c MyCommand" se usa en Windows o "/ bin/sh - c MyCommand" en Linux. Si la línea de comandos se refiere a las rutas de acceso de archivo, debe usar una ruta de acceso relativa (relativo al directorio de trabajo de tarea), o use la variable de entorno proporcionada por lotes (https://docs.microsoft.com/en-us/azure/batch/batch-compute-node-environment-variables).
  syntax:
    content: 'commandLine: string'
    return:
      type:
      - string
  package: azure-batch
- uid: azure-batch.JobManagerTask.constraints
  name: constraints
  fullName: constraints
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'constraints?: TaskConstraints'
    return:
      type:
      - azure-batch.TaskConstraints
  package: azure-batch
- uid: azure-batch.JobManagerTask.containerSettings
  name: containerSettings
  fullName: containerSettings
  children: []
  langs:
  - typeScript
  type: property
  summary: Si el grupo que ejecutará esta tarea tiene containerConfiguration establecida, se debe establecer también. Si el grupo que ejecutará esta tarea no tiene containerConfiguration establecido, no debe establecerse. Cuando se especifica, se asignan todos los directorios recursivamente debajo el AZ_BATCH_NODE_ROOT_DIR (la raíz de los directorios de Azure Batch en el nodo) en el contenedor, todas las variables de entorno de tareas se asignan en el contenedor y es la línea de comandos de tarea se ejecuta en el contenedor.
  optional: true
  syntax:
    content: 'containerSettings?: TaskContainerSettings'
    return:
      type:
      - azure-batch.TaskContainerSettings
  package: azure-batch
- uid: azure-batch.JobManagerTask.displayName
  name: displayName
  fullName: displayName
  children: []
  langs:
  - typeScript
  type: property
  summary: No necesita ser único y puede contener cualquier carácter Unicode hasta una longitud máxima de 1024.
  optional: true
  syntax:
    content: 'displayName?: string'
    return:
      type:
      - string
  package: azure-batch
- uid: azure-batch.JobManagerTask.environmentSettings
  name: environmentSettings
  fullName: environmentSettings
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  optional: true
  syntax:
    content: 'environmentSettings?: EnvironmentSetting[]'
    return:
      type:
      - azure-batch.EnvironmentSetting[]
  package: azure-batch
- uid: azure-batch.JobManagerTask.id
  name: id
  fullName: id
  children: []
  langs:
  - typeScript
  type: property
  summary: El identificador puede contener cualquier combinación de caracteres alfanuméricos incluidos guiones y caracteres de subrayado y no puede contener más de 64 caracteres.
  syntax:
    content: 'id: string'
    return:
      type:
      - string
  package: azure-batch
- uid: azure-batch.JobManagerTask.killJobOnCompletion
  name: killJobOnCompletion
  fullName: killJobOnCompletion
  children: []
  langs:
  - typeScript
  type: property
  summary: Si es true, cuando se complete la tarea del Administrador de trabajos, las marcas de servicio de proceso por lotes el trabajo como completará. Si las tareas siguen en ejecución en este momento (distintos de liberación del trabajo), se finalizan las tareas. Si es false, la finalización de la tarea del Administrador de trabajos no afecta el estado del trabajo. En este caso, debe usar el atributo onAllTasksComplete para finalizar el trabajo, o tiene un cliente o usuario explícitamente que el trabajo finalice. Un ejemplo de esto es si el Administrador de trabajos crea un conjunto de tareas, pero, a continuación, se toma ninguna función adicional en su ejecución. El valor predeterminado es true. Si usa los atributos onAllTasksComplete y onTaskFailure a duración del trabajo de control y el uso de la tarea del Administrador de trabajos solo para crear las tareas del trabajo (no para supervisar el progreso), es importante establecer killJobOnCompletion en false.
  optional: true
  syntax:
    content: 'killJobOnCompletion?: boolean'
    return:
      type:
      - boolean
  package: azure-batch
- uid: azure-batch.JobManagerTask.outputFiles
  name: outputFiles
  fullName: outputFiles
  children: []
  langs:
  - typeScript
  type: property
  summary: Para las tareas de instancias múltiples, sólo se cargarán los archivos desde el nodo de proceso en el que se ejecuta la tarea principal.
  optional: true
  syntax:
    content: 'outputFiles?: OutputFile[]'
    return:
      type:
      - azure-batch.OutputFile[]
  package: azure-batch
- uid: azure-batch.JobManagerTask.resourceFiles
  name: resourceFiles
  fullName: resourceFiles
  children: []
  langs:
  - typeScript
  type: property
  summary: >-
    Archivos que aparecen bajo este elemento se encuentran en el directorio de trabajo de la tarea.

    Hay un tamaño máximo para la lista de archivos de recursos.  Cuando se supera el tamaño máximo, se producirá un error en la solicitud y el código de error de respuesta será la entidad solicitada demasiado grande. Si esto ocurre, se debe reducir la colección de ResourceFiles de tamaño. Esto puede lograrse mediante los archivos .zip, paquetes de aplicaciones o contenedores de Docker.
  optional: true
  syntax:
    content: 'resourceFiles?: ResourceFile[]'
    return:
      type:
      - azure-batch.ResourceFile[]
  package: azure-batch
- uid: azure-batch.JobManagerTask.runExclusive
  name: runExclusive
  fullName: runExclusive
  children: []
  langs:
  - typeScript
  type: property
  summary: Si es true, no hay otras tareas se ejecutarán en el mismo nodo de proceso para siempre y cuando se está ejecutando el Administrador de trabajos. Si es false, otras tareas pueden ejecutar simultáneamente con el Administrador de trabajos en un nodo de proceso. La tarea del Administrador de trabajos se descuenta normalmente límite de tareas simultáneas del nodo, por lo que esto solo es pertinente si el nodo permite que varias tareas simultáneas. El valor predeterminado es true.
  optional: true
  syntax:
    content: 'runExclusive?: boolean'
    return:
      type:
      - boolean
  package: azure-batch
- uid: azure-batch.JobManagerTask.userIdentity
  name: userIdentity
  fullName: userIdentity
  children: []
  langs:
  - typeScript
  type: property
  summary: Si se omite, la tarea se ejecuta como un usuario sin derechos administrativos único para la tarea.
  optional: true
  syntax:
    content: 'userIdentity?: UserIdentity'
    return:
      type:
      - azure-batch.UserIdentity
  package: azure-batch
references:
- uid: azure-batch.ApplicationPackageReference[]
  name: ApplicationPackageReference[]
  spec.typeScript:
  - name: ApplicationPackageReference
    fullName: ApplicationPackageReference
    uid: azure-batch.ApplicationPackageReference
  - name: '[]'
    fullName: '[]'
- uid: azure-batch.AuthenticationTokenSettings
  name: AuthenticationTokenSettings
  spec.typeScript:
  - name: AuthenticationTokenSettings
    fullName: AuthenticationTokenSettings
    uid: azure-batch.AuthenticationTokenSettings
- uid: azure-batch.TaskConstraints
  name: TaskConstraints
  spec.typeScript:
  - name: TaskConstraints
    fullName: TaskConstraints
    uid: azure-batch.TaskConstraints
- uid: azure-batch.TaskContainerSettings
  name: TaskContainerSettings
  spec.typeScript:
  - name: TaskContainerSettings
    fullName: TaskContainerSettings
    uid: azure-batch.TaskContainerSettings
- uid: azure-batch.EnvironmentSetting[]
  name: EnvironmentSetting[]
  spec.typeScript:
  - name: EnvironmentSetting
    fullName: EnvironmentSetting
    uid: azure-batch.EnvironmentSetting
  - name: '[]'
    fullName: '[]'
- uid: azure-batch.OutputFile[]
  name: OutputFile[]
  spec.typeScript:
  - name: OutputFile
    fullName: OutputFile
    uid: azure-batch.OutputFile
  - name: '[]'
    fullName: '[]'
- uid: azure-batch.ResourceFile[]
  name: ResourceFile[]
  spec.typeScript:
  - name: ResourceFile
    fullName: ResourceFile
    uid: azure-batch.ResourceFile
  - name: '[]'
    fullName: '[]'
- uid: azure-batch.UserIdentity
  name: UserIdentity
  spec.typeScript:
  - name: UserIdentity
    fullName: UserIdentity
    uid: azure-batch.UserIdentity
