### YamlMime:UniversalReference
ms.openlocfilehash: c2b93dacc7cedb9cb424f2fd53eb419a9b4b1a63
ms.sourcegitcommit: ce76ec3eda83746ef9a765165173b5c00b5b7df6
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 12/20/2018
ms.locfileid: "53710510"
items:
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  fullName: ModuleClient
  children:
  - azure-iot-device.ModuleClient.close_1
  - azure-iot-device.ModuleClient.close
  - azure-iot-device.ModuleClient.fromAuthenticationProvider
  - azure-iot-device.ModuleClient.fromConnectionString
  - azure-iot-device.ModuleClient.fromEnvironment_1
  - azure-iot-device.ModuleClient.fromEnvironment
  - azure-iot-device.ModuleClient.fromSharedAccessSignature
  - azure-iot-device.ModuleClient.invokeMethod_2
  - azure-iot-device.ModuleClient.invokeMethod
  - azure-iot-device.ModuleClient.invokeMethod_3
  - azure-iot-device.ModuleClient.invokeMethod_1
  - azure-iot-device.ModuleClient.onMethod
  - azure-iot-device.ModuleClient.sendOutputEvent_1
  - azure-iot-device.ModuleClient.sendOutputEvent
  - azure-iot-device.ModuleClient.sendOutputEventBatch_1
  - azure-iot-device.ModuleClient.sendOutputEventBatch
  - azure-iot-device.ModuleClient.setOptions_1
  - azure-iot-device.ModuleClient.setOptions
  langs:
  - typeScript
  type: class
  summary: >
    Cliente de dispositivo de IoT Hub usada para conectar un dispositivo con Azure IoT hub.

    Los usuarios del SDK deben llamar a uno de los métodos de fábrica, [fromConnectionString](xref:azure-iot-device.Client.fromConnectionString) o [fromSharedAccessSignature](xref:azure-iot-device.Client.fromSharedAccessSignature) para crear un cliente de dispositivo de IoT Hub.
  extends:
    name: InternalClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close_1
  name: close()
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Cierra la conexión de transporte y destruye los recursos del cliente.

    *Nota: Después de llamar a este método la ModuleClient objeto no se puede reutilizar.*
  syntax:
    content: function close()
    parameters: []
    return:
      type:
      - Promise<Disconnected>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.close
  name: close(Callback<Disconnected>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Cierra la conexión de transporte y destruye los recursos del cliente.

    *Nota: Después de llamar a este método la ModuleClient objeto no se puede reutilizar.*
  syntax:
    content: 'function close(closeCallback: Callback<Disconnected>)'
    parameters:
    - id: closeCallback
      type:
      - Callback<Disconnected>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromAuthenticationProvider
  name: fromAuthenticationProvider(AuthenticationProvider, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea a un cliente de módulo de IoT Hub desde el método de autenticación especificado y usa el tipo de transporte determinado.
  syntax:
    content: 'static function fromAuthenticationProvider(authenticationProvider: AuthenticationProvider, transportCtor: any)'
    parameters:
    - id: authenticationProvider
      type:
      - AuthenticationProvider
      description: Objeto utilizado para obtener los parámetros de autenticación para el centro de IoT.
    - id: transportCtor
      type:
      - any
      description: >
        Transporte de protocolo que se usa para conectarse a IoT hub.
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromConnectionString
  name: fromConnectionString(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea a un cliente de dispositivo de IoT Hub de la cadena de conexión determinado mediante el tipo de transporte determinado.
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor: any)'
    parameters:
    - id: connStr
      type:
      - string
      description: Una cadena de conexión que encapsula permisos de "conexión de dispositivo" en un centro de IoT.
    - id: transportCtor
      type:
      - any
      description: >
        Un constructor de transporte.
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment_1
  name: fromEnvironment(any)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Crea a un cliente de módulo de IoT Hub mediante el uso de información de configuración del entorno.

    Si llama una variable de entorno `EdgeHubConnectionString` o `IotHubConnectionString` existe, se utiliza ese valor y el comportamiento es idéntico a llamar a `fromConnectionString` pasando que en. Si no existen esas variables de entorno deben definirse las variables siguientes:

        - URI de IOTEDGE_WORKLOADURI para cargas de trabajo de iotedged API
        - Identificador de dispositivo IOTEDGE_DEVICEID
        - Identificador de módulo IOTEDGE_MODULEID
        - Identificador de generación de módulo IOTEDGE_MODULEGENERATIONID
        - Nombre de host IOTEDGE_IOTHUBHOSTNAME IoT Hub
        - Esquema de autenticación de IOTEDGE_AUTHSCHEME a usar. debe ser "sasToken"
  syntax:
    content: 'static function fromEnvironment(transportCtor: any)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - Promise<azure-iot-device.ModuleClient>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromEnvironment
  name: fromEnvironment(any, Callback<ModuleClient>)
  children: []
  type: method
  langs:
  - typeScript
  summary: >
    Crea a un cliente de módulo de IoT Hub mediante el uso de información de configuración del entorno.

    Si llama una variable de entorno `EdgeHubConnectionString` o `IotHubConnectionString` existe, se utiliza ese valor y el comportamiento es idéntico a llamar a `fromConnectionString` pasando que en. Si no existen esas variables de entorno deben definirse las variables siguientes:

        - URI de IOTEDGE_WORKLOADURI para cargas de trabajo de iotedged API
        - Identificador de dispositivo IOTEDGE_DEVICEID
        - Identificador de módulo IOTEDGE_MODULEID
        - Identificador de generación de módulo IOTEDGE_MODULEGENERATIONID
        - Nombre de host IOTEDGE_IOTHUBHOSTNAME IoT Hub
        - Esquema de autenticación de IOTEDGE_AUTHSCHEME a usar. debe ser "sasToken"
  syntax:
    content: 'static function fromEnvironment(transportCtor: any, callback: Callback<ModuleClient>)'
    parameters:
    - id: transportCtor
      type:
      - any
      description: Transporte de protocolo que se usa para conectarse a IoT hub.
    - id: callback
      type:
      - Callback<azure-iot-device.ModuleClient>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.fromSharedAccessSignature
  name: fromSharedAccessSignature(string, any)
  children: []
  type: method
  langs:
  - typeScript
  summary: Crea a un cliente de módulo de IoT Hub de la firma de acceso compartido dada con el tipo de transporte determinado.
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor: any)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: Una firma de acceso compartido que encapsula permisos de "conexión de dispositivo" en un centro de IoT.
    - id: transportCtor
      type:
      - any
      description: ''
    return:
      type:
      - azure-iot-device.ModuleClient
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_2
  name: invokeMethod(string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: Invoca un método en un dispositivo de nivel inferior o en otro módulo en el mismo dispositivo de Edge. Tenga en cuenta que esta característica solo funciona cuando el módulo se está ejecutando como parte de un dispositivo de Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod
  name: invokeMethod(string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Invoca un método en un dispositivo de nivel inferior o en otro módulo en el mismo dispositivo de Edge. Tenga en cuenta que esta característica solo funciona cuando el módulo se está ejecutando como parte de un dispositivo de Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: identificador de dispositivo de destino
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: parámetros de la llamada al método directo
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_3
  name: invokeMethod(string, string, MethodParams)
  children: []
  type: method
  langs:
  - typeScript
  summary: Invoca un método en un dispositivo de nivel inferior o en otro módulo en el mismo dispositivo de Edge. Tenga en cuenta que esta característica solo funciona cuando el módulo se está ejecutando como parte de un dispositivo de Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    return:
      type:
      - Promise<azure-iot-device.MethodResult>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.invokeMethod_1
  name: invokeMethod(string, string, MethodParams, Callback<MethodResult>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Invoca un método en un dispositivo de nivel inferior o en otro módulo en el mismo dispositivo de Edge. Tenga en cuenta que esta característica solo funciona cuando el módulo se está ejecutando como parte de un dispositivo de Edge.
  syntax:
    content: 'function invokeMethod(deviceId: string, moduleId: string, methodParams: MethodParams, callback: Callback<MethodResult>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iot-device.MethodParams
      description: ''
    - id: callback
      type:
      - Callback<azure-iot-device.MethodResult>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.onMethod
  name: onMethod(string, DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Registra una devolución de llamada para un método denominado `methodName`.
  syntax:
    content: 'function onMethod(methodName: string, callback: DoubleValueCallback<DeviceMethodRequest, DeviceMethodResponse>)'
    parameters:
    - id: methodName
      type:
      - string
      description: Nombre del método que controlará la devolución de llamada
    - id: callback
      type:
      - DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
      description: >
        Función que se llamará siempre que una solicitud del método para el método llamado `methodName` se recibe.
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent_1
  name: sendOutputEvent(string, Message)
  children: []
  type: method
  langs:
  - typeScript
  summary: Envía un evento a la salida del módulo determinado
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message)'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: message
      type:
      - Message
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEvent
  name: sendOutputEvent(string, Message, Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Envía un evento a la salida del módulo determinado
  syntax:
    content: 'function sendOutputEvent(outputName: string, message: Message, callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: Nombre de la salida para enviar el evento
    - id: message
      type:
      - Message
      description: Mensaje que se enviará a la salida especificada
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch_1
  name: sendOutputEventBatch(string, Message[])
  children: []
  type: method
  langs:
  - typeScript
  summary: Envía una matriz de eventos a la salida del módulo determinado
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[])'
    parameters:
    - id: outputName
      type:
      - string
      description: ''
    - id: messages
      type:
      - Message[]
      description: ''
    return:
      type:
      - Promise<MessageEnqueued>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.sendOutputEventBatch
  name: sendOutputEventBatch(string, Message[], Callback<MessageEnqueued>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Envía una matriz de eventos a la salida del módulo determinado
  syntax:
    content: 'function sendOutputEventBatch(outputName: string, messages: Message[], callback: Callback<MessageEnqueued>)'
    parameters:
    - id: outputName
      type:
      - string
      description: Nombre de la salida para enviar los eventos a
    - id: messages
      type:
      - Message[]
      description: ''
    - id: callback
      type:
      - Callback<MessageEnqueued>
      description: ''
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions_1
  name: setOptions(DeviceClientOptions)
  children: []
  type: method
  langs:
  - typeScript
  summary: Pasa las opciones para el `ModuleClient` objeto que se puede usar para configurar el transporte.
  syntax:
    content: 'function setOptions(options: DeviceClientOptions)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: ''
    return:
      type:
      - Promise<TransportConfigured>
  package: azure-iot-device
- uid: azure-iot-device.ModuleClient.setOptions
  name: setOptions(DeviceClientOptions, Callback<TransportConfigured>)
  children: []
  type: method
  langs:
  - typeScript
  summary: Pasa las opciones para el `ModuleClient` objeto que se puede usar para configurar el transporte.
  syntax:
    content: 'function setOptions(options: DeviceClientOptions, done: Callback<TransportConfigured>)'
    parameters:
    - id: options
      type:
      - azure-iot-device.DeviceClientOptions
      description: Un objeto <xref:DeviceClientOptions>.
    - id: done
      type:
      - Callback<TransportConfigured>
      description: ''
  package: azure-iot-device
references:
- uid: azure-iot-device.MethodParams
  name: MethodParams
  spec.typeScript:
  - name: MethodParams
    fullName: MethodParams
    uid: azure-iot-device.MethodParams
- uid: Callback<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.MethodResult>
  name: MethodResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: MethodResult
    fullName: MethodResult
    uid: azure-iot-device.MethodResult
  - name: '>'
    fullName: '>'
- uid: DoubleValueCallback<azure-iot-device.DeviceMethodRequest, azure-iot-device.DeviceMethodResponse>
  name: DeviceMethodResponse>
  spec.typeScript:
  - name: DoubleValueCallback<
    fullName: DoubleValueCallback<
  - name: DeviceMethodRequest
    fullName: DeviceMethodRequest
    uid: azure-iot-device.DeviceMethodRequest
  - name: ', '
    fullName: ', '
  - name: DeviceMethodResponse
    fullName: DeviceMethodResponse
    uid: azure-iot-device.DeviceMethodResponse
  - name: '>'
    fullName: '>'
- uid: azure-iot-device.DeviceClientOptions
  name: DeviceClientOptions
  spec.typeScript:
  - name: DeviceClientOptions
    fullName: DeviceClientOptions
    uid: azure-iot-device.DeviceClientOptions
- uid: azure-iot-device.ModuleClient
  name: ModuleClient
  spec.typeScript:
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
- uid: Callback<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
- uid: Promise<azure-iot-device.ModuleClient>
  name: ModuleClient>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ModuleClient
    fullName: ModuleClient
    uid: azure-iot-device.ModuleClient
  - name: '>'
    fullName: '>'
