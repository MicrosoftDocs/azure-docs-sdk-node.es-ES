### YamlMime:UniversalReference
ms.openlocfilehash: ef2f3fdeda5cd1123e7dc563064ef185aecd09d2
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/22/2018
ms.locfileid: "41686214"
items:
- uid: azure-event-processor-host.EventProcessorOptions
  name: EventProcessorOptions
  fullName: EventProcessorOptions
  children:
  - azure-event-processor-host.EventProcessorOptions.autoCheckpoint
  - azure-event-processor-host.EventProcessorOptions.consumerGroup
  - azure-event-processor-host.EventProcessorOptions.initialOffset
  - azure-event-processor-host.EventProcessorOptions.leasecontainerName
  - azure-event-processor-host.EventProcessorOptions.leaseManager
  - azure-event-processor-host.EventProcessorOptions.storageBlobPrefix
  langs:
  - typeScript
  type: interface
  summary: <span data-ttu-id="6d4b0-101">Describe los parámetros opcionales que se pueden usar para crear un EventProcessorHost.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-101">Describes the optional parameters that can be provided for creating an EventProcessorHost.</span></span>
  extends:
    name: ClientOptionsBase
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorOptions.autoCheckpoint
  name: autoCheckpoint
  fullName: autoCheckpoint
  children: []
  langs:
  - typeScript
  type: property
  summary: '<span data-ttu-id="6d4b0-102">{valor} booleano [autoCheckpoint] Checkpoint automáticamente el desplazamiento en nombre del cliente.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-102">{boolean} [autoCheckpoint] Automatically checkpoint the offset on behalf of the customer.</span></span> <span data-ttu-id="6d4b0-103">Valor predeterminado: `true`.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-103">Default value: `true`.</span></span>'
  optional: true
  syntax:
    content: 'autoCheckpoint?: boolean'
    return:
      type:
      - boolean
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorOptions.consumerGroup
  name: consumerGroup
  fullName: consumerGroup
  children: []
  langs:
  - typeScript
  type: property
  summary: '<span data-ttu-id="6d4b0-104">{cadena} [consumerGroup] El nombre del grupo de consumidores en el centro de eventos.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-104">{string} [consumerGroup] The name of the consumer group within the Event Hub.</span></span> <span data-ttu-id="6d4b0-105">Valor predeterminado: "$default"</span><span class="sxs-lookup"><span data-stu-id="6d4b0-105">Default value: "$default"</span></span>'
  optional: true
  syntax:
    content: 'consumerGroup?: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorOptions.initialOffset
  name: initialOffset
  fullName: initialOffset
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="6d4b0-106">InitialOffset {EventPosition} esto solo es utilizado al receptor se crea por primera vez y no hay ningún dato de punto de comprobación en el blob.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-106">{EventPosition} initialOffset This is only used when then receiver is being created for the very first time and there is no checkpoint data in the blob.</span></span> <span data-ttu-id="6d4b0-107">Para que sea eficaz esta opción Asegúrese de proporcionar un nuevo nombre de host que no se ha usado anteriormente.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-107">For this option to be effective please make sure to provide a new hostName that was not used previously.</span></span>
  optional: true
  syntax:
    content: 'initialOffset?: EventPosition'
    return:
      type:
      - EventPosition
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorOptions.leasecontainerName
  name: leasecontainerName
  fullName: leasecontainerName
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="6d4b0-108">{cadena} [leasecontainerName] Nombre de contenedor de Azure Storage para su uso por el Administrador de concesión y el punto de comprobación integrado.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-108">{string} [leasecontainerName] Azure Storage container name for use by built-in lease and checkpoint manager.</span></span>
  optional: true
  syntax:
    content: 'leasecontainerName?: string'
    return:
      type:
      - string
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorOptions.leaseManager
  name: leaseManager
  fullName: leaseManager
  children: []
  langs:
  - typeScript
  type: property
  summary: '<span data-ttu-id="6d4b0-109">{LeaseManager} [LeaseManager] Un administrador para administrar las concesiones.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-109">{LeaseManager} [LeaseManager] A manager to manage leases.</span></span> <span data-ttu-id="6d4b0-110">Predeterminado: BlobLeaseManager.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-110">Default: BlobLeaseManager.</span></span>'
  optional: true
  syntax:
    content: 'leaseManager?: LeaseManager'
    return:
      type:
      - azure-event-processor-host.LeaseManager
  package: azure-event-processor-host
- uid: azure-event-processor-host.EventProcessorOptions.storageBlobPrefix
  name: storageBlobPrefix
  fullName: storageBlobPrefix
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="6d4b0-111">{cadena} [storageBlobPrefix] Prefijo que se usa al asignar nombres a blobs dentro del contenedor de almacenamiento.</span><span class="sxs-lookup"><span data-stu-id="6d4b0-111">{string} [storageBlobPrefix] Prefix used when naming blobs within the storage container.</span></span>
  optional: true
  syntax:
    content: 'storageBlobPrefix?: string'
    return:
      type:
      - string
  package: azure-event-processor-host
references:
- uid: azure-event-processor-host.LeaseManager
  spec.typeScript:
  - name: LeaseManager
    fullName: LeaseManager
    uid: azure-event-processor-host.LeaseManager
