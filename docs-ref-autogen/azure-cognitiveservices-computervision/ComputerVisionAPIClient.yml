### YamlMime:UniversalReference
ms.openlocfilehash: 496552af79989c144ce96db561de8b0882be0c21
ms.sourcegitcommit: 506ba44827323385ad0fd81cd14f70c52fd0371e
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/22/2018
ms.locfileid: "40480815"
items:
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient
  name: ComputerVisionAPIClient
  fullName: ComputerVisionAPIClient
  children:
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  - azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  langs:
  - typeScript
  type: class
  summary: ''
  extends:
    name: ServiceClient
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen.  Dentro de la solicitud, hay un parámetro opcional que le permite elegir las características que desea devolver.  De forma predeterminada, se devuelven las categorías de la imagen en la respuesta.'
  syntax:
    content: 'function analyzeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_2
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen.  Dentro de la solicitud, hay un parámetro opcional que le permite elegir las características que desea devolver.  De forma predeterminada, se devuelven las categorías de la imagen en la respuesta.'
  syntax:
    content: 'function analyzeImage(url: string, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImage_1
  name: analyzeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen.  Dentro de la solicitud, hay un parámetro opcional que le permite elegir las características que desea devolver.  De forma predeterminada, se devuelven las categorías de la imagen en la respuesta.'
  syntax:
    content: 'function analyzeImage(url: string, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        El contenido específico de dominio para que reconozca. Los valores posibles incluyen: «Celebrities», «Puntos de referencia»
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_1
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomain_2
  name: analyzeImageByDomain
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomain(model: string, url: string, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        El contenido específico de dominio para que reconozca.
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_1
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStream_2
  name: analyzeImageByDomainInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomainInStream(model: string, image: stream.Readable, options: function, callback: ServiceCallback<DomainModelResults>)'
    parameters:
    - id: model
      type:
      - string
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.DomainModelResults>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainInStreamWithHttpOperationResponse
  name: analyzeImageByDomainInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomainInStreamWithHttpOperationResponse(model: string, image: stream.Readable, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        El contenido específico de dominio para que reconozca.
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageByDomainWithHttpOperationResponse
  name: analyzeImageByDomainWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación reconoce contenido dentro de una imagen mediante la aplicación de un modelo específico de dominio.  La lista de modelos específicos del dominio que son compatibles con Computer Vision API puede obtenerse mediante la solicitud GET/Models, ubicada.  Actualmente, la API proporciona solo un único modelo específico de dominio: celebridades. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.

    Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.
  syntax:
    content: 'function analyzeImageByDomainWithHttpOperationResponse(model: string, url: string, options?: function)'
    parameters:
    - id: model
      type:
      - string
      description: >
        El contenido específico de dominio para que reconozca. Los valores posibles incluyen: «Celebrities», «Puntos de referencia»
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen.
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_1
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen.
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStream_2
  name: analyzeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen.
  syntax:
    content: 'function analyzeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageAnalysis>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageInStreamWithHttpOperationResponse
  name: analyzeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen.
  syntax:
    content: 'function analyzeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.analyzeImageWithHttpOperationResponse
  name: analyzeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación extrae un amplio conjunto de características visuales basadas en el contenido de la imagen. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen.  Dentro de la solicitud, hay un parámetro opcional que le permite elegir las características que desea devolver.  De forma predeterminada, se devuelven las categorías de la imagen en la respuesta.'
  syntax:
    content: 'function analyzeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.azureRegion
  name: azureRegion
  fullName: azureRegion
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'azureRegion: string'
    return:
      type:
      - string
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.constructor
  name: ComputerVisionAPIClient
  children: []
  type: constructor
  langs:
  - typeScript
  summary: ''
  syntax:
    content: 'new ComputerVisionAPIClient(credentials: ServiceClientCredentials, azureRegion: string, options?: ServiceClientOptions)'
    parameters:
    - id: credentials
      type:
      - ServiceClientCredentials
      description: >
        Credenciales de suscripción que identifican la suscripción de cliente.
    - id: azureRegion
      type:
      - string
      description: >
        Regiones de Azure admitidas para puntos de conexión de Cognitive Services. Los valores posibles son: 'westus', 'westeurope', 'southeastasia', 'eastus2', 'westcentralus', 'westus2', 'eastus', 'southcentralus', 'northeurope', 'eastasia', 'australiaeast', 'brazilsouth'
    - id: options
      type:
      - ServiceClientOptions
      description: ''
      optional: true
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.credentials
  name: credentials
  fullName: credentials
  children: []
  langs:
  - typeScript
  type: property
  summary: ''
  syntax:
    content: 'credentials: ServiceClientCredentials'
    return:
      type:
      - ServiceClientCredentials
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_1
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImage(url: string, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImage_2
  name: describeImage
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImage(url: string, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_1
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStream_2
  name: describeImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<ImageDescription>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ImageDescription>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageInStreamWithHttpOperationResponse
  name: describeImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.describeImageWithHttpOperationResponse
  name: describeImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación genera una descripción de una imagen en lenguaje natural con frases completas.  La descripción se basa en una colección de etiquetas de contenido, que también son devueltos por la operación. Puede generarse más de una descripción de cada imagen.  Las descripciones se ordenan por su puntuación de confianza. Todas las descripciones están disponibles en inglés. Se admiten dos métodos de entrada: (1) cargar una imagen o (2) especifica una dirección URL de imagen. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function describeImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_1
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail_2
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnail
  name: generateThumbnail
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnail(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Ancho de la miniatura. Debe estar entre 1 y 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Alto de la miniatura. Debe estar entre 1 y

        1024. Mínimo recomendado de 50.
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Ancho de la miniatura. Debe estar entre 1 y 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Alto de la miniatura. Debe estar entre 1 y

        1024. Mínimo recomendado de 50.
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_1
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStream_2
  name: generateThumbnailInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnailInStream(width: number, height: number, image: stream.Readable, options: function, callback: ServiceCallback<stream.Readable>)'
    parameters:
    - id: width
      type:
      - number
      description: ''
    - id: height
      type:
      - number
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<stream.Readable>
      description: ''
    return:
      type:
      - Promise<stream.Readable>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailInStreamWithHttpOperationResponse
  name: generateThumbnailInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnailInStreamWithHttpOperationResponse(width: number, height: number, image: stream.Readable, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Ancho de la miniatura. Debe estar entre 1 y 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Alto de la miniatura. Debe estar entre 1 y

        1024. Mínimo recomendado de 50.
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.generateThumbnailWithHttpOperationResponse
  name: generateThumbnailWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Esta operación genera una imagen en miniatura con el especificado por el usuario ancho y alto. De forma predeterminada, el servicio analiza la imagen, identifica la región de interés (ROI) y genera las coordenadas de recorte inteligentes según el ROI.

    Recorte inteligente ayuda al especificar una relación de aspecto que difiere de la imagen de entrada. Una respuesta correcta contiene el binario de la imagen en miniatura. Si se produjo un error en la solicitud, la respuesta contiene un código de error y un mensaje para ayudar a determinar qué salió mal.
  syntax:
    content: 'function generateThumbnailWithHttpOperationResponse(width: number, height: number, url: string, options?: function)'
    parameters:
    - id: width
      type:
      - number
      description: >
        Ancho de la miniatura. Debe estar entre 1 y 1024.

        Mínimo recomendado de 50.
    - id: height
      type:
      - number
      description: >
        Alto de la miniatura. Debe estar entre 1 y

        1024. Mínimo recomendado de 50.
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<stream.Readable>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta interfaz se usa para obtener el resultado de la operación de texto. La dirección URL de esta interfaz se debe recuperar del campo 'Operation-Location' devuelto desde la interfaz de reconocer texto.
  syntax:
    content: 'function getTextOperationResult(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        Identificador de la operación de texto que se devuelve en la respuesta de la 'reconocer texto manuscrito Text'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_2
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta interfaz se usa para obtener el resultado de la operación de texto. La dirección URL de esta interfaz se debe recuperar del campo 'Operation-Location' devuelto desde la interfaz de reconocer texto.
  syntax:
    content: 'function getTextOperationResult(operationId: string, options: function, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResult_1
  name: getTextOperationResult
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta interfaz se usa para obtener el resultado de la operación de texto. La dirección URL de esta interfaz se debe recuperar del campo 'Operation-Location' devuelto desde la interfaz de reconocer texto.
  syntax:
    content: 'function getTextOperationResult(operationId: string, callback: ServiceCallback<TextOperationResult>)'
    parameters:
    - id: operationId
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TextOperationResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.getTextOperationResultWithHttpOperationResponse
  name: getTextOperationResultWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta interfaz se usa para obtener el resultado de la operación de texto. La dirección URL de esta interfaz se debe recuperar del campo 'Operation-Location' devuelto desde la interfaz de reconocer texto.
  syntax:
    content: 'function getTextOperationResultWithHttpOperationResponse(operationId: string, options?: function)'
    parameters:
    - id: operationId
      type:
      - string
      description: >
        Identificador de la operación de texto que se devuelve en la respuesta de la 'reconocer texto manuscrito Text'
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación devuelve la lista de modelos específicos del dominio que son compatibles con Computer Vision API.  Actualmente, la API solo admite un modelo específico de dominio: un módulo de reconocimiento de celebridades. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function listModels(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_2
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación devuelve la lista de modelos específicos del dominio que son compatibles con Computer Vision API.  Actualmente, la API solo admite un modelo específico de dominio: un módulo de reconocimiento de celebridades. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function listModels(options: function, callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModels_1
  name: listModels
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación devuelve la lista de modelos específicos del dominio que son compatibles con Computer Vision API.  Actualmente, la API solo admite un modelo específico de dominio: un módulo de reconocimiento de celebridades. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function listModels(callback: ServiceCallback<ListModelsResult>)'
    parameters:
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.ListModelsResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.listModelsWithHttpOperationResponse
  name: listModelsWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: 'Esta operación devuelve la lista de modelos específicos del dominio que son compatibles con Computer Vision API.  Actualmente, la API solo admite un modelo específico de dominio: un módulo de reconocimiento de celebridades. Se devolverá una respuesta correcta en JSON.  Si se produjo un error en la solicitud, la respuesta contendrá un código de error y un mensaje para ayudar a comprender qué salió mal.'
  syntax:
    content: 'function listModelsWithHttpOperationResponse(options?: function)'
    parameters:
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_1
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detectar si la orientación del texto en la imagen. Con detectOrientation = true el OCR servicio intenta detectar la orientación de la imagen y corríjalo antes de procesamiento posterior (por ejemplo, si está al revés).
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedText_2
  name: recognizePrintedText
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedText(detectOrientation: boolean, url: string, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detectar si la orientación del texto en la imagen. Con detectOrientation = true el OCR servicio intenta detectar la orientación de la imagen y corríjalo antes de procesamiento posterior (por ejemplo, si está al revés).
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_1
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStream_2
  name: recognizePrintedTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStream(detectOrientation: boolean, image: stream.Readable, options: function, callback: ServiceCallback<OcrResult>)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: ''
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.OcrResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextInStreamWithHttpOperationResponse
  name: recognizePrintedTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedTextInStreamWithHttpOperationResponse(detectOrientation: boolean, image: stream.Readable, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detectar si la orientación del texto en la imagen. Con detectOrientation = true el OCR servicio intenta detectar la orientación de la imagen y corríjalo antes de procesamiento posterior (por ejemplo, si está al revés).
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizePrintedTextWithHttpOperationResponse
  name: recognizePrintedTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: >-
    Reconocimiento óptico de caracteres (OCR) detecta texto impreso de una imagen y extrae los caracteres reconocidos en una secuencia de caracteres que el equipo pueda usar.

    Cuando se realiza correctamente, se devolverá los resultados de reconocimiento óptico de caracteres. En caso de error, se devolverá el código de error junto con un mensaje de error. El código de error puede ser uno de InvalidImageUrl, InvalidImageFormat, InvalidImageSize, NotSupportedImage, NotSupportedLanguage o InternalServerError.
  syntax:
    content: 'function recognizePrintedTextWithHttpOperationResponse(detectOrientation: boolean, url: string, options?: function)'
    parameters:
    - id: detectOrientation
      type:
      - boolean
      description: >
        Detectar si la orientación del texto en la imagen. Con detectOrientation = true el OCR servicio intenta detectar la orientación de la imagen y corríjalo antes de procesamiento posterior (por ejemplo, si está al revés).
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeText(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_2
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeText(url: string, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeText_1
  name: recognizeText
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeText(url: string, callback: ServiceCallback<void>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_1
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStream_2
  name: recognizeTextInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeTextInStream(image: stream.Readable, options: function, callback: ServiceCallback<void>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<void>
      description: ''
    return:
      type:
      - Promise<void>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextInStreamWithHttpOperationResponse
  name: recognizeTextInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeTextInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.recognizeTextWithHttpOperationResponse
  name: recognizeTextWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Reconocer la operación de texto. Cuando se usa la interfaz de reconocer texto, la respuesta contiene un campo denominado "Operation-Location". El campo "Operation-Location" contiene la dirección URL que debe usar para la operación de obtener el resultado de operación de texto a mano.
  syntax:
    content: 'function recognizeTextWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<void>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImage(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_1
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImage(url: string, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImage_2
  name: tagImage
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImage(url: string, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: url
      type:
      - string
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_1
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStream_2
  name: tagImageInStream
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImageInStream(image: stream.Readable, options: function, callback: ServiceCallback<TagResult>)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: ''
    - id: options
      type:
      - function
      description: ''
    - id: callback
      type:
      - ServiceCallback<azure-cognitiveservices-computervision.TagResult>
      description: ''
    return:
      type:
      - Promise<azure-cognitiveservices-computervision.TagResult>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageInStreamWithHttpOperationResponse
  name: tagImageInStreamWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImageInStreamWithHttpOperationResponse(image: stream.Readable, options?: function)'
    parameters:
    - id: image
      type:
      - stream.Readable
      description: >
        Una secuencia de imagen.
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
- uid: azure-cognitiveservices-computervision.ComputerVisionAPIClient.tagImageWithHttpOperationResponse
  name: tagImageWithHttpOperationResponse
  children: []
  type: method
  langs:
  - typeScript
  summary: Esta operación genera una lista de palabras o etiquetas, que son relevantes para el contenido de la imagen proporcionada. Computer Vision API puede devolver etiquetas basan en objetos, vivir seres vivos, paisajes o acciones que se encuentran en las imágenes. A diferencia de las categorías, las etiquetas no se organizan según un sistema de clasificación jerárquica, pero se corresponden con el contenido de la imagen. Las etiquetas pueden contener sugerencias para evitar la ambigüedad o proporcionar un contexto, por ejemplo cello"etiqueta" puede estar acompañada por la sugerencia "instrumentos musicales". Todas las etiquetas están en inglés.
  syntax:
    content: 'function tagImageWithHttpOperationResponse(url: string, options?: function)'
    parameters:
    - id: url
      type:
      - string
      description: "\n"
    - id: options
      type:
      - function
      description: ''
      optional: true
    return:
      type:
      - Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  package: azure-cognitiveservices-computervision
references:
- uid: Promise<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageAnalysis>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>'
    fullName: '>'
- uid: Promise<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.DomainModelResults>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.DomainModelResults>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: DomainModelResults
    fullName: DomainModelResults
    uid: azure-cognitiveservices-computervision.DomainModelResults
  - name: '>>'
    fullName: '>>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageAnalysis>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageAnalysis
    fullName: ImageAnalysis
    uid: azure-cognitiveservices-computervision.ImageAnalysis
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ImageDescription>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ImageDescription>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ImageDescription
    fullName: ImageDescription
    uid: azure-cognitiveservices-computervision.ImageDescription
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TextOperationResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TextOperationResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TextOperationResult
    fullName: TextOperationResult
    uid: azure-cognitiveservices-computervision.TextOperationResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.ListModelsResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.ListModelsResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: ListModelsResult
    fullName: ListModelsResult
    uid: azure-cognitiveservices-computervision.ListModelsResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.OcrResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.OcrResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: OcrResult
    fullName: OcrResult
    uid: azure-cognitiveservices-computervision.OcrResult
  - name: '>>'
    fullName: '>>'
- uid: Promise<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: Promise<
    fullName: Promise<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: ServiceCallback<azure-cognitiveservices-computervision.TagResult>
  spec.typeScript:
  - name: ServiceCallback<
    fullName: ServiceCallback<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>'
    fullName: '>'
- uid: Promise<HttpOperationResponse<azure-cognitiveservices-computervision.TagResult>>
  spec.typeScript:
  - name: Promise<HttpOperationResponse<
    fullName: Promise<HttpOperationResponse<
  - name: TagResult
    fullName: TagResult
    uid: azure-cognitiveservices-computervision.TagResult
  - name: '>>'
    fullName: '>>'
