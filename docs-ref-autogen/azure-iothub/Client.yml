### YamlMime:UniversalReference
ms.openlocfilehash: 62975cd56b2bf89e7158907fce365b3a6cebdf51
ms.sourcegitcommit: 286f52ea38c9eff2ec9d4f8cabeb86f62fd9c406
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/22/2018
ms.locfileid: "41683354"
items:
- uid: azure-iothub.Client
  name: Client
  fullName: Client
  children:
  - azure-iothub.Client.Callback
  - azure-iothub.Client.close
  - azure-iothub.Client.fromConnectionString
  - azure-iothub.Client.fromSharedAccessSignature
  - azure-iothub.Client.getFeedbackReceiver
  - azure-iothub.Client.getFileNotificationReceiver
  - azure-iothub.Client.invokeDeviceMethod
  - azure-iothub.Client.invokeDeviceMethod_1
  - azure-iothub.Client.open
  - azure-iothub.Client.send
  - azure-iothub.Client.setRetryPolicy
  - azure-iothub.Client.TransportCtor
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="5fa01-101">El cliente del servicio IoT Hub se utiliza para comunicarse con dispositivos a través de un centro de IoT de Azure.</span><span class="sxs-lookup"><span data-stu-id="5fa01-101">The IoT Hub service client is used to communicate with devices through an Azure IoT hub.</span></span>

    <span data-ttu-id="5fa01-102">Permite que el usuario SDK:</span><span class="sxs-lookup"><span data-stu-id="5fa01-102">It lets the SDK user:</span></span>
      - <span data-ttu-id="5fa01-103">enviar el dispositivo a nube (también conocido como comandos) a los dispositivos: los comandos están en cola en IoT Hub y entregados de forma asincrónica solo cuando el dispositivo está conectado.</span><span class="sxs-lookup"><span data-stu-id="5fa01-103">send device-to-cloud (also known as commands) to devices: commands are queued on IoT Hub and delivered asynchronously only when the device is connected.</span></span> <span data-ttu-id="5fa01-104">Solo 50 comandos se pueden poner en cola por dispositivo.</span><span class="sxs-lookup"><span data-stu-id="5fa01-104">Only 50 commands can be queued per device.</span></span>
      - <span data-ttu-id="5fa01-105">invocar métodos directos en dispositivos (que sólo funcionará si el dispositivo está conectado actualmente: es una manera sincrónica de la comunicación con el dispositivo)</span><span class="sxs-lookup"><span data-stu-id="5fa01-105">invoke direct methods on devices (which will work only if the device is currently connected: it's a synchronous way of communicating with the device)</span></span>
      - <span data-ttu-id="5fa01-106">escuchar mensajes de comentarios enviados por los dispositivos para los comandos anteriores.</span><span class="sxs-lookup"><span data-stu-id="5fa01-106">listen for feedback messages sent by devices for previous commands.</span></span>
      - <span data-ttu-id="5fa01-107">escuchar las notificaciones de carga de archivos desde dispositivos.</span><span class="sxs-lookup"><span data-stu-id="5fa01-107">listen for file upload notifications from devices.</span></span>
    <span data-ttu-id="5fa01-108">Los usuarios deben crear nuevos <xref:azure-iothub.Client> instancias llamando a uno de los métodos de fábrica, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) o [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), para crear un cliente de servicio de IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="5fa01-108">Users should create new <xref:azure-iothub.Client> instances by calling one of the factory methods, [fromConnectionString](xref:azure-iothub.Client.fromConnectionString) or [fromSharedAccessSignature](xref:azure-iothub.Client.fromSharedAccessSignature), to create an IoT Hub service Client.</span></span>
  extends:
    name: EventEmitter
  package: azure-iothub
- uid: azure-iothub.Client.Callback
  name: Callback
  fullName: Callback<T>
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
- uid: azure-iothub.Client.close
  name: close
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-109">Cierra la conexión a IoT hub.</span><span class="sxs-lookup"><span data-stu-id="5fa01-109">Closes the connection to an IoT hub.</span></span>
  syntax:
    content: 'function close(done?: Callback<Disconnected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Disconnected>
      description: >
        <span data-ttu-id="5fa01-110">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="5fa01-110">The function to call when the operation is complete.</span></span> <span data-ttu-id="5fa01-111">`done` se pasará a un argumento de objeto de Error, que será null si la operación se completó correctamente.</span><span class="sxs-lookup"><span data-stu-id="5fa01-111">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.fromConnectionString
  name: fromConnectionString
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-112">Crea a un cliente del servicio IoT Hub de la cadena de conexión determinado mediante el transporte predeterminado (Amqp) o el especificado en el segundo argumento.</span><span class="sxs-lookup"><span data-stu-id="5fa01-112">Creates an IoT Hub service client from the given connection string using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromConnectionString(connStr: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: connStr
      type:
      - string
      description: <span data-ttu-id="5fa01-113">Una cadena de conexión que encapsula permisos de "conexión de dispositivo" en un centro de IoT.</span><span class="sxs-lookup"><span data-stu-id="5fa01-113">A connection string which encapsulates "device connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.fromSharedAccessSignature
  name: fromSharedAccessSignature
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-114">Crea a un cliente del servicio IoT Hub de la firma de acceso compartido determinado mediante el transporte predeterminado (Amqp) o con el especificado en el segundo argumento.</span><span class="sxs-lookup"><span data-stu-id="5fa01-114">Creates an IoT Hub service client from the given shared access signature using the default transport (Amqp) or the one specified in the second argument.</span></span>
  syntax:
    content: 'static function fromSharedAccessSignature(sharedAccessSignature: string, transportCtor?: Client.TransportCtor)'
    parameters:
    - id: sharedAccessSignature
      type:
      - string
      description: <span data-ttu-id="5fa01-115">Una firma de acceso compartido que encapsula permisos de "conexión de servicio" en un centro de IoT.</span><span class="sxs-lookup"><span data-stu-id="5fa01-115">A shared access signature which encapsulates "service connect" permissions on an IoT hub.</span></span>
    - id: transportCtor
      type:
      - azure-iothub.Client.TransportCtor
      description: ''
      optional: true
    return:
      type:
      - azure-iothub.Client
  package: azure-iothub
- uid: azure-iothub.Client.getFeedbackReceiver
  name: getFeedbackReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-116">Devuelve un objeto AmqpReceiver que emite eventos cuando se reciben nuevos mensajes de comentarios por el cliente.</span><span class="sxs-lookup"><span data-stu-id="5fa01-116">Returns a AmqpReceiver object which emits events when new feedback messages are received by the client.</span></span>
  syntax:
    content: 'function getFeedbackReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="5fa01-117">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="5fa01-117">The function to call when the operation is complete.</span></span> <span data-ttu-id="5fa01-118">`done` se llamará con dos argumentos: un objeto de Error (puede ser null) y un objeto AmqpReceiver.</span><span class="sxs-lookup"><span data-stu-id="5fa01-118">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.getFileNotificationReceiver
  name: getFileNotificationReceiver
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-119">Devuelve un objeto AmqpReceiver que emite eventos cuando se reciben nuevas notificaciones de carga de archivo por el cliente.</span><span class="sxs-lookup"><span data-stu-id="5fa01-119">Returns a AmqpReceiver object which emits events when new file upload notifications are received by the client.</span></span>
  syntax:
    content: 'function getFileNotificationReceiver(done: Callback<ServiceReceiver>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
      description: >
        <span data-ttu-id="5fa01-120">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="5fa01-120">The function to call when the operation is complete.</span></span> <span data-ttu-id="5fa01-121">`done` se llamará con dos argumentos: un objeto de Error (puede ser null) y un objeto AmqpReceiver.</span><span class="sxs-lookup"><span data-stu-id="5fa01-121">`done` will be called with two arguments: an Error object (can be null) and a AmqpReceiver object.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-122">Invoca un método en un determinado dispositivo o módulo.</span><span class="sxs-lookup"><span data-stu-id="5fa01-122">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="5fa01-123">El identificador de una identidad de dispositivo existente.</span><span class="sxs-lookup"><span data-stu-id="5fa01-123">The identifier of an existing device identity.</span></span>
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: >
        <span data-ttu-id="5fa01-124">La devolución de llamada con el resultado de la ejecución del método.</span><span class="sxs-lookup"><span data-stu-id="5fa01-124">The callback to call with the result of the method execution.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.invokeDeviceMethod_1
  name: invokeDeviceMethod
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-125">Invoca un método en un determinado dispositivo o módulo.</span><span class="sxs-lookup"><span data-stu-id="5fa01-125">Invokes a method on a particular device or module.</span></span>
  syntax:
    content: 'function invokeDeviceMethod(deviceId: string, moduleId: string, methodParams: DeviceMethodParams, done?: Callback<any>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: ''
    - id: moduleId
      type:
      - string
      description: ''
    - id: methodParams
      type:
      - azure-iothub.DeviceMethodParams
      description: ''
    - id: done
      type:
      - azure-iothub.Client.Callback<any>
      description: ''
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.open
  name: open
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-126">Se abre la conexión a IoT hub.</span><span class="sxs-lookup"><span data-stu-id="5fa01-126">Opens the connection to an IoT hub.</span></span>
  syntax:
    content: 'function open(done?: Callback<Connected>)'
    parameters:
    - id: done
      type:
      - azure-iothub.Client.Callback<Connected>
      description: >
        <span data-ttu-id="5fa01-127">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="5fa01-127">The function to call when the operation is complete.</span></span> <span data-ttu-id="5fa01-128">`done` se pasará a un argumento de objeto de Error, que será null si la operación se completó correctamente.</span><span class="sxs-lookup"><span data-stu-id="5fa01-128">`done` will be passed an Error object argument, which will be null if the operation completed successfully.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.send
  name: send
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-129">Envía un mensaje a un dispositivo.</span><span class="sxs-lookup"><span data-stu-id="5fa01-129">Sends a message to a device.</span></span>
  syntax:
    content: 'function send(deviceId: string, message: Message | Message.BufferConvertible, done?: Callback<MessageEnqueued>)'
    parameters:
    - id: deviceId
      type:
      - string
      description: <span data-ttu-id="5fa01-130">El identificador de una identidad de dispositivo existente.</span><span class="sxs-lookup"><span data-stu-id="5fa01-130">The identifier of an existing device identity.</span></span>
    - id: message
      type:
      - Message | Message.BufferConvertible
      description: >-
        <span data-ttu-id="5fa01-131">Cuerpo del mensaje que se enviará al dispositivo.</span><span class="sxs-lookup"><span data-stu-id="5fa01-131">The body of the message to send to the device.</span></span>

        <span data-ttu-id="5fa01-132">Si `message` no es de tipo [mensaje](xref:azure-iot-common.Message), se convertirá.</span><span class="sxs-lookup"><span data-stu-id="5fa01-132">If `message` is not of type [Message](xref:azure-iot-common.Message), it will be converted.</span></span>
    - id: done
      type:
      - azure-iothub.Client.Callback<MessageEnqueued>
      description: >
        <span data-ttu-id="5fa01-133">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="5fa01-133">The function to call when the operation is complete.</span></span> <span data-ttu-id="5fa01-134">`done` se llamará con dos argumentos: un objeto de Error (puede ser null) y un objeto de respuesta específica del transporte útil para la depuración o de registro.</span><span class="sxs-lookup"><span data-stu-id="5fa01-134">`done` will be called with two arguments: an Error object (can be null) and a transport-specific response object useful for logging or debugging.</span></span>
      optional: true
  package: azure-iothub
- uid: azure-iothub.Client.setRetryPolicy
  name: setRetryPolicy
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="5fa01-135">Establecer la directiva utilizada por el cliente para volver a intentar las operaciones de red.</span><span class="sxs-lookup"><span data-stu-id="5fa01-135">Set the policy used by the client to retry network operations.</span></span>
  syntax:
    content: 'function setRetryPolicy(policy: RetryPolicy)'
    parameters:
    - id: policy
      type:
      - RetryPolicy
      description: >
        <span data-ttu-id="5fa01-136">directiva utilizada para reintentar las operaciones (p ej.</span><span class="sxs-lookup"><span data-stu-id="5fa01-136">policy used to retry operations (eg.</span></span> <span data-ttu-id="5fa01-137">Abrir, enviar, etcetera.).</span><span class="sxs-lookup"><span data-stu-id="5fa01-137">open, send, etc.).</span></span>

        <span data-ttu-id="5fa01-138">El SDK incluye 2 directivas "integradas": ExponentialBackoffWithJitter (valor predeterminado) y NoRetry (para cancelar cualquier forma de reintento).</span><span class="sxs-lookup"><span data-stu-id="5fa01-138">The SDK comes with 2 "built-in" policies: ExponentialBackoffWithJitter (default) and NoRetry (to cancel any form of retry).</span></span> <span data-ttu-id="5fa01-139">El usuario también puede pasar su propio objeto siempre que lo implemente 2 métodos:-shouldRetry(err: Error): booleano: indica si se debe reintentar una operación en función del tipo de error - nextRetryTimeout (retryCount: número de limitado: un valor booleano): número: devuelve el tiempo de espera (en milisegundos) antes de reintentar se basa en el pasado número de intentos (retryCount) y el hecho de que el error es un error de limitación o no.</span><span class="sxs-lookup"><span data-stu-id="5fa01-139">The user can also pass its own object as long as it implements 2 methods: - shouldRetry(err: Error): boolean : indicates whether an operation should be retried based on the error type - nextRetryTimeout(retryCount: number, throttled: boolean): number : returns the time to wait (in milliseconds) before retrying based on the past number of attempts (retryCount) and the fact that the error is a throttling error or not.</span></span>
  package: azure-iothub
- uid: azure-iothub.Client.TransportCtor
  name: TransportCtor
  fullName: TransportCtor
  children: []
  langs:
  - typeScript
  type: class
  summary: "\n"
  package: azure-iothub
references:
- uid: azure-iothub.Client.Callback<MessageAbandoned>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageAbandoned>
    fullName: <MessageAbandoned>
- uid: azure-iothub.Client.Callback<MessageCompleted>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageCompleted>
    fullName: <MessageCompleted>
- uid: azure-iothub.Client.Callback<MessageRejected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageRejected>
    fullName: <MessageRejected>
- uid: azure-iothub.Client.Callback<Connected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Connected>
    fullName: <Connected>
- uid: azure-iothub.Client.Callback<Disconnected>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <Disconnected>
    fullName: <Disconnected>
- uid: azure-iothub.Client.Callback<azure-iothub.Client.ServiceReceiver>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <
    fullName: <
  - name: ServiceReceiver
    fullName: ServiceReceiver
    uid: azure-iothub.Client.ServiceReceiver
  - name: '>'
    fullName: '>'
- uid: azure-iothub.Client.Callback<MessageEnqueued>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <MessageEnqueued>
    fullName: <MessageEnqueued>
- uid: azure-iothub.DeviceMethodParams
  spec.typeScript:
  - name: DeviceMethodParams
    fullName: DeviceMethodParams
    uid: azure-iothub.DeviceMethodParams
- uid: azure-iothub.Client.Callback<any>
  spec.typeScript:
  - name: Callback
    fullName: Callback
    uid: azure-iothub.Client.Callback
  - name: <any>
    fullName: <any>
- uid: azure-iothub.Client.TransportCtor
  spec.typeScript:
  - name: TransportCtor
    fullName: TransportCtor
    uid: azure-iothub.Client.TransportCtor
- uid: azure-iothub.Client
  spec.typeScript:
  - name: Client
    fullName: Client
    uid: azure-iothub.Client
