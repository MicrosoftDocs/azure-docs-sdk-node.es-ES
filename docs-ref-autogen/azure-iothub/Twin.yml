### YamlMime:UniversalReference
ms.openlocfilehash: 73f78523bc9d6043fd2f037ef98f58f71c167428
ms.sourcegitcommit: 87f95d58ec8de16e115bc344efeb084afc346b74
ms.translationtype: MT
ms.contentlocale: es-ES
ms.lasthandoff: 08/12/2018
ms.locfileid: "40076655"
items:
- uid: azure-iothub.Twin
  name: Twin
  fullName: Twin
  children:
  - azure-iothub.Twin.deviceId
  - azure-iothub.Twin.etag
  - azure-iothub.Twin.get
  - azure-iothub.Twin.moduleId
  - azure-iothub.Twin.properties
  - azure-iothub.Twin.tags
  - azure-iothub.Twin.toJSON
  - azure-iothub.Twin.constructor
  - azure-iothub.Twin.update
  langs:
  - typeScript
  type: class
  summary: >
    <span data-ttu-id="ca88a-101">Un dispositivo gemelo es el documento que describe el estado de un dispositivo que se almacena mediante un centro de IoT de Azure y está disponible incluso si el dispositivo está desconectado.</span><span class="sxs-lookup"><span data-stu-id="ca88a-101">A Device Twin is document describing the state of a device that is stored by an Azure IoT hub and is available even if the device is offline.</span></span>

    <span data-ttu-id="ca88a-102">Se basa aproximadamente 3 secciones:</span><span class="sxs-lookup"><span data-stu-id="ca88a-102">It is built around 3 sections:</span></span>
      - <span data-ttu-id="ca88a-103">Etiquetas: pares de clave/valor solo es accesible desde el lado del servicio</span><span class="sxs-lookup"><span data-stu-id="ca88a-103">Tags: key/value pairs only accessible from the service side</span></span>
      - <span data-ttu-id="ca88a-104">Las propiedades deseadas: actualiza un servicio y recibidos por el dispositivo</span><span class="sxs-lookup"><span data-stu-id="ca88a-104">Desired Properties: updated by a service and received by the device</span></span>
      - <span data-ttu-id="ca88a-105">Las propiedades notificadas: actualiza el dispositivo y recibidos por el servicio.</span><span class="sxs-lookup"><span data-stu-id="ca88a-105">Reported Properties: updated by the device and received by the service.</span></span>
    <span data-ttu-id="ca88a-106">Tenga en cuenta que aunque es una posibilidad, las propiedades deseadas y notificadas no deben coincidir y que la lógica para sincronizar estas dos colecciones, si es necesario, se deja al usuario SDK de.</span><span class="sxs-lookup"><span data-stu-id="ca88a-106">Note that although it is a possibility, desired and reported properties do not have to match and that the logic to sync these two collections, if necessary, is left to the user of the SDK.</span></span>


    <span data-ttu-id="ca88a-107">Para obtener más información, consulte [descripción dispositivos gemelos](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).</span><span class="sxs-lookup"><span data-stu-id="ca88a-107">For more information see [Understanding Device Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).</span></span>


    <span data-ttu-id="ca88a-108">El método recomendado para obtener un <xref:azure-iothub.Twin> para un dispositivo específico es usar el <xref:azure-iothub.Registry.getTwin> método.</span><span class="sxs-lookup"><span data-stu-id="ca88a-108">The recommended way to obtain a <xref:azure-iothub.Twin> for a specific device is to use the <xref:azure-iothub.Registry.getTwin> method.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.deviceId
  name: deviceId
  fullName: deviceId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="ca88a-109">Identificador único de la identidad del dispositivo asociada con el gemelo, tal como existe en el registro de identidad de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="ca88a-109">Unique identifier of the device identity associated with the twin, as it exists in the device identity registry.</span></span>
  syntax:
    content: 'deviceId: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.etag
  name: etag
  fullName: etag
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="ca88a-110">Etiqueta usada en la simultaneidad optimista para evitar varias ediciones paralelas del dispositivo gemelo.</span><span class="sxs-lookup"><span data-stu-id="ca88a-110">Tag used in optimistic concurrency to avoid multiple parallel editions of the device twin.</span></span>
  syntax:
    content: 'etag: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.get
  name: get
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ca88a-111">Obtiene la versión más reciente de este dispositivo gemelo desde el servicio IoT Hub.</span><span class="sxs-lookup"><span data-stu-id="ca88a-111">Gets the latest version of this device twin from the IoT Hub service.</span></span>
  syntax:
    content: 'function get(done: Callback<Twin>)'
    parameters:
    - id: done
      type:
      - Callback<azure-iothub.Twin>
      description: >
        <span data-ttu-id="ca88a-112">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="ca88a-112">The function to call when the operation is complete.</span></span> <span data-ttu-id="ca88a-113">`done` se llamará con tres argumentos: un objeto de Error (puede ser null), un [gemelo](xref:azure-iothub.Twin) objeto que representa la identidad del dispositivo creada y un objeto de respuesta específica del transporte útil para la depuración o de registro.</span><span class="sxs-lookup"><span data-stu-id="ca88a-113">`done` will be called with three arguments: an Error object (can be null), a [Twin](xref:azure-iothub.Twin) object representing the created device identity, and a transport-specific response object useful for logging or debugging.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.moduleId
  name: moduleId
  fullName: moduleId
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="ca88a-114">Identificador de módulo para el módulo asociado con el gemelo, tal como existe en el registro de identidad de dispositivo.</span><span class="sxs-lookup"><span data-stu-id="ca88a-114">Module identifier for the module associated with the twin, as it exists in the device identity registry.</span></span>
  optional: true
  syntax:
    content: 'moduleId?: string'
    return:
      type:
      - string
  package: azure-iothub
- uid: azure-iothub.Twin.properties
  name: properties
  fullName: properties
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="ca88a-115">Las propiedades deseadas y notificadas de dictionnaries (respectivamente en `properties.desired` y `properties.reported`).</span><span class="sxs-lookup"><span data-stu-id="ca88a-115">The desired and reported properties dictionnaries (respectively in `properties.desired` and `properties.reported`).</span></span>
  syntax:
    content: 'properties: function'
    return:
      type:
      - function
  package: azure-iothub
- uid: azure-iothub.Twin.tags
  name: tags
  fullName: tags
  children: []
  langs:
  - typeScript
  type: property
  summary: <span data-ttu-id="ca88a-116">Colección de pares clave/valor que solo está disponible en el lado del servicio y puede usarse en las consultas para encontrar dispositivos específicos.</span><span class="sxs-lookup"><span data-stu-id="ca88a-116">Collection of key/value pairs that is available only on the service side and can be used in queries to find specific devices.</span></span>
  syntax:
    content: 'tags: function'
    return:
      type:
      - function
  package: azure-iothub
- uid: azure-iothub.Twin.toJSON
  name: toJSON
  children: []
  type: method
  langs:
  - typeScript
  summary: ''
  syntax:
    content: function toJSON()
    parameters: []
    return:
      type:
      - object
  package: azure-iothub
- uid: azure-iothub.Twin.constructor
  name: Twin
  children: []
  type: constructor
  langs:
  - typeScript
  summary: <span data-ttu-id="ca88a-117">Crea una instancia de un nuevo <xref:azure-iothub.Twin>.</span><span class="sxs-lookup"><span data-stu-id="ca88a-117">Instantiates a new <xref:azure-iothub.Twin>.</span></span> <span data-ttu-id="ca88a-118">La manera recomendada para obtener un nuevo <xref:azure-iothub.Twin> objeto consiste en usar el <xref:azure-iothub.Registry.getTwin> método.</span><span class="sxs-lookup"><span data-stu-id="ca88a-118">The recommended way to get a new <xref:azure-iothub.Twin> object is to use the <xref:azure-iothub.Registry.getTwin> method.</span></span>
  syntax:
    content: 'new Twin(device: DeviceIdentity | string, registryClient: Registry)'
    parameters:
    - id: device
      type:
      - DeviceIdentity | string
      description: <span data-ttu-id="ca88a-119">Una cadena de identificador de dispositivo o un objeto que describe el dispositivo.</span><span class="sxs-lookup"><span data-stu-id="ca88a-119">A device identifier string or an object describing the device.</span></span> <span data-ttu-id="ca88a-120">Si un objeto, debe contener una propiedad deviceId.</span><span class="sxs-lookup"><span data-stu-id="ca88a-120">If an Object, it must contain a deviceId property.</span></span>
    - id: registryClient
      type:
      - azure-iothub.Registry
      description: >
        <span data-ttu-id="ca88a-121">El cliente del registro HTTP utilizado para ejecutar llamadas API de REST.</span><span class="sxs-lookup"><span data-stu-id="ca88a-121">The HTTP registry client used to execute REST API calls.</span></span>
  package: azure-iothub
- uid: azure-iothub.Twin.update
  name: update
  children: []
  type: method
  langs:
  - typeScript
  summary: <span data-ttu-id="ca88a-122">Actualizar al dispositivo gemelo con la revisión proporcionada como argumento.</span><span class="sxs-lookup"><span data-stu-id="ca88a-122">Update the device twin with the patch provided as argument.</span></span>
  syntax:
    content: 'function update(patch: any, done: Callback<Twin>)'
    parameters:
    - id: patch
      type:
      - any
      description: <span data-ttu-id="ca88a-123">Objeto que contiene los nuevos valores se aplican a este dispositivo gemelo.</span><span class="sxs-lookup"><span data-stu-id="ca88a-123">Object containing the new values to apply to this device twin.</span></span>
    - id: done
      type:
      - Callback<azure-iothub.Twin>
      description: >
        <span data-ttu-id="ca88a-124">Función que llama una vez completada la operación.</span><span class="sxs-lookup"><span data-stu-id="ca88a-124">The function to call when the operation is complete.</span></span> <span data-ttu-id="ca88a-125">`done` se llamará con tres argumentos: un objeto de Error (puede ser null), un [gemelo](xref:azure-iothub.Twin) objeto que representa la identidad del dispositivo creada y un objeto de respuesta específica del transporte útil para la depuración o de registro.</span><span class="sxs-lookup"><span data-stu-id="ca88a-125">`done` will be called with three arguments: an Error object (can be null), a [Twin](xref:azure-iothub.Twin) object representing the created device identity, and a transport-specific response object useful for logging or debugging.</span></span>
  package: azure-iothub
references:
- uid: azure-iothub.Registry
  spec.typeScript:
  - name: Registry
    fullName: Registry
    uid: azure-iothub.Registry
- uid: Callback<azure-iothub.Twin>
  spec.typeScript:
  - name: Callback<
    fullName: Callback<
  - name: Twin
    fullName: Twin
    uid: azure-iothub.Twin
  - name: '>'
    fullName: '>'
